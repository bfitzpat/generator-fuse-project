Setting client pid to 36120
SERVER: changeConfig: settings -> {"xml":{},"java":{"home":null,"jdt":{"ls":{"vmargs":"-noverify -Xmx1G -XX:+UseG1GC -XX:+UseStringDeduplication"}},"errors":{"incompleteClasspath":{"severity":"warning"}},"configuration":{"updateBuildConfiguration":"interactive","maven":{"userSettings":null}},"trace":{"server":"off"},"import":{"gradle":{"enabled":true},"maven":{"enabled":true},"exclusions":["**/node_modules/**","**/.metadata/**","**/archetype-resources/**","**/META-INF/maven/**"]},"referencesCodeLens":{"enabled":false},"signatureHelp":{"enabled":false},"implementationsCodeLens":{"enabled":false},"format":{"enabled":true,"settings":{"url":null,"profile":null},"comments":{"enabled":true},"onType":{"enabled":true}},"saveActions":{"organizeImports":false},"contentProvider":{"preferred":null},"autobuild":{"enabled":true},"completion":{"overwrite":true,"guessMethodArguments":false,"favoriteStaticMembers":["org.junit.Assert.*","org.junit.Assume.*","org.junit.jupiter.api.Assertions.*","org.junit.jupiter.api.Assumptions.*","org.junit.jupiter.api.DynamicContainer.*","org.junit.jupiter.api.DynamicTest.*"],"importOrder":["java","javax","com","org"]},"progressReports":{"enabled":true},"debug":{"logLevel":"warn","settings":{"showHex":false,"showStaticVariables":true,"showQualifiedNames":false,"maxStringLength":0,"enableHotCodeReplace":true}},"test":{"report":{"position":"sideView"}}}}
didOpen: TextDocumentItem [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
  languageId = "xml"
  version = 1
  text = "<?xml version="1.0" encoding="UTF-8"?>\r\n<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\r\n	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">\r\n\r\n	<modelVersion>4.0.0</modelVersion>\r\n\r\n	<groupId><%= userProps.package %></groupId>\r\n	<artifactId><%= userProps.name %></artifactId>\r\n	<version>1.0.0-SNAPSHOT</version>\r\n	<packaging>bundle</packaging>\r\n\r\n	<name><%= userProps.name %></name>\r\n\r\n	<licenses>\r\n		<license>\r\n			<name>Apache License, Version 2.0</name>\r\n			<distribution>repo</distribution>\r\n			<url>http://www.apache.org/licenses/LICENSE-2.0.html</url>\r\n		</license>\r\n	</licenses>\r\n\r\n	<properties>\r\n		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\r\n		<version.maven-bundle-plugin>3.2.0</version.maven-bundle-plugin>\r\n\r\n		<!-- the version of the Red Hat Fuse BOM, defining all the dependency versions -->\r\n		<jboss.fuse.bom.version><%= userProps.camelVersion %></jboss.fuse.bom.version>\r\n\r\n		<camel.version><%= userProps.camelVersion %></camel.version>\r\n	</properties>\r\n\r\n	<repositories>\r\n		<repository>\r\n			<id>fuse-public-repository</id>\r\n			<name>FuseSource Community Release Repository</name>\r\n			<url>https://repo.fusesource.com/nexus/content/groups/public</url>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n		</repository>\r\n		<repository>\r\n			<id>red-hat-ga-repository</id>\r\n			<name>Red Hat GA Repository</name>\r\n			<url>https://maven.repository.redhat.com/ga</url>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n		</repository>\r\n		<repository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>red-hat-ea-repository</id>\r\n			<name>Red Hat EA Repository</name>\r\n			<url>https://maven.repository.redhat.com/earlyaccess/all</url>\r\n		</repository>\r\n		<!-- To remove when a long-term version will be available -->\r\n		<repository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>jboss-ea-repository</id>\r\n			<name>Red Hat JBoss Early Access Repository</name>\r\n			<url>http://repository.jboss.org/nexus/content/groups/ea</url>\r\n		</repository>\r\n	</repositories>\r\n\r\n	<pluginRepositories>\r\n		<pluginRepository>\r\n			<id>fuse-public-repository</id>\r\n			<name>FuseSource Community Release Repository</name>\r\n			<url>https://repo.fusesource.com/nexus/content/groups/public</url>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n		</pluginRepository>\r\n		<pluginRepository>\r\n			<id>red-hat-ga-repository</id>\r\n			<name>Red Hat GA Repository</name>\r\n			<url>https://maven.repository.redhat.com/ga</url>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n		</pluginRepository>\r\n				<pluginRepository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>red-hat-ea-repository</id>\r\n			<name>Red Hat EA Repository</name>\r\n			<url>https://maven.repository.redhat.com/earlyaccess/all</url>\r\n		</pluginRepository>\r\n		<!-- To remove when a long-term version will be available -->\r\n		<pluginRepository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>jboss-ea-repository</id>\r\n			<name>Red Hat JBoss Early Access Repository</name>\r\n			<url>http://repository.jboss.org/nexus/content/groups/ea</url>\r\n		</pluginRepository>\r\n	</pluginRepositories>\r\n\r\n	<dependencyManagement>\r\n		<dependencies>\r\n			<dependency>\r\n				<groupId>org.jboss.fuse</groupId>\r\n				<artifactId>jboss-fuse-parent</artifactId>\r\n				<version>${jboss.fuse.bom.version}</version>\r\n				<type>pom</type>\r\n				<scope>import</scope>\r\n			</dependency>\r\n		</dependencies>\r\n	</dependencyManagement>\r\n\r\n	<dependencies>\r\n		<dependency>\r\n			<groupId>org.apache.camel</groupId>\r\n			<artifactId>camel-core</artifactId>\r\n		</dependency>\r\n		<dependency>\r\n			<groupId>org.apache.camel</groupId>\r\n			<artifactId>camel-spring</artifactId>\r\n		</dependency>\r\n\r\n		<!-- logging -->\r\n		<dependency>\r\n			<groupId>org.slf4j</groupId>\r\n			<artifactId>slf4j-api</artifactId>\r\n		</dependency>\r\n		<dependency>\r\n			<groupId>org.slf4j</groupId>\r\n			<artifactId>slf4j-log4j12</artifactId>\r\n		</dependency>\r\n		<dependency>\r\n			<groupId>log4j</groupId>\r\n			<artifactId>log4j</artifactId>\r\n		</dependency>\r\n		<dependency>\r\n			<groupId>commons-logging</groupId>\r\n			<artifactId>commons-logging</artifactId>\r\n		</dependency>\r\n\r\n		<!-- Testing & Camel Plugin -->\r\n		<dependency>\r\n			<groupId>org.apache.camel</groupId>\r\n			<artifactId>camel-test-spring</artifactId>\r\n		</dependency>\r\n	</dependencies>\r\n\r\n	<build>\r\n		<defaultGoal>install</defaultGoal>\r\n		<plugins>\r\n			<plugin>\r\n				<groupId>org.apache.felix</groupId>\r\n				<artifactId>maven-bundle-plugin</artifactId>\r\n				<version>${version.maven-bundle-plugin}</version>\r\n				<extensions>true</extensions>\r\n			</plugin>\r\n			<plugin>\r\n				<groupId>org.apache.maven.plugins</groupId>\r\n				<artifactId>maven-compiler-plugin</artifactId>\r\n				<version>3.7.0</version>\r\n				<configuration>\r\n					<source>1.8</source>\r\n					<target>1.8</target>\r\n				</configuration>\r\n			</plugin>\r\n			<plugin>\r\n				<groupId>org.apache.maven.plugins</groupId>\r\n				<artifactId>maven-resources-plugin</artifactId>\r\n				<version>3.0.2</version>\r\n				<configuration>\r\n					<encoding>UTF-8</encoding>\r\n				</configuration>\r\n			</plugin>\r\n\r\n			<!-- to run the example using mvn camel:run -->\r\n			<plugin>\r\n				<groupId>org.apache.camel</groupId>\r\n				<artifactId>camel-maven-plugin</artifactId>\r\n				<version>${camel.version}</version>\r\n				<configuration>\r\n					<fileApplicationContextUri>src/main/resources/META-INF/spring/camel-context.xml</fileApplicationContextUri>\r\n				</configuration>\r\n			</plugin>\r\n\r\n		</plugins>\r\n	</build>\r\n\r\n	<description>Empty Camel Spring Example</description>\r\n</project>\r\n"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:80)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:117)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:53)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didOpen: TextDocumentItem [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
  languageId = "xml"
  version = 1
  text = ""
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 1; Premature end of file.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:80)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:117)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:53)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
SERVER: changeWatchedFiles: size -> 1
didChange: VersionedTextDocumentIdentifier [
  version = 2
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
didSave: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
SERVER: changeWatchedFiles: size -> 1
didOpen: TextDocumentItem [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/src/main/resources/OSGI-INF/blueprint/camel-context.xml"
  languageId = "xml"
  version = 1
  text = "<?xml version="1.0" encoding="UTF-8"?>\r\n<!--\r\n    Copyright 2014-2017, Red Hat, Inc. and/or its affiliates, and individual\r\n    contributors by the @authors tag. \r\n    Licensed under the Apache License, Version 2.0 (the "License");\r\n    you may not use this file except in compliance with the License.\r\n    You may obtain a copy of the License at\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n    Unless required by applicable law or agreed to in writing, software\r\n    distributed under the License is distributed on an "AS IS" BASIS,\r\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n    See the License for the specific language governing permissions and\r\n    limitations under the License.\r\n-->\r\n<!-- Configures the Camel Context-->\r\n<beans xmlns="http://www.springframework.org/schema/beans"\r\n    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd        http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">\r\n    <camelContext id="_camelContext1" xmlns="http://camel.apache.org/schema/spring">\r\n        <route id="_route1">\r\n        </route>\r\n    </camelContext>\r\n</beans>"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/src/main/resources/OSGI-INF/blueprint/camel-context.xml"
]
didClose: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/src/main/resources/OSGI-INF/blueprint/camel-context.xml"
]
didOpen: TextDocumentItem [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
  languageId = "xml"
  version = 1
  text = "<?xml version="1.0" encoding="UTF-8"?>\r\n<!--\r\n    Copyright 2014-2017, Red Hat, Inc. and/or its affiliates, and individual\r\n    contributors by the @authors tag. \r\n    Licensed under the Apache License, Version 2.0 (the "License");\r\n    you may not use this file except in compliance with the License.\r\n    You may obtain a copy of the License at\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n    Unless required by applicable law or agreed to in writing, software\r\n    distributed under the License is distributed on an "AS IS" BASIS,\r\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n    See the License for the specific language governing permissions and\r\n    limitations under the License.\r\n-->\r\n<!-- Configures the Camel Context-->\r\n<beans xmlns="http://www.springframework.org/schema/beans"\r\n    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd        http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">\r\n    <camelContext id="_camelContext1" xmlns="http://camel.apache.org/schema/spring">\r\n        <route id="_route1">\r\n        </route>\r\n    </camelContext>\r\n</beans>"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
SERVER: changeWatchedFiles: size -> 2
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 2
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 36; columnNumber: 3; The element type "blueprint" must be terminated by the matching end-tag "</blueprint>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:80)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:117)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:53)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 36; columnNumber: 3; The element type "blueprint" must be terminated by the matching end-tag "</blueprint>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:80)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:64)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:46)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didSave: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 36; columnNumber: 3; The element type "blueprint" must be terminated by the matching end-tag "</blueprint>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:80)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:64)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:46)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
SERVER: changeWatchedFiles: size -> 1
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 36; columnNumber: 3; The element type "blueprint" must be terminated by the matching end-tag "</blueprint>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:80)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:64)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:46)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 36; columnNumber: 3; The element type "blueprint" must be terminated by the matching end-tag "</blueprint>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:80)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:64)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:46)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didClose: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
didClose: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
didClose: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
SERVER: changeWatchedFiles: size -> 2
SERVER: changeWatchedFiles: size -> 1
SERVER: changeWatchedFiles: size -> 2
SERVER: changeWatchedFiles: size -> 1
SERVER: changeWatchedFiles: size -> 2
SERVER: changeWatchedFiles: size -> 1
SERVER: changeWatchedFiles: size -> 2
SERVER: changeWatchedFiles: size -> 1
didOpen: TextDocumentItem [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
  languageId = "xml"
  version = 1
  text = "<?xml version="1.0" encoding="UTF-8"?>\r\n<!--\r\n    Copyright 2014-2017, Red Hat, Inc. and/or its affiliates, and individual\r\n    contributors by the @authors tag. \r\n\r\n    Licensed under the Apache License, Version 2.0 (the "License");\r\n    you may not use this file except in compliance with the License.\r\n    You may obtain a copy of the License at\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n    Unless required by applicable law or agreed to in writing, software\r\n    distributed under the License is distributed on an "AS IS" BASIS,\r\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n    See the License for the specific language governing permissions and\r\n    limitations under the License.\r\n-->\r\n<!--\r\n   This is the OSGi Blueprint XML file defining the Camel context and routes.  Because the file is in the\r\n   OSGI-INF/blueprint directory inside our JAR, it will be automatically activated as soon as the bundle is installed.\r\n\r\n   The root element for any OSGi Blueprint file is 'blueprint' - you also see the namespace definitions for both the Blueprint\r\n   and the Camel namespaces.\r\n-->\r\n<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"\r\n    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 https://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd                            http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">\r\n    <!--\r\n      The namespace for the camelContext element in Blueprint is 'https://camel.apache.org/schema/blueprint'. Additionally,\r\n      we can also define namespace prefixes we want to use them in the XPath expressions in our CBR.\r\n\r\n      While it is not required to assign id's to the <camelContext/> and <route/> elements, it is a good idea\r\n      to set those for runtime management purposes (logging, JMX MBeans, ...)\r\n    -->\r\n    <camelContext id="_context1" xmlns="http://camel.apache.org/schema/blueprint">\r\n        <route id="_route1">\r\n        </route>\r\n    </camelContext>\r\n</beans>"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 36; columnNumber: 3; The element type "blueprint" must be terminated by the matching end-tag "</blueprint>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:80)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:117)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:53)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 36; columnNumber: 3; The element type "blueprint" must be terminated by the matching end-tag "</blueprint>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:80)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:64)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:46)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
SERVER: changeWatchedFiles: size -> 2
SERVER: changeWatchedFiles: size -> 1
didOpen: TextDocumentItem [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/backup/pom.xml"
  languageId = "xml"
  version = 1
  text = "<?xml version="1.0" encoding="UTF-8"?>\r\n<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\r\n	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">\r\n\r\n	<modelVersion>4.0.0</modelVersion>\r\n\r\n	<groupId><%= userProps.package %></groupId>\r\n	<artifactId><%= userProps.name %></artifactId>\r\n	<version>1.0.0-SNAPSHOT</version>\r\n	<packaging>bundle</packaging>\r\n\r\n	<name><%= userProps.name %></name>\r\n\r\n	<licenses>\r\n		<license>\r\n			<name>Apache License, Version 2.0</name>\r\n			<distribution>repo</distribution>\r\n			<url>http://www.apache.org/licenses/LICENSE-2.0.html</url>\r\n		</license>\r\n	</licenses>\r\n\r\n	<properties>\r\n		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\r\n		<version.maven-bundle-plugin>3.2.0</version.maven-bundle-plugin>\r\n\r\n		<!-- the version of the Red Hat Fuse BOM, defining all the dependency versions -->\r\n		<jboss.fuse.bom.version><%= userProps.camelVersion %></jboss.fuse.bom.version>\r\n\r\n		<camel.version><%= userProps.camelVersion %></camel.version>\r\n	</properties>\r\n\r\n	<repositories>\r\n		<repository>\r\n			<id>fuse-public-repository</id>\r\n			<name>FuseSource Community Release Repository</name>\r\n			<url>https://repo.fusesource.com/nexus/content/groups/public</url>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n		</repository>\r\n		<repository>\r\n			<id>red-hat-ga-repository</id>\r\n			<name>Red Hat GA Repository</name>\r\n			<url>https://maven.repository.redhat.com/ga</url>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n		</repository>\r\n		<repository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>red-hat-ea-repository</id>\r\n			<name>Red Hat EA Repository</name>\r\n			<url>https://maven.repository.redhat.com/earlyaccess/all</url>\r\n		</repository>\r\n		<!-- To remove when a long-term version will be available -->\r\n		<repository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>jboss-ea-repository</id>\r\n			<name>Red Hat JBoss Early Access Repository</name>\r\n			<url>http://repository.jboss.org/nexus/content/groups/ea</url>\r\n		</repository>\r\n	</repositories>\r\n\r\n	<pluginRepositories>\r\n		<pluginRepository>\r\n			<id>fuse-public-repository</id>\r\n			<name>FuseSource Community Release Repository</name>\r\n			<url>https://repo.fusesource.com/nexus/content/groups/public</url>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n		</pluginRepository>\r\n		<pluginRepository>\r\n			<id>red-hat-ga-repository</id>\r\n			<name>Red Hat GA Repository</name>\r\n			<url>https://maven.repository.redhat.com/ga</url>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n		</pluginRepository>\r\n				<pluginRepository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>red-hat-ea-repository</id>\r\n			<name>Red Hat EA Repository</name>\r\n			<url>https://maven.repository.redhat.com/earlyaccess/all</url>\r\n		</pluginRepository>\r\n		<!-- To remove when a long-term version will be available -->\r\n		<pluginRepository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>jboss-ea-repository</id>\r\n			<name>Red Hat JBoss Early Access Repository</name>\r\n			<url>http://repository.jboss.org/nexus/content/groups/ea</url>\r\n		</pluginRepository>\r\n	</pluginRepositories>\r\n\r\n	<dependencyManagement>\r\n		<dependencies>\r\n			<dependency>\r\n				<groupId>org.jboss.fuse</groupId>\r\n				<artifactId>jboss-fuse-parent</artifactId>\r\n				<version>${jboss.fuse.bom.version}</version>\r\n				<type>pom</type>\r\n				<scope>import</scope>\r\n			</dependency>\r\n		</dependencies>\r\n	</dependencyManagement>\r\n\r\n	<dependencies>\r\n		<dependency>\r\n			<groupId>org.apache.camel</groupId>\r\n			<artifactId>camel-core</artifactId>\r\n		</dependency>\r\n		<dependency>\r\n			<groupId>org.apache.camel</groupId>\r\n			<artifactId>camel-spring</artifactId>\r\n		</dependency>\r\n\r\n		<!-- logging -->\r\n		<dependency>\r\n			<groupId>org.slf4j</groupId>\r\n			<artifactId>slf4j-api</artifactId>\r\n		</dependency>\r\n		<dependency>\r\n			<groupId>org.slf4j</groupId>\r\n			<artifactId>slf4j-log4j12</artifactId>\r\n		</dependency>\r\n		<dependency>\r\n			<groupId>log4j</groupId>\r\n			<artifactId>log4j</artifactId>\r\n		</dependency>\r\n		<dependency>\r\n			<groupId>commons-logging</groupId>\r\n			<artifactId>commons-logging</artifactId>\r\n		</dependency>\r\n\r\n		<!-- Testing & Camel Plugin -->\r\n		<dependency>\r\n			<groupId>org.apache.camel</groupId>\r\n			<artifactId>camel-test-spring</artifactId>\r\n		</dependency>\r\n	</dependencies>\r\n\r\n	<build>\r\n		<defaultGoal>install</defaultGoal>\r\n		<plugins>\r\n			<plugin>\r\n				<groupId>org.apache.felix</groupId>\r\n				<artifactId>maven-bundle-plugin</artifactId>\r\n				<version>${version.maven-bundle-plugin}</version>\r\n				<extensions>true</extensions>\r\n			</plugin>\r\n			<plugin>\r\n				<groupId>org.apache.maven.plugins</groupId>\r\n				<artifactId>maven-compiler-plugin</artifactId>\r\n				<version>3.7.0</version>\r\n				<configuration>\r\n					<source>1.8</source>\r\n					<target>1.8</target>\r\n				</configuration>\r\n			</plugin>\r\n			<plugin>\r\n				<groupId>org.apache.maven.plugins</groupId>\r\n				<artifactId>maven-resources-plugin</artifactId>\r\n				<version>3.0.2</version>\r\n				<configuration>\r\n					<encoding>UTF-8</encoding>\r\n				</configuration>\r\n			</plugin>\r\n\r\n			<!-- to run the example using mvn camel:run -->\r\n			<plugin>\r\n				<groupId>org.apache.camel</groupId>\r\n				<artifactId>camel-maven-plugin</artifactId>\r\n				<version>${camel.version}</version>\r\n				<configuration>\r\n					<fileApplicationContextUri>src/main/resources/META-INF/spring/camel-context.xml</fileApplicationContextUri>\r\n				</configuration>\r\n			</plugin>\r\n\r\n		</plugins>\r\n	</build>\r\n\r\n	<description>Empty Camel Spring Example</description>\r\n</project>\r\n"
]
SERVER: changeWatchedFiles: size -> 1
SERVER: changeWatchedFiles: size -> 1
didClose: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/backup/pom.xml"
]
didClose: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
SERVER: changeWatchedFiles: size -> 1
SERVER: changeWatchedFiles: size -> 2
SERVER: changeWatchedFiles: size -> 1
SERVER: changeWatchedFiles: size -> 1
SERVER: changeWatchedFiles: size -> 2
SERVER: changeWatchedFiles: size -> 1
SERVER: changeWatchedFiles: size -> 2
SERVER: changeWatchedFiles: size -> 1
SERVER: changeWatchedFiles: size -> 2
SERVER: changeWatchedFiles: size -> 1
SERVER: changeWatchedFiles: size -> 2
SERVER: changeWatchedFiles: size -> 1
SERVER: changeWatchedFiles: size -> 2
didOpen: TextDocumentItem [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/output/pom.xml"
  languageId = "xml"
  version = 1
  text = "<?xml version="1.0" encoding="UTF-8"?>\r\n<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\r\n	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">\r\n\r\n	<modelVersion>4.0.0</modelVersion>\r\n\r\n	<groupId>com.output</groupId>\r\n	<artifactId>output</artifactId>\r\n	<version>1.0.0-SNAPSHOT</version>\r\n	<packaging>bundle</packaging>\r\n\r\n	<name>output</name>\r\n\r\n	<licenses>\r\n		<license>\r\n			<name>Apache License, Version 2.0</name>\r\n			<distribution>repo</distribution>\r\n			<url>http://www.apache.org/licenses/LICENSE-2.0.html</url>\r\n		</license>\r\n	</licenses>\r\n\r\n	<properties>\r\n		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\r\n		<version.maven-bundle-plugin>3.2.0</version.maven-bundle-plugin>\r\n\r\n		<!-- the version of the Red Hat Fuse BOM, defining all the dependency versions -->\r\n		<jboss.fuse.bom.version>2.18.1</jboss.fuse.bom.version>\r\n\r\n		<camel.version>2.18.1</camel.version>\r\n	</properties>\r\n\r\n	<repositories>\r\n		<repository>\r\n			<id>fuse-public-repository</id>\r\n			<name>FuseSource Community Release Repository</name>\r\n			<url>https://repo.fusesource.com/nexus/content/groups/public</url>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n		</repository>\r\n		<repository>\r\n			<id>red-hat-ga-repository</id>\r\n			<name>Red Hat GA Repository</name>\r\n			<url>https://maven.repository.redhat.com/ga</url>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n		</repository>\r\n		<repository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>red-hat-ea-repository</id>\r\n			<name>Red Hat EA Repository</name>\r\n			<url>https://maven.repository.redhat.com/earlyaccess/all</url>\r\n		</repository>\r\n		<!-- To remove when a long-term version will be available -->\r\n		<repository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>jboss-ea-repository</id>\r\n			<name>Red Hat JBoss Early Access Repository</name>\r\n			<url>http://repository.jboss.org/nexus/content/groups/ea</url>\r\n		</repository>\r\n	</repositories>\r\n\r\n	<pluginRepositories>\r\n		<pluginRepository>\r\n			<id>fuse-public-repository</id>\r\n			<name>FuseSource Community Release Repository</name>\r\n			<url>https://repo.fusesource.com/nexus/content/groups/public</url>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n		</pluginRepository>\r\n		<pluginRepository>\r\n			<id>red-hat-ga-repository</id>\r\n			<name>Red Hat GA Repository</name>\r\n			<url>https://maven.repository.redhat.com/ga</url>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n		</pluginRepository>\r\n				<pluginRepository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>red-hat-ea-repository</id>\r\n			<name>Red Hat EA Repository</name>\r\n			<url>https://maven.repository.redhat.com/earlyaccess/all</url>\r\n		</pluginRepository>\r\n		<!-- To remove when a long-term version will be available -->\r\n		<pluginRepository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>jboss-ea-repository</id>\r\n			<name>Red Hat JBoss Early Access Repository</name>\r\n			<url>http://repository.jboss.org/nexus/content/groups/ea</url>\r\n		</pluginRepository>\r\n	</pluginRepositories>\r\n\r\n	<dependencyManagement>\r\n		<dependencies>\r\n			<dependency>\r\n				<groupId>org.jboss.fuse</groupId>\r\n				<artifactId>jboss-fuse-parent</artifactId>\r\n				<version>${jboss.fuse.bom.version}</version>\r\n				<type>pom</type>\r\n				<scope>import</scope>\r\n			</dependency>\r\n		</dependencies>\r\n	</dependencyManagement>\r\n\r\n	<dependencies>\r\n		<dependency>\r\n			<groupId>org.apache.camel</groupId>\r\n			<artifactId>camel-core</artifactId>\r\n		</dependency>\r\n		<dependency>\r\n			<groupId>org.apache.camel</groupId>\r\n			<artifactId>camel-spring</artifactId>\r\n		</dependency>\r\n\r\n		<!-- logging -->\r\n		<dependency>\r\n			<groupId>org.slf4j</groupId>\r\n			<artifactId>slf4j-api</artifactId>\r\n		</dependency>\r\n		<dependency>\r\n			<groupId>org.slf4j</groupId>\r\n			<artifactId>slf4j-log4j12</artifactId>\r\n		</dependency>\r\n		<dependency>\r\n			<groupId>log4j</groupId>\r\n			<artifactId>log4j</artifactId>\r\n		</dependency>\r\n		<dependency>\r\n			<groupId>commons-logging</groupId>\r\n			<artifactId>commons-logging</artifactId>\r\n		</dependency>\r\n\r\n		<!-- Testing & Camel Plugin -->\r\n		<dependency>\r\n			<groupId>org.apache.camel</groupId>\r\n			<artifactId>camel-test-spring</artifactId>\r\n		</dependency>\r\n	</dependencies>\r\n\r\n	<build>\r\n		<defaultGoal>install</defaultGoal>\r\n		<plugins>\r\n			<plugin>\r\n				<groupId>org.apache.felix</groupId>\r\n				<artifactId>maven-bundle-plugin</artifactId>\r\n				<version>${version.maven-bundle-plugin}</version>\r\n				<extensions>true</extensions>\r\n			</plugin>\r\n			<plugin>\r\n				<groupId>org.apache.maven.plugins</groupId>\r\n				<artifactId>maven-compiler-plugin</artifactId>\r\n				<version>3.7.0</version>\r\n				<configuration>\r\n					<source>1.8</source>\r\n					<target>1.8</target>\r\n				</configuration>\r\n			</plugin>\r\n			<plugin>\r\n				<groupId>org.apache.maven.plugins</groupId>\r\n				<artifactId>maven-resources-plugin</artifactId>\r\n				<version>3.0.2</version>\r\n				<configuration>\r\n					<encoding>UTF-8</encoding>\r\n				</configuration>\r\n			</plugin>\r\n\r\n			<!-- to run the example using mvn camel:run -->\r\n			<plugin>\r\n				<groupId>org.apache.camel</groupId>\r\n				<artifactId>camel-maven-plugin</artifactId>\r\n				<version>${camel.version}</version>\r\n				<configuration>\r\n					<fileApplicationContextUri>src/main/resources/META-INF/spring/camel-context.xml</fileApplicationContextUri>\r\n				</configuration>\r\n			</plugin>\r\n\r\n		</plugins>\r\n	</build>\r\n\r\n	<description>Empty Camel Spring Example</description>\r\n</project>\r\n"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/output/pom.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/output/pom.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/output/pom.xml"
]
didClose: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/output/pom.xml"
]
didOpen: TextDocumentItem [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
  languageId = "xml"
  version = 1
  text = "<?xml version="1.0" encoding="UTF-8"?>\r\n<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\r\n	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">\r\n\r\n	<modelVersion>4.0.0</modelVersion>\r\n\r\n	<groupId><%= userProps.package %></groupId>\r\n	<artifactId><%= userProps.name %></artifactId>\r\n	<version>1.0.0-SNAPSHOT</version>\r\n	<packaging>bundle</packaging>\r\n\r\n	<name><%= userProps.name %></name>\r\n\r\n	<licenses>\r\n		<license>\r\n			<name>Apache License, Version 2.0</name>\r\n			<distribution>repo</distribution>\r\n			<url>http://www.apache.org/licenses/LICENSE-2.0.html</url>\r\n		</license>\r\n	</licenses>\r\n\r\n	<properties>\r\n		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\r\n		<version.maven-bundle-plugin>3.2.0</version.maven-bundle-plugin>\r\n\r\n		<!-- the version of the Red Hat Fuse BOM, defining all the dependency versions -->\r\n		<jboss.fuse.bom.version><%= userProps.camelVersion %></jboss.fuse.bom.version>\r\n\r\n		<camel.version><%= userProps.camelVersion %></camel.version>\r\n	</properties>\r\n\r\n	<repositories>\r\n		<repository>\r\n			<id>fuse-public-repository</id>\r\n			<name>FuseSource Community Release Repository</name>\r\n			<url>https://repo.fusesource.com/nexus/content/groups/public</url>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n		</repository>\r\n		<repository>\r\n			<id>red-hat-ga-repository</id>\r\n			<name>Red Hat GA Repository</name>\r\n			<url>https://maven.repository.redhat.com/ga</url>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n		</repository>\r\n		<repository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>red-hat-ea-repository</id>\r\n			<name>Red Hat EA Repository</name>\r\n			<url>https://maven.repository.redhat.com/earlyaccess/all</url>\r\n		</repository>\r\n		<!-- To remove when a long-term version will be available -->\r\n		<repository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>jboss-ea-repository</id>\r\n			<name>Red Hat JBoss Early Access Repository</name>\r\n			<url>http://repository.jboss.org/nexus/content/groups/ea</url>\r\n		</repository>\r\n	</repositories>\r\n\r\n	<pluginRepositories>\r\n		<pluginRepository>\r\n			<id>fuse-public-repository</id>\r\n			<name>FuseSource Community Release Repository</name>\r\n			<url>https://repo.fusesource.com/nexus/content/groups/public</url>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n		</pluginRepository>\r\n		<pluginRepository>\r\n			<id>red-hat-ga-repository</id>\r\n			<name>Red Hat GA Repository</name>\r\n			<url>https://maven.repository.redhat.com/ga</url>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n		</pluginRepository>\r\n				<pluginRepository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>red-hat-ea-repository</id>\r\n			<name>Red Hat EA Repository</name>\r\n			<url>https://maven.repository.redhat.com/earlyaccess/all</url>\r\n		</pluginRepository>\r\n		<!-- To remove when a long-term version will be available -->\r\n		<pluginRepository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>jboss-ea-repository</id>\r\n			<name>Red Hat JBoss Early Access Repository</name>\r\n			<url>http://repository.jboss.org/nexus/content/groups/ea</url>\r\n		</pluginRepository>\r\n	</pluginRepositories>\r\n\r\n	<dependencyManagement>\r\n		<dependencies>\r\n			<dependency>\r\n				<groupId>org.jboss.fuse</groupId>\r\n				<artifactId>jboss-fuse-parent</artifactId>\r\n				<version>${jboss.fuse.bom.version}</version>\r\n				<type>pom</type>\r\n				<scope>import</scope>\r\n			</dependency>\r\n		</dependencies>\r\n	</dependencyManagement>\r\n\r\n	<dependencies>\r\n		<dependency>\r\n			<groupId>org.apache.camel</groupId>\r\n			<artifactId>camel-core</artifactId>\r\n		</dependency>\r\n		<dependency>\r\n			<groupId>org.apache.camel</groupId>\r\n			<artifactId>camel-spring</artifactId>\r\n		</dependency>\r\n\r\n		<!-- logging -->\r\n		<dependency>\r\n			<groupId>org.slf4j</groupId>\r\n			<artifactId>slf4j-api</artifactId>\r\n		</dependency>\r\n		<dependency>\r\n			<groupId>org.slf4j</groupId>\r\n			<artifactId>slf4j-log4j12</artifactId>\r\n		</dependency>\r\n		<dependency>\r\n			<groupId>log4j</groupId>\r\n			<artifactId>log4j</artifactId>\r\n		</dependency>\r\n		<dependency>\r\n			<groupId>commons-logging</groupId>\r\n			<artifactId>commons-logging</artifactId>\r\n		</dependency>\r\n\r\n		<!-- Testing & Camel Plugin -->\r\n		<dependency>\r\n			<groupId>org.apache.camel</groupId>\r\n			<artifactId>camel-test-spring</artifactId>\r\n		</dependency>\r\n	</dependencies>\r\n\r\n	<build>\r\n		<defaultGoal>install</defaultGoal>\r\n		<plugins>\r\n			<plugin>\r\n				<groupId>org.apache.felix</groupId>\r\n				<artifactId>maven-bundle-plugin</artifactId>\r\n				<version>${version.maven-bundle-plugin}</version>\r\n				<extensions>true</extensions>\r\n			</plugin>\r\n			<plugin>\r\n				<groupId>org.apache.maven.plugins</groupId>\r\n				<artifactId>maven-compiler-plugin</artifactId>\r\n				<version>3.7.0</version>\r\n				<configuration>\r\n					<source>1.8</source>\r\n					<target>1.8</target>\r\n				</configuration>\r\n			</plugin>\r\n			<plugin>\r\n				<groupId>org.apache.maven.plugins</groupId>\r\n				<artifactId>maven-resources-plugin</artifactId>\r\n				<version>3.0.2</version>\r\n				<configuration>\r\n					<encoding>UTF-8</encoding>\r\n				</configuration>\r\n			</plugin>\r\n\r\n			<!-- to run the example using mvn camel:run -->\r\n			<plugin>\r\n				<groupId>org.apache.camel</groupId>\r\n				<artifactId>camel-maven-plugin</artifactId>\r\n				<version>${camel.version}</version>\r\n				<configuration>\r\n					<fileApplicationContextUri>src/main/resources/META-INF/spring/camel-context.xml</fileApplicationContextUri>\r\n				</configuration>\r\n			</plugin>\r\n\r\n		</plugins>\r\n	</build>\r\n\r\n	<description>Empty Camel Spring Example</description>\r\n</project>\r\n"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:80)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:117)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:53)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didClose: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
SERVER: changeWatchedFiles: size -> 1
SERVER: changeWatchedFiles: size -> 2
didOpen: TextDocumentItem [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/output/pom.xml"
  languageId = "xml"
  version = 1
  text = "<?xml version="1.0" encoding="UTF-8"?>\r\n<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"\r\n    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">\r\n  <modelVersion>4.0.0</modelVersion>\r\n  <groupId>com.mycompany</groupId>\r\n  <artifactId>say-blueprint</artifactId>\r\n  <version>1.0.0-SNAPSHOT</version>\r\n  <packaging>bundle</packaging>\r\n  <name>Say Rest DSL Example Blueprint</name>\r\n  <licenses>\r\n    <license>\r\n      <name>Apache License, Version 2.0</name>\r\n      <url>http://www.apache.org/licenses/LICENSE-2.0.html</url>\r\n      <distribution>repo</distribution>\r\n    </license>\r\n  </licenses>\r\n  <properties>\r\n    <camel.version>2.21.0.fuse-000008</camel.version>\r\n    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\r\n    <version.maven-bundle-plugin>3.2.0</version.maven-bundle-plugin>\r\n    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n  </properties>\r\n  <dependencies>\r\n    <dependency>\r\n      <groupId>org.apache.camel</groupId>\r\n      <artifactId>camel-core</artifactId>\r\n      <version>${camel.version}</version>\r\n    </dependency>\r\n    <dependency>\r\n      <groupId>org.apache.camel</groupId>\r\n      <artifactId>camel-blueprint</artifactId>\r\n      <version>${camel.version}</version>\r\n    </dependency>\r\n    <dependency>\r\n      <groupId>org.apache.camel</groupId>\r\n      <artifactId>camel-netty-http</artifactId>\r\n      <version>${camel.version}</version>\r\n    </dependency>\r\n    <dependency>\r\n      <groupId>org.apache.camel</groupId>\r\n      <artifactId>camel-test-blueprint</artifactId>\r\n      <version>${camel.version}</version>\r\n      <scope>test</scope>\r\n      <exclusions>\r\n        <exclusion>\r\n          <artifactId>org.apache.felix.fileinstall</artifactId>\r\n          <groupId>org.apache.felix</groupId>\r\n        </exclusion>\r\n      </exclusions>\r\n    </dependency>\r\n  </dependencies>\r\n  <repositories>\r\n    <repository>\r\n      <releases>\r\n        <enabled>true</enabled>\r\n        <updatePolicy>never</updatePolicy>\r\n      </releases>\r\n      <snapshots>\r\n        <enabled>false</enabled>\r\n      </snapshots>\r\n      <id>fuse-public-repository</id>\r\n      <name>FuseSource Community Release Repository</name>\r\n      <url>https://repo.fusesource.com/nexus/content/groups/public</url>\r\n    </repository>\r\n    <repository>\r\n      <releases>\r\n        <enabled>true</enabled>\r\n        <updatePolicy>never</updatePolicy>\r\n      </releases>\r\n      <snapshots>\r\n        <enabled>false</enabled>\r\n      </snapshots>\r\n      <id>red-hat-ga-repository</id>\r\n      <name>Red Hat GA Repository</name>\r\n      <url>https://maven.repository.redhat.com/ga</url>\r\n    </repository>\r\n  </repositories>\r\n  <pluginRepositories>\r\n    <pluginRepository>\r\n      <releases>\r\n        <enabled>true</enabled>\r\n        <updatePolicy>never</updatePolicy>\r\n      </releases>\r\n      <snapshots>\r\n        <enabled>false</enabled>\r\n      </snapshots>\r\n      <id>fuse-public-repository</id>\r\n      <name>FuseSource Community Release Repository</name>\r\n      <url>https://repo.fusesource.com/nexus/content/groups/public</url>\r\n    </pluginRepository>\r\n    <pluginRepository>\r\n      <releases>\r\n        <enabled>true</enabled>\r\n        <updatePolicy>never</updatePolicy>\r\n      </releases>\r\n      <snapshots>\r\n        <enabled>false</enabled>\r\n      </snapshots>\r\n      <id>red-hat-ga-repository</id>\r\n      <name>Red Hat GA Repository</name>\r\n      <url>https://maven.repository.redhat.com/ga</url>\r\n    </pluginRepository>\r\n  </pluginRepositories>\r\n  <build>\r\n    <defaultGoal>install</defaultGoal>\r\n    <plugins>\r\n      <plugin>\r\n        <groupId>org.apache.felix</groupId>\r\n        <artifactId>maven-bundle-plugin</artifactId>\r\n        <version>${version.maven-bundle-plugin}</version>\r\n        <extensions>true</extensions>\r\n        <configuration>\r\n          <instructions>\r\n            <Bundle-SymbolicName>sayblueprint</Bundle-SymbolicName>\r\n            <Bundle-Name>Say Rest DSL Example Blueprint [say-blueprint]</Bundle-Name></instructions></configuration>\r\n      </plugin>\r\n      <plugin>\r\n        <artifactId>maven-compiler-plugin</artifactId>\r\n        <version>3.5.1</version>\r\n        <configuration>\r\n          <source>1.8</source>\r\n          <target>1.8</target>\r\n        </configuration>\r\n      </plugin>\r\n      <plugin>\r\n        <artifactId>maven-resources-plugin</artifactId>\r\n        <version>3.0.1</version>\r\n        <configuration>\r\n          <encoding>UTF-8</encoding>\r\n        </configuration>\r\n      </plugin>\r\n      <plugin>\r\n        <groupId>org.apache.camel</groupId>\r\n        <artifactId>camel-maven-plugin</artifactId>\r\n        <version>${camel.version}</version>\r\n        <configuration>\r\n          <useBlueprint>true</useBlueprint>\r\n        </configuration>\r\n      </plugin>\r\n    </plugins>\r\n  </build>\r\n  <description>Basic Rest DSL example in Blueprint using the Camel netty-http component. </description>\r\n</project>\r\n"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/output/pom.xml"
]
didClose: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/output/pom.xml"
]
didOpen: TextDocumentItem [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
  languageId = "xml"
  version = 1
  text = "<?xml version="1.0" encoding="UTF-8"?>\r\n<!--\r\n    Copyright 2014-2017, Red Hat, Inc. and/or its affiliates, and individual\r\n    contributors by the @authors tag. \r\n    Licensed under the Apache License, Version 2.0 (the "License");\r\n    you may not use this file except in compliance with the License.\r\n    You may obtain a copy of the License at\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n    Unless required by applicable law or agreed to in writing, software\r\n    distributed under the License is distributed on an "AS IS" BASIS,\r\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n    See the License for the specific language governing permissions and\r\n    limitations under the License.\r\n-->\r\n<!-- Configures the Camel Context-->\r\n<beans xmlns="http://www.springframework.org/schema/beans"\r\n    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd        http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">\r\n    <camelContext id="_camelContext1" xmlns="http://camel.apache.org/schema/spring">\r\n        <route id="_route1">\r\n        </route>\r\n    </camelContext>\r\n</beans>"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
didClose: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
didOpen: TextDocumentItem [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
  languageId = "xml"
  version = 1
  text = "<?xml version="1.0" encoding="UTF-8"?>\r\n<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\r\n	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">\r\n\r\n	<modelVersion>4.0.0</modelVersion>\r\n\r\n	<groupId><%= userProps.package %></groupId>\r\n	<artifactId><%= userProps.name %></artifactId>\r\n	<version>1.0.0-SNAPSHOT</version>\r\n	<packaging>bundle</packaging>\r\n\r\n	<name><%= userProps.name %></name>\r\n\r\n	<licenses>\r\n		<license>\r\n			<name>Apache License, Version 2.0</name>\r\n			<distribution>repo</distribution>\r\n			<url>http://www.apache.org/licenses/LICENSE-2.0.html</url>\r\n		</license>\r\n	</licenses>\r\n\r\n	<properties>\r\n		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\r\n		<version.maven-bundle-plugin>3.2.0</version.maven-bundle-plugin>\r\n\r\n		<!-- the version of the Red Hat Fuse BOM, defining all the dependency versions -->\r\n		<jboss.fuse.bom.version><%= userProps.camelVersion %></jboss.fuse.bom.version>\r\n\r\n		<camel.version><%= userProps.camelVersion %></camel.version>\r\n	</properties>\r\n\r\n	<repositories>\r\n		<repository>\r\n			<id>fuse-public-repository</id>\r\n			<name>FuseSource Community Release Repository</name>\r\n			<url>https://repo.fusesource.com/nexus/content/groups/public</url>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n		</repository>\r\n		<repository>\r\n			<id>red-hat-ga-repository</id>\r\n			<name>Red Hat GA Repository</name>\r\n			<url>https://maven.repository.redhat.com/ga</url>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n		</repository>\r\n		<repository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>red-hat-ea-repository</id>\r\n			<name>Red Hat EA Repository</name>\r\n			<url>https://maven.repository.redhat.com/earlyaccess/all</url>\r\n		</repository>\r\n		<!-- To remove when a long-term version will be available -->\r\n		<repository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>jboss-ea-repository</id>\r\n			<name>Red Hat JBoss Early Access Repository</name>\r\n			<url>http://repository.jboss.org/nexus/content/groups/ea</url>\r\n		</repository>\r\n	</repositories>\r\n\r\n	<pluginRepositories>\r\n		<pluginRepository>\r\n			<id>fuse-public-repository</id>\r\n			<name>FuseSource Community Release Repository</name>\r\n			<url>https://repo.fusesource.com/nexus/content/groups/public</url>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n		</pluginRepository>\r\n		<pluginRepository>\r\n			<id>red-hat-ga-repository</id>\r\n			<name>Red Hat GA Repository</name>\r\n			<url>https://maven.repository.redhat.com/ga</url>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n		</pluginRepository>\r\n				<pluginRepository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>red-hat-ea-repository</id>\r\n			<name>Red Hat EA Repository</name>\r\n			<url>https://maven.repository.redhat.com/earlyaccess/all</url>\r\n		</pluginRepository>\r\n		<!-- To remove when a long-term version will be available -->\r\n		<pluginRepository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>jboss-ea-repository</id>\r\n			<name>Red Hat JBoss Early Access Repository</name>\r\n			<url>http://repository.jboss.org/nexus/content/groups/ea</url>\r\n		</pluginRepository>\r\n	</pluginRepositories>\r\n\r\n	<dependencyManagement>\r\n		<dependencies>\r\n			<dependency>\r\n				<groupId>org.jboss.fuse</groupId>\r\n				<artifactId>jboss-fuse-parent</artifactId>\r\n				<version>${jboss.fuse.bom.version}</version>\r\n				<type>pom</type>\r\n				<scope>import</scope>\r\n			</dependency>\r\n		</dependencies>\r\n	</dependencyManagement>\r\n\r\n	<dependencies>\r\n		<dependency>\r\n			<groupId>org.apache.camel</groupId>\r\n			<artifactId>camel-core</artifactId>\r\n		</dependency>\r\n		<dependency>\r\n			<groupId>org.apache.camel</groupId>\r\n			<artifactId>camel-spring</artifactId>\r\n		</dependency>\r\n\r\n		<!-- logging -->\r\n		<dependency>\r\n			<groupId>org.slf4j</groupId>\r\n			<artifactId>slf4j-api</artifactId>\r\n		</dependency>\r\n		<dependency>\r\n			<groupId>org.slf4j</groupId>\r\n			<artifactId>slf4j-log4j12</artifactId>\r\n		</dependency>\r\n		<dependency>\r\n			<groupId>log4j</groupId>\r\n			<artifactId>log4j</artifactId>\r\n		</dependency>\r\n		<dependency>\r\n			<groupId>commons-logging</groupId>\r\n			<artifactId>commons-logging</artifactId>\r\n		</dependency>\r\n\r\n		<!-- Testing & Camel Plugin -->\r\n		<dependency>\r\n			<groupId>org.apache.camel</groupId>\r\n			<artifactId>camel-test-spring</artifactId>\r\n		</dependency>\r\n	</dependencies>\r\n\r\n	<build>\r\n		<defaultGoal>install</defaultGoal>\r\n		<plugins>\r\n			<plugin>\r\n				<groupId>org.apache.felix</groupId>\r\n				<artifactId>maven-bundle-plugin</artifactId>\r\n				<version>${version.maven-bundle-plugin}</version>\r\n				<extensions>true</extensions>\r\n			</plugin>\r\n			<plugin>\r\n				<groupId>org.apache.maven.plugins</groupId>\r\n				<artifactId>maven-compiler-plugin</artifactId>\r\n				<version>3.7.0</version>\r\n				<configuration>\r\n					<source>1.8</source>\r\n					<target>1.8</target>\r\n				</configuration>\r\n			</plugin>\r\n			<plugin>\r\n				<groupId>org.apache.maven.plugins</groupId>\r\n				<artifactId>maven-resources-plugin</artifactId>\r\n				<version>3.0.2</version>\r\n				<configuration>\r\n					<encoding>UTF-8</encoding>\r\n				</configuration>\r\n			</plugin>\r\n\r\n			<!-- to run the example using mvn camel:run -->\r\n			<plugin>\r\n				<groupId>org.apache.camel</groupId>\r\n				<artifactId>camel-maven-plugin</artifactId>\r\n				<version>${camel.version}</version>\r\n				<configuration>\r\n					<fileApplicationContextUri>src/main/resources/META-INF/spring/camel-context.xml</fileApplicationContextUri>\r\n				</configuration>\r\n			</plugin>\r\n\r\n		</plugins>\r\n	</build>\r\n\r\n	<description>Empty Camel Spring Example</description>\r\n</project>\r\n"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:80)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:117)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:53)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didClose: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
didOpen: TextDocumentItem [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
  languageId = "xml"
  version = 1
  text = "<?xml version="1.0" encoding="UTF-8"?>\r\n<!--\r\n    Copyright 2014-2017, Red Hat, Inc. and/or its affiliates, and individual\r\n    contributors by the @authors tag. \r\n\r\n    Licensed under the Apache License, Version 2.0 (the "License");\r\n    you may not use this file except in compliance with the License.\r\n    You may obtain a copy of the License at\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n    Unless required by applicable law or agreed to in writing, software\r\n    distributed under the License is distributed on an "AS IS" BASIS,\r\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n    See the License for the specific language governing permissions and\r\n    limitations under the License.\r\n-->\r\n<!--\r\n   This is the OSGi Blueprint XML file defining the Camel context and routes.  Because the file is in the\r\n   OSGI-INF/blueprint directory inside our JAR, it will be automatically activated as soon as the bundle is installed.\r\n\r\n   The root element for any OSGi Blueprint file is 'blueprint' - you also see the namespace definitions for both the Blueprint\r\n   and the Camel namespaces.\r\n-->\r\n<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"\r\n    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 https://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd                            http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">\r\n    <!--\r\n      The namespace for the camelContext element in Blueprint is 'https://camel.apache.org/schema/blueprint'. Additionally,\r\n      we can also define namespace prefixes we want to use them in the XPath expressions in our CBR.\r\n\r\n      While it is not required to assign id's to the <camelContext/> and <route/> elements, it is a good idea\r\n      to set those for runtime management purposes (logging, JMX MBeans, ...)\r\n    -->\r\n    <camelContext id="_context1" xmlns="http://camel.apache.org/schema/blueprint">\r\n        <route id="_route1">\r\n        </route>\r\n    </camelContext>\r\n</beans>"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 36; columnNumber: 3; The element type "blueprint" must be terminated by the matching end-tag "</blueprint>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:80)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:117)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:53)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 36; columnNumber: 3; The element type "blueprint" must be terminated by the matching end-tag "</blueprint>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:80)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:64)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:46)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 36; columnNumber: 3; The element type "blueprint" must be terminated by the matching end-tag "</blueprint>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:80)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:64)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:46)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didClose: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
didOpen: TextDocumentItem [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
  languageId = "xml"
  version = 1
  text = "<?xml version="1.0" encoding="UTF-8"?>\r\n<!--\r\n    Copyright 2014-2017, Red Hat, Inc. and/or its affiliates, and individual\r\n    contributors by the @authors tag. \r\n    Licensed under the Apache License, Version 2.0 (the "License");\r\n    you may not use this file except in compliance with the License.\r\n    You may obtain a copy of the License at\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n    Unless required by applicable law or agreed to in writing, software\r\n    distributed under the License is distributed on an "AS IS" BASIS,\r\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n    See the License for the specific language governing permissions and\r\n    limitations under the License.\r\n-->\r\n<!-- Configures the Camel Context-->\r\n<beans xmlns="http://www.springframework.org/schema/beans"\r\n    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd        http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">\r\n    <camelContext id="_camelContext1" xmlns="http://camel.apache.org/schema/spring">\r\n        <route id="_route1">\r\n        </route>\r\n    </camelContext>\r\n</beans>"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
didClose: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
didOpen: TextDocumentItem [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
  languageId = "xml"
  version = 1
  text = "<?xml version="1.0" encoding="UTF-8"?>\r\n<!--\r\n    Copyright 2014-2017, Red Hat, Inc. and/or its affiliates, and individual\r\n    contributors by the @authors tag. \r\n\r\n    Licensed under the Apache License, Version 2.0 (the "License");\r\n    you may not use this file except in compliance with the License.\r\n    You may obtain a copy of the License at\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n    Unless required by applicable law or agreed to in writing, software\r\n    distributed under the License is distributed on an "AS IS" BASIS,\r\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n    See the License for the specific language governing permissions and\r\n    limitations under the License.\r\n-->\r\n<!--\r\n   This is the OSGi Blueprint XML file defining the Camel context and routes.  Because the file is in the\r\n   OSGI-INF/blueprint directory inside our JAR, it will be automatically activated as soon as the bundle is installed.\r\n\r\n   The root element for any OSGi Blueprint file is 'blueprint' - you also see the namespace definitions for both the Blueprint\r\n   and the Camel namespaces.\r\n-->\r\n<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"\r\n    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 https://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd                            http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">\r\n    <!--\r\n      The namespace for the camelContext element in Blueprint is 'https://camel.apache.org/schema/blueprint'. Additionally,\r\n      we can also define namespace prefixes we want to use them in the XPath expressions in our CBR.\r\n\r\n      While it is not required to assign id's to the <camelContext/> and <route/> elements, it is a good idea\r\n      to set those for runtime management purposes (logging, JMX MBeans, ...)\r\n    -->\r\n    <camelContext id="_context1" xmlns="http://camel.apache.org/schema/blueprint">\r\n        <route id="_route1">\r\n        </route>\r\n    </camelContext>\r\n</beans>"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 36; columnNumber: 3; The element type "blueprint" must be terminated by the matching end-tag "</blueprint>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:80)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:117)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:53)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 36; columnNumber: 3; The element type "blueprint" must be terminated by the matching end-tag "</blueprint>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:80)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:64)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:46)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 36; columnNumber: 3; The element type "blueprint" must be terminated by the matching end-tag "</blueprint>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:80)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:64)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:46)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 36; columnNumber: 3; The element type "blueprint" must be terminated by the matching end-tag "</blueprint>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:80)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:64)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:46)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 36; columnNumber: 3; The element type "blueprint" must be terminated by the matching end-tag "</blueprint>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:80)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:64)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:46)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 2
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 29; columnNumber: 3; The element type "blueprint" must be terminated by the matching end-tag "</blueprint>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:80)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:117)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:53)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 3
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 22; columnNumber: 3; The element type "blueprint" must be terminated by the matching end-tag "</blueprint>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:80)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:117)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:53)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didSave: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
SERVER: changeWatchedFiles: size -> 1
didOpen: TextDocumentItem [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
  languageId = "xml"
  version = 1
  text = "<?xml version="1.0" encoding="UTF-8"?>\r\n<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"\r\n    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">\r\n  <modelVersion>4.0.0</modelVersion>\r\n  <groupId>com.mycompany</groupId>\r\n  <artifactId>say-blueprint</artifactId>\r\n  <version>1.0.0-SNAPSHOT</version>\r\n  <packaging>bundle</packaging>\r\n  <name>Say Rest DSL Example Blueprint</name>\r\n  <licenses>\r\n    <license>\r\n      <name>Apache License, Version 2.0</name>\r\n      <url>http://www.apache.org/licenses/LICENSE-2.0.html</url>\r\n      <distribution>repo</distribution>\r\n    </license>\r\n  </licenses>\r\n  <properties>\r\n    <camel.version>2.21.0.fuse-000008</camel.version>\r\n    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\r\n    <version.maven-bundle-plugin>3.2.0</version.maven-bundle-plugin>\r\n    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n  </properties>\r\n  <dependencies>\r\n    <dependency>\r\n      <groupId>org.apache.camel</groupId>\r\n      <artifactId>camel-core</artifactId>\r\n      <version>${camel.version}</version>\r\n    </dependency>\r\n    <dependency>\r\n      <groupId>org.apache.camel</groupId>\r\n      <artifactId>camel-blueprint</artifactId>\r\n      <version>${camel.version}</version>\r\n    </dependency>\r\n    <dependency>\r\n      <groupId>org.apache.camel</groupId>\r\n      <artifactId>camel-netty-http</artifactId>\r\n      <version>${camel.version}</version>\r\n    </dependency>\r\n    <dependency>\r\n      <groupId>org.apache.camel</groupId>\r\n      <artifactId>camel-test-blueprint</artifactId>\r\n      <version>${camel.version}</version>\r\n      <scope>test</scope>\r\n      <exclusions>\r\n        <exclusion>\r\n          <artifactId>org.apache.felix.fileinstall</artifactId>\r\n          <groupId>org.apache.felix</groupId>\r\n        </exclusion>\r\n      </exclusions>\r\n    </dependency>\r\n  </dependencies>\r\n  <repositories>\r\n    <repository>\r\n      <releases>\r\n        <enabled>true</enabled>\r\n        <updatePolicy>never</updatePolicy>\r\n      </releases>\r\n      <snapshots>\r\n        <enabled>false</enabled>\r\n      </snapshots>\r\n      <id>fuse-public-repository</id>\r\n      <name>FuseSource Community Release Repository</name>\r\n      <url>https://repo.fusesource.com/nexus/content/groups/public</url>\r\n    </repository>\r\n    <repository>\r\n      <releases>\r\n        <enabled>true</enabled>\r\n        <updatePolicy>never</updatePolicy>\r\n      </releases>\r\n      <snapshots>\r\n        <enabled>false</enabled>\r\n      </snapshots>\r\n      <id>red-hat-ga-repository</id>\r\n      <name>Red Hat GA Repository</name>\r\n      <url>https://maven.repository.redhat.com/ga</url>\r\n    </repository>\r\n  </repositories>\r\n  <pluginRepositories>\r\n    <pluginRepository>\r\n      <releases>\r\n        <enabled>true</enabled>\r\n        <updatePolicy>never</updatePolicy>\r\n      </releases>\r\n      <snapshots>\r\n        <enabled>false</enabled>\r\n      </snapshots>\r\n      <id>fuse-public-repository</id>\r\n      <name>FuseSource Community Release Repository</name>\r\n      <url>https://repo.fusesource.com/nexus/content/groups/public</url>\r\n    </pluginRepository>\r\n    <pluginRepository>\r\n      <releases>\r\n        <enabled>true</enabled>\r\n        <updatePolicy>never</updatePolicy>\r\n      </releases>\r\n      <snapshots>\r\n        <enabled>false</enabled>\r\n      </snapshots>\r\n      <id>red-hat-ga-repository</id>\r\n      <name>Red Hat GA Repository</name>\r\n      <url>https://maven.repository.redhat.com/ga</url>\r\n    </pluginRepository>\r\n  </pluginRepositories>\r\n  <build>\r\n    <defaultGoal>install</defaultGoal>\r\n    <plugins>\r\n      <plugin>\r\n        <groupId>org.apache.felix</groupId>\r\n        <artifactId>maven-bundle-plugin</artifactId>\r\n        <version>${version.maven-bundle-plugin}</version>\r\n        <extensions>true</extensions>\r\n        <configuration>\r\n          <instructions>\r\n            <Bundle-SymbolicName>sayblueprint</Bundle-SymbolicName>\r\n            <Bundle-Name>Say Rest DSL Example Blueprint [say-blueprint]</Bundle-Name></instructions></configuration>\r\n      </plugin>\r\n      <plugin>\r\n        <artifactId>maven-compiler-plugin</artifactId>\r\n        <version>3.5.1</version>\r\n        <configuration>\r\n          <source>1.8</source>\r\n          <target>1.8</target>\r\n        </configuration>\r\n      </plugin>\r\n      <plugin>\r\n        <artifactId>maven-resources-plugin</artifactId>\r\n        <version>3.0.1</version>\r\n        <configuration>\r\n          <encoding>UTF-8</encoding>\r\n        </configuration>\r\n      </plugin>\r\n      <plugin>\r\n        <groupId>org.apache.camel</groupId>\r\n        <artifactId>camel-maven-plugin</artifactId>\r\n        <version>${camel.version}</version>\r\n        <configuration>\r\n          <useBlueprint>true</useBlueprint>\r\n        </configuration>\r\n      </plugin>\r\n    </plugins>\r\n  </build>\r\n  <description>Basic Rest DSL example in Blueprint using the Camel netty-http component. </description>\r\n</project>\r\n"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
didClose: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
didClose: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
didOpen: TextDocumentItem [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
  languageId = "xml"
  version = 1
  text = "<?xml version="1.0" encoding="UTF-8"?>\r\n<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\r\n	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">\r\n\r\n	<modelVersion>4.0.0</modelVersion>\r\n\r\n	<groupId><%= userProps.package %></groupId>\r\n	<artifactId><%= userProps.name %></artifactId>\r\n	<version>1.0.0-SNAPSHOT</version>\r\n	<packaging>bundle</packaging>\r\n\r\n	<name><%= userProps.name %></name>\r\n\r\n	<licenses>\r\n		<license>\r\n			<name>Apache License, Version 2.0</name>\r\n			<distribution>repo</distribution>\r\n			<url>http://www.apache.org/licenses/LICENSE-2.0.html</url>\r\n		</license>\r\n	</licenses>\r\n\r\n	<properties>\r\n		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\r\n		<version.maven-bundle-plugin>3.2.0</version.maven-bundle-plugin>\r\n\r\n		<!-- the version of the Red Hat Fuse BOM, defining all the dependency versions -->\r\n		<jboss.fuse.bom.version><%= userProps.camelVersion %></jboss.fuse.bom.version>\r\n\r\n		<camel.version><%= userProps.camelVersion %></camel.version>\r\n	</properties>\r\n\r\n	<repositories>\r\n		<repository>\r\n			<id>fuse-public-repository</id>\r\n			<name>FuseSource Community Release Repository</name>\r\n			<url>https://repo.fusesource.com/nexus/content/groups/public</url>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n		</repository>\r\n		<repository>\r\n			<id>red-hat-ga-repository</id>\r\n			<name>Red Hat GA Repository</name>\r\n			<url>https://maven.repository.redhat.com/ga</url>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n		</repository>\r\n		<repository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>red-hat-ea-repository</id>\r\n			<name>Red Hat EA Repository</name>\r\n			<url>https://maven.repository.redhat.com/earlyaccess/all</url>\r\n		</repository>\r\n		<!-- To remove when a long-term version will be available -->\r\n		<repository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>jboss-ea-repository</id>\r\n			<name>Red Hat JBoss Early Access Repository</name>\r\n			<url>http://repository.jboss.org/nexus/content/groups/ea</url>\r\n		</repository>\r\n	</repositories>\r\n\r\n	<pluginRepositories>\r\n		<pluginRepository>\r\n			<id>fuse-public-repository</id>\r\n			<name>FuseSource Community Release Repository</name>\r\n			<url>https://repo.fusesource.com/nexus/content/groups/public</url>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n		</pluginRepository>\r\n		<pluginRepository>\r\n			<id>red-hat-ga-repository</id>\r\n			<name>Red Hat GA Repository</name>\r\n			<url>https://maven.repository.redhat.com/ga</url>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n		</pluginRepository>\r\n				<pluginRepository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>red-hat-ea-repository</id>\r\n			<name>Red Hat EA Repository</name>\r\n			<url>https://maven.repository.redhat.com/earlyaccess/all</url>\r\n		</pluginRepository>\r\n		<!-- To remove when a long-term version will be available -->\r\n		<pluginRepository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>jboss-ea-repository</id>\r\n			<name>Red Hat JBoss Early Access Repository</name>\r\n			<url>http://repository.jboss.org/nexus/content/groups/ea</url>\r\n		</pluginRepository>\r\n	</pluginRepositories>\r\n\r\n	<dependencyManagement>\r\n		<dependencies>\r\n			<dependency>\r\n				<groupId>org.jboss.fuse</groupId>\r\n				<artifactId>jboss-fuse-parent</artifactId>\r\n				<version>${jboss.fuse.bom.version}</version>\r\n				<type>pom</type>\r\n				<scope>import</scope>\r\n			</dependency>\r\n		</dependencies>\r\n	</dependencyManagement>\r\n\r\n	<dependencies>\r\n		<dependency>\r\n			<groupId>org.apache.camel</groupId>\r\n			<artifactId>camel-core</artifactId>\r\n		</dependency>\r\n		<dependency>\r\n			<groupId>org.apache.camel</groupId>\r\n			<artifactId>camel-spring</artifactId>\r\n		</dependency>\r\n\r\n		<!-- logging -->\r\n		<dependency>\r\n			<groupId>org.slf4j</groupId>\r\n			<artifactId>slf4j-api</artifactId>\r\n		</dependency>\r\n		<dependency>\r\n			<groupId>org.slf4j</groupId>\r\n			<artifactId>slf4j-log4j12</artifactId>\r\n		</dependency>\r\n		<dependency>\r\n			<groupId>log4j</groupId>\r\n			<artifactId>log4j</artifactId>\r\n		</dependency>\r\n		<dependency>\r\n			<groupId>commons-logging</groupId>\r\n			<artifactId>commons-logging</artifactId>\r\n		</dependency>\r\n\r\n		<!-- Testing & Camel Plugin -->\r\n		<dependency>\r\n			<groupId>org.apache.camel</groupId>\r\n			<artifactId>camel-test-spring</artifactId>\r\n		</dependency>\r\n	</dependencies>\r\n\r\n	<build>\r\n		<defaultGoal>install</defaultGoal>\r\n		<plugins>\r\n			<plugin>\r\n				<groupId>org.apache.felix</groupId>\r\n				<artifactId>maven-bundle-plugin</artifactId>\r\n				<version>${version.maven-bundle-plugin}</version>\r\n				<extensions>true</extensions>\r\n			</plugin>\r\n			<plugin>\r\n				<groupId>org.apache.maven.plugins</groupId>\r\n				<artifactId>maven-compiler-plugin</artifactId>\r\n				<version>3.7.0</version>\r\n				<configuration>\r\n					<source>1.8</source>\r\n					<target>1.8</target>\r\n				</configuration>\r\n			</plugin>\r\n			<plugin>\r\n				<groupId>org.apache.maven.plugins</groupId>\r\n				<artifactId>maven-resources-plugin</artifactId>\r\n				<version>3.0.2</version>\r\n				<configuration>\r\n					<encoding>UTF-8</encoding>\r\n				</configuration>\r\n			</plugin>\r\n\r\n			<!-- to run the example using mvn camel:run -->\r\n			<plugin>\r\n				<groupId>org.apache.camel</groupId>\r\n				<artifactId>camel-maven-plugin</artifactId>\r\n				<version>${camel.version}</version>\r\n				<configuration>\r\n					<fileApplicationContextUri>src/main/resources/META-INF/spring/camel-context.xml</fileApplicationContextUri>\r\n				</configuration>\r\n			</plugin>\r\n\r\n		</plugins>\r\n	</build>\r\n\r\n	<description>Empty Camel Spring Example</description>\r\n</project>\r\n"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:80)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:117)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:53)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didOpen: TextDocumentItem [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
  languageId = "xml"
  version = 1
  text = "<?xml version="1.0" encoding="UTF-8"?>\r\n<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"\r\n    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">\r\n  <modelVersion>4.0.0</modelVersion>\r\n  <groupId>com.mycompany</groupId>\r\n  <artifactId>say-blueprint</artifactId>\r\n  <version>1.0.0-SNAPSHOT</version>\r\n  <packaging>bundle</packaging>\r\n  <name>Say Rest DSL Example Blueprint</name>\r\n  <licenses>\r\n    <license>\r\n      <name>Apache License, Version 2.0</name>\r\n      <url>http://www.apache.org/licenses/LICENSE-2.0.html</url>\r\n      <distribution>repo</distribution>\r\n    </license>\r\n  </licenses>\r\n  <properties>\r\n    <camel.version>2.21.0.fuse-000008</camel.version>\r\n    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\r\n    <version.maven-bundle-plugin>3.2.0</version.maven-bundle-plugin>\r\n    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n  </properties>\r\n  <dependencies>\r\n    <dependency>\r\n      <groupId>org.apache.camel</groupId>\r\n      <artifactId>camel-core</artifactId>\r\n      <version>${camel.version}</version>\r\n    </dependency>\r\n    <dependency>\r\n      <groupId>org.apache.camel</groupId>\r\n      <artifactId>camel-blueprint</artifactId>\r\n      <version>${camel.version}</version>\r\n    </dependency>\r\n    <dependency>\r\n      <groupId>org.apache.camel</groupId>\r\n      <artifactId>camel-netty-http</artifactId>\r\n      <version>${camel.version}</version>\r\n    </dependency>\r\n    <dependency>\r\n      <groupId>org.apache.camel</groupId>\r\n      <artifactId>camel-test-blueprint</artifactId>\r\n      <version>${camel.version}</version>\r\n      <scope>test</scope>\r\n      <exclusions>\r\n        <exclusion>\r\n          <artifactId>org.apache.felix.fileinstall</artifactId>\r\n          <groupId>org.apache.felix</groupId>\r\n        </exclusion>\r\n      </exclusions>\r\n    </dependency>\r\n  </dependencies>\r\n  <repositories>\r\n    <repository>\r\n      <releases>\r\n        <enabled>true</enabled>\r\n        <updatePolicy>never</updatePolicy>\r\n      </releases>\r\n      <snapshots>\r\n        <enabled>false</enabled>\r\n      </snapshots>\r\n      <id>fuse-public-repository</id>\r\n      <name>FuseSource Community Release Repository</name>\r\n      <url>https://repo.fusesource.com/nexus/content/groups/public</url>\r\n    </repository>\r\n    <repository>\r\n      <releases>\r\n        <enabled>true</enabled>\r\n        <updatePolicy>never</updatePolicy>\r\n      </releases>\r\n      <snapshots>\r\n        <enabled>false</enabled>\r\n      </snapshots>\r\n      <id>red-hat-ga-repository</id>\r\n      <name>Red Hat GA Repository</name>\r\n      <url>https://maven.repository.redhat.com/ga</url>\r\n    </repository>\r\n  </repositories>\r\n  <pluginRepositories>\r\n    <pluginRepository>\r\n      <releases>\r\n        <enabled>true</enabled>\r\n        <updatePolicy>never</updatePolicy>\r\n      </releases>\r\n      <snapshots>\r\n        <enabled>false</enabled>\r\n      </snapshots>\r\n      <id>fuse-public-repository</id>\r\n      <name>FuseSource Community Release Repository</name>\r\n      <url>https://repo.fusesource.com/nexus/content/groups/public</url>\r\n    </pluginRepository>\r\n    <pluginRepository>\r\n      <releases>\r\n        <enabled>true</enabled>\r\n        <updatePolicy>never</updatePolicy>\r\n      </releases>\r\n      <snapshots>\r\n        <enabled>false</enabled>\r\n      </snapshots>\r\n      <id>red-hat-ga-repository</id>\r\n      <name>Red Hat GA Repository</name>\r\n      <url>https://maven.repository.redhat.com/ga</url>\r\n    </pluginRepository>\r\n  </pluginRepositories>\r\n  <build>\r\n    <defaultGoal>install</defaultGoal>\r\n    <plugins>\r\n      <plugin>\r\n        <groupId>org.apache.felix</groupId>\r\n        <artifactId>maven-bundle-plugin</artifactId>\r\n        <version>${version.maven-bundle-plugin}</version>\r\n        <extensions>true</extensions>\r\n        <configuration>\r\n          <instructions>\r\n            <Bundle-SymbolicName>sayblueprint</Bundle-SymbolicName>\r\n            <Bundle-Name>Say Rest DSL Example Blueprint [say-blueprint]</Bundle-Name></instructions></configuration>\r\n      </plugin>\r\n      <plugin>\r\n        <artifactId>maven-compiler-plugin</artifactId>\r\n        <version>3.5.1</version>\r\n        <configuration>\r\n          <source>1.8</source>\r\n          <target>1.8</target>\r\n        </configuration>\r\n      </plugin>\r\n      <plugin>\r\n        <artifactId>maven-resources-plugin</artifactId>\r\n        <version>3.0.1</version>\r\n        <configuration>\r\n          <encoding>UTF-8</encoding>\r\n        </configuration>\r\n      </plugin>\r\n      <plugin>\r\n        <groupId>org.apache.camel</groupId>\r\n        <artifactId>camel-maven-plugin</artifactId>\r\n        <version>${camel.version}</version>\r\n        <configuration>\r\n          <useBlueprint>true</useBlueprint>\r\n        </configuration>\r\n      </plugin>\r\n    </plugins>\r\n  </build>\r\n  <description>Basic Rest DSL example in Blueprint using the Camel netty-http component. </description>\r\n</project>\r\n"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:80)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:64)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:46)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:80)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:64)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:46)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:80)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:64)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:46)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:80)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:64)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:46)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 2
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 3
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 4
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 5
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:80)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:64)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:46)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 6
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 7
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:80)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:64)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:46)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:80)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:64)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:46)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:80)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:64)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:46)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:80)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:64)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:46)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:80)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:64)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:46)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:80)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:64)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:46)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:80)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:64)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:46)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 8
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 9
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 10
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 11
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 12
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:80)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:64)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:46)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:80)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:64)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:46)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:80)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:64)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:46)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:80)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:64)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:46)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:80)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:64)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:46)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:80)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:64)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:46)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:80)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:64)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:46)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 13
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 14
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 15
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:80)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:64)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:46)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:80)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:64)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:46)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:80)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:64)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:46)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:80)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:64)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:46)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:80)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:64)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:46)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 16
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 17
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:80)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:64)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:46)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 18
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:80)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:64)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:46)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:80)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:64)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:46)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:80)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:64)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:46)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 19
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:80)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:64)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:46)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:80)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:64)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:46)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:80)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:64)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:46)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:80)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:64)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:46)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:80)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:64)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:46)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 20
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 21
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 22
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 23
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:80)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:64)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:46)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:80)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:64)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:46)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:80)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:64)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:46)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:80)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:64)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:46)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 24
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 26
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 27
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 28
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:80)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:64)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:46)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:80)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:64)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:46)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:80)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:64)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:46)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:80)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:64)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:46)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:80)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:64)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:46)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:80)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:64)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:46)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 29
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:80)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:64)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:46)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 30
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:80)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:64)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.completion.CamelEndpointCompletionProcessor.getCompletions(CamelEndpointCompletionProcessor.java:49)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.completion(CamelTextDocumentService.java:84)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 33
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:80)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:64)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.completion.CamelEndpointCompletionProcessor.getCompletions(CamelEndpointCompletionProcessor.java:49)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.completion(CamelTextDocumentService.java:84)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 38
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
didSave: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
SERVER: changeWatchedFiles: size -> 1
didClose: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
didClose: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
SERVER: changeWatchedFiles: size -> 1
SERVER: changeWatchedFiles: size -> 2
didOpen: TextDocumentItem [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/output/pom.xml"
  languageId = "xml"
  version = 1
  text = "<?xml version="1.0" encoding="UTF-8"?>\r\n<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"\r\n    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">\r\n  <modelVersion>4.0.0</modelVersion>\r\n\r\n	<groupId>com.output</groupId>\r\n	<artifactId>output</artifactId>\r\n	<version>1.0.0-SNAPSHOT</version>\r\n	<packaging>bundle</packaging>\r\n\r\n  <name>output</name>\r\n\r\n  <licenses>\r\n    <license>\r\n      <name>Apache License, Version 2.0</name>\r\n      <url>http://www.apache.org/licenses/LICENSE-2.0.html</url>\r\n      <distribution>repo</distribution>\r\n    </license>\r\n  </licenses>\r\n\r\n  <properties>\r\n		<camel.version>2.18.1</camel.version>\r\n    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\r\n    <version.maven-bundle-plugin>3.2.0</version.maven-bundle-plugin>\r\n    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n  </properties>\r\n\r\n  <dependencies>\r\n    <dependency>\r\n      <groupId>org.apache.camel</groupId>\r\n      <artifactId>camel-core</artifactId>\r\n      <version>${camel.version}</version>\r\n    </dependency>\r\n    <dependency>\r\n      <groupId>org.apache.camel</groupId>\r\n      <artifactId>camel-blueprint</artifactId>\r\n      <version>${camel.version}</version>\r\n    </dependency>\r\n    <dependency>\r\n      <groupId>org.apache.camel</groupId>\r\n      <artifactId>camel-test-blueprint</artifactId>\r\n      <version>${camel.version}</version>\r\n      <scope>test</scope>\r\n    </dependency>\r\n  </dependencies>\r\n  \r\n	<repositories>\r\n		<repository>\r\n			<id>fuse-public-repository</id>\r\n			<name>FuseSource Community Release Repository</name>\r\n			<url>https://repo.fusesource.com/nexus/content/groups/public</url>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n		</repository>\r\n		<repository>\r\n			<id>red-hat-ga-repository</id>\r\n			<name>Red Hat GA Repository</name>\r\n			<url>https://maven.repository.redhat.com/ga</url>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n		</repository>\r\n		<repository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>red-hat-ea-repository</id>\r\n			<name>Red Hat EA Repository</name>\r\n			<url>https://maven.repository.redhat.com/earlyaccess/all</url>\r\n		</repository>\r\n		<!-- To remove when a long-term version will be available -->\r\n		<repository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>jboss-ea-repository</id>\r\n			<name>Red Hat JBoss Early Access Repository</name>\r\n			<url>http://repository.jboss.org/nexus/content/groups/ea</url>\r\n		</repository>\r\n	</repositories>\r\n\r\n	<pluginRepositories>\r\n		<pluginRepository>\r\n			<id>fuse-public-repository</id>\r\n			<name>FuseSource Community Release Repository</name>\r\n			<url>https://repo.fusesource.com/nexus/content/groups/public</url>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n		</pluginRepository>\r\n		<pluginRepository>\r\n			<id>red-hat-ga-repository</id>\r\n			<name>Red Hat GA Repository</name>\r\n			<url>https://maven.repository.redhat.com/ga</url>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n		</pluginRepository>\r\n				<pluginRepository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>red-hat-ea-repository</id>\r\n			<name>Red Hat EA Repository</name>\r\n			<url>https://maven.repository.redhat.com/earlyaccess/all</url>\r\n		</pluginRepository>\r\n		<!-- To remove when a long-term version will be available -->\r\n		<pluginRepository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>jboss-ea-repository</id>\r\n			<name>Red Hat JBoss Early Access Repository</name>\r\n			<url>http://repository.jboss.org/nexus/content/groups/ea</url>\r\n		</pluginRepository>\r\n	</pluginRepositories>\r\n\r\n  <description>Empty Camel Blueprint Example</description>\r\n</project>\r\n"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/output/pom.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/output/pom.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/output/pom.xml"
]
didClose: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/output/pom.xml"
]
Setting client pid to 11384
SERVER: changeConfig: settings -> {"xml":{},"java":{"home":null,"jdt":{"ls":{"vmargs":"-noverify -Xmx1G -XX:+UseG1GC -XX:+UseStringDeduplication"}},"errors":{"incompleteClasspath":{"severity":"warning"}},"configuration":{"updateBuildConfiguration":"interactive","maven":{"userSettings":null}},"trace":{"server":"off"},"import":{"gradle":{"enabled":true},"maven":{"enabled":true},"exclusions":["**/node_modules/**","**/.metadata/**","**/archetype-resources/**","**/META-INF/maven/**"]},"referencesCodeLens":{"enabled":false},"signatureHelp":{"enabled":false},"implementationsCodeLens":{"enabled":false},"format":{"enabled":true,"settings":{"url":null,"profile":null},"comments":{"enabled":true},"onType":{"enabled":true}},"saveActions":{"organizeImports":false},"contentProvider":{"preferred":null},"autobuild":{"enabled":true},"completion":{"overwrite":true,"guessMethodArguments":false,"favoriteStaticMembers":["org.junit.Assert.*","org.junit.Assume.*","org.junit.jupiter.api.Assertions.*","org.junit.jupiter.api.Assumptions.*","org.junit.jupiter.api.DynamicContainer.*","org.junit.jupiter.api.DynamicTest.*"],"importOrder":["java","javax","com","org"]},"progressReports":{"enabled":true},"debug":{"logLevel":"warn","settings":{"showHex":false,"showStaticVariables":true,"showQualifiedNames":false,"maxStringLength":0,"enableHotCodeReplace":true}},"test":{"report":{"position":"sideView"}}}}
didOpen: TextDocumentItem [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
  languageId = "xml"
  version = 1
  text = "<?xml version="1.0" encoding="UTF-8"?>\r\n<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"\r\n    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">\r\n  <modelVersion>4.0.0</modelVersion>\r\n\r\n	<groupId>com.bp</groupId>\r\n	<artifactId>bp</artifactId>\r\n	<version>1.0.0-SNAPSHOT</version>\r\n	<packaging>jar</packaging>\r\n\r\n  <name>bp</name>\r\n\r\n  <licenses>\r\n    <license>\r\n      <name>Apache License, Version 2.0</name>\r\n      <url>http://www.apache.org/licenses/LICENSE-2.0.html</url>\r\n      <distribution>repo</distribution>\r\n    </license>\r\n  </licenses>\r\n\r\n  <properties>\r\n		<camel.version>2.18.2</camel.version>\r\n    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\r\n    <version.maven-bundle-plugin>3.2.0</version.maven-bundle-plugin>\r\n    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n  </properties>\r\n\r\n  <dependencies>\r\n    <dependency>\r\n      <groupId>org.apache.camel</groupId>\r\n      <artifactId>camel-core</artifactId>\r\n      <version>${camel.version}</version>\r\n    </dependency>\r\n    <dependency>\r\n      <groupId>org.apache.camel</groupId>\r\n      <artifactId>camel-blueprint</artifactId>\r\n      <version>${camel.version}</version>\r\n    </dependency>\r\n    <dependency>\r\n      <groupId>org.apache.camel</groupId>\r\n      <artifactId>camel-test-blueprint</artifactId>\r\n      <version>${camel.version}</version>\r\n      <scope>test</scope>\r\n    </dependency>\r\n  </dependencies>\r\n  \r\n	<repositories>\r\n		<repository>\r\n			<id>fuse-public-repository</id>\r\n			<name>FuseSource Community Release Repository</name>\r\n			<url>https://repo.fusesource.com/nexus/content/groups/public</url>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n		</repository>\r\n		<repository>\r\n			<id>red-hat-ga-repository</id>\r\n			<name>Red Hat GA Repository</name>\r\n			<url>https://maven.repository.redhat.com/ga</url>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n		</repository>\r\n		<repository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>red-hat-ea-repository</id>\r\n			<name>Red Hat EA Repository</name>\r\n			<url>https://maven.repository.redhat.com/earlyaccess/all</url>\r\n		</repository>\r\n		<!-- To remove when a long-term version will be available -->\r\n		<repository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>jboss-ea-repository</id>\r\n			<name>Red Hat JBoss Early Access Repository</name>\r\n			<url>http://repository.jboss.org/nexus/content/groups/ea</url>\r\n		</repository>\r\n	</repositories>\r\n\r\n	<pluginRepositories>\r\n		<pluginRepository>\r\n			<id>fuse-public-repository</id>\r\n			<name>FuseSource Community Release Repository</name>\r\n			<url>https://repo.fusesource.com/nexus/content/groups/public</url>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n		</pluginRepository>\r\n		<pluginRepository>\r\n			<id>red-hat-ga-repository</id>\r\n			<name>Red Hat GA Repository</name>\r\n			<url>https://maven.repository.redhat.com/ga</url>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n		</pluginRepository>\r\n				<pluginRepository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>red-hat-ea-repository</id>\r\n			<name>Red Hat EA Repository</name>\r\n			<url>https://maven.repository.redhat.com/earlyaccess/all</url>\r\n		</pluginRepository>\r\n		<!-- To remove when a long-term version will be available -->\r\n		<pluginRepository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>jboss-ea-repository</id>\r\n			<name>Red Hat JBoss Early Access Repository</name>\r\n			<url>http://repository.jboss.org/nexus/content/groups/ea</url>\r\n		</pluginRepository>\r\n	</pluginRepositories>\r\n\r\n  <description>Empty Camel Blueprint Example</description>\r\n</project>\r\n"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 3
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 4
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 153; columnNumber: 3; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 5
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 154; columnNumber: 1; Element type "b" must be followed by either attribute specifications, ">" or "/>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.completion.CamelEndpointCompletionProcessor.getCompletions(CamelEndpointCompletionProcessor.java:49)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.completion(CamelTextDocumentService.java:84)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 9
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 10
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 154; columnNumber: 3; The element type "build" must be terminated by the matching end-tag "</build>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 11
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 155; columnNumber: 3; The element type "build" must be terminated by the matching end-tag "</build>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 13
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 14
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 154; columnNumber: 4; The element type "build" must be terminated by the matching end-tag "</build>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.completion.CamelEndpointCompletionProcessor.getCompletions(CamelEndpointCompletionProcessor.java:49)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.completion(CamelTextDocumentService.java:84)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 154; columnNumber: 4; The element type "build" must be terminated by the matching end-tag "</build>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 18
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 19
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 20
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 21
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 22
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 23
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 24
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 25
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 154; columnNumber: 5; The element type "build" must be terminated by the matching end-tag "</build>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.completion.CamelEndpointCompletionProcessor.getCompletions(CamelEndpointCompletionProcessor.java:49)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.completion(CamelTextDocumentService.java:84)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 26
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 29
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 30
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 155; columnNumber: 2; Element type "p" must be followed by either attribute specifications, ">" or "/>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.completion.CamelEndpointCompletionProcessor.getCompletions(CamelEndpointCompletionProcessor.java:49)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.completion(CamelTextDocumentService.java:84)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 36
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 37
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 155; columnNumber: 4; The element type "plugins" must be terminated by the matching end-tag "</plugins>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 38
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 39
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 40
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 155; columnNumber: 5; The element type "plugins" must be terminated by the matching end-tag "</plugins>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 41
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 155; columnNumber: 5; The element type "plugins" must be terminated by the matching end-tag "</plugins>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.completion.CamelEndpointCompletionProcessor.getCompletions(CamelEndpointCompletionProcessor.java:49)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.completion(CamelTextDocumentService.java:84)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 47
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 48
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 49
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
didSave: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
SERVER: changeWatchedFiles: size -> 1
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 50
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 51
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 52
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 53
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 54
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 55
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 56
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 57
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 59
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 60
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 62
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 63
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 64
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 65
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 66
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 67
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 68
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 81
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 82
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 83
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml
didChange: VersionedTextDocumentIdentifier [
  version = 85
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml
didChange: VersionedTextDocumentIdentifier [
  version = 86
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 87
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 88
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml
didChange: VersionedTextDocumentIdentifier [
  version = 90
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 91
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 92
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml
didChange: VersionedTextDocumentIdentifier [
  version = 96
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 100
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 101
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 102
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml
didChange: VersionedTextDocumentIdentifier [
  version = 110
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
didSave: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
SERVER: changeWatchedFiles: size -> 1
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 111
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 112
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 113
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 40; columnNumber: 4; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 114
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 40; columnNumber: 4; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 116
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 118
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 86; columnNumber: 7; The string "--" is not permitted within comments.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 119
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 86; columnNumber: 7; The string "--" is not permitted within comments.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 133
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 134
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 135
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 136
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 137
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 138
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 139
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 140
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 143
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
didSave: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
SERVER: changeWatchedFiles: size -> 1
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 144
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 147
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 148
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 149
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 150
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 152
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 156
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 86; columnNumber: 7; The string "--" is not permitted within comments.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 164
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 168
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 171
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 40; columnNumber: 4; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 172
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 175
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 176
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
didOpen: TextDocumentItem [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
  languageId = "xml"
  version = 1
  text = "<?xml version="1.0" encoding="UTF-8"?>\r\n<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"\r\n    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">\r\n  <modelVersion>4.0.0</modelVersion>\r\n\r\n	<groupId><%= userProps.package %></groupId>\r\n	<artifactId><%= userProps.name %></artifactId>\r\n	<version>1.0.0-SNAPSHOT</version>\r\n	<packaging>jar</packaging>\r\n\r\n  <name><%= userProps.name %></name>\r\n\r\n  <licenses>\r\n    <license>\r\n      <name>Apache License, Version 2.0</name>\r\n      <url>http://www.apache.org/licenses/LICENSE-2.0.html</url>\r\n      <distribution>repo</distribution>\r\n    </license>\r\n  </licenses>\r\n\r\n  <properties>\r\n		<camel.version><%= userProps.camelVersion %></camel.version>\r\n    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\r\n    <version.maven-bundle-plugin>3.2.0</version.maven-bundle-plugin>\r\n    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n  </properties>\r\n\r\n  <dependencies>\r\n    <dependency>\r\n      <groupId>org.apache.camel</groupId>\r\n      <artifactId>camel-core</artifactId>\r\n      <version>${camel.version}</version>\r\n    </dependency>\r\n    <dependency>\r\n      <groupId>org.apache.camel</groupId>\r\n      <artifactId>camel-blueprint</artifactId>\r\n      <version>${camel.version}</version>\r\n    </dependency>\r\n    <dependency>\r\n      <groupId>org.apache.camel</groupId>\r\n      <artifactId>camel-test-blueprint</artifactId>\r\n      <version>${camel.version}</version>\r\n      <scope>test</scope>\r\n    </dependency>\r\n  </dependencies>\r\n  \r\n	<repositories>\r\n		<repository>\r\n			<id>fuse-public-repository</id>\r\n			<name>FuseSource Community Release Repository</name>\r\n			<url>https://repo.fusesource.com/nexus/content/groups/public</url>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n		</repository>\r\n		<repository>\r\n			<id>red-hat-ga-repository</id>\r\n			<name>Red Hat GA Repository</name>\r\n			<url>https://maven.repository.redhat.com/ga</url>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n		</repository>\r\n		<repository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>red-hat-ea-repository</id>\r\n			<name>Red Hat EA Repository</name>\r\n			<url>https://maven.repository.redhat.com/earlyaccess/all</url>\r\n		</repository>\r\n		<!-- To remove when a long-term version will be available -->\r\n		<repository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>jboss-ea-repository</id>\r\n			<name>Red Hat JBoss Early Access Repository</name>\r\n			<url>http://repository.jboss.org/nexus/content/groups/ea</url>\r\n		</repository>\r\n	</repositories>\r\n\r\n	<pluginRepositories>\r\n		<pluginRepository>\r\n			<id>fuse-public-repository</id>\r\n			<name>FuseSource Community Release Repository</name>\r\n			<url>https://repo.fusesource.com/nexus/content/groups/public</url>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n		</pluginRepository>\r\n		<pluginRepository>\r\n			<id>red-hat-ga-repository</id>\r\n			<name>Red Hat GA Repository</name>\r\n			<url>https://maven.repository.redhat.com/ga</url>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n		</pluginRepository>\r\n				<pluginRepository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>red-hat-ea-repository</id>\r\n			<name>Red Hat EA Repository</name>\r\n			<url>https://maven.repository.redhat.com/earlyaccess/all</url>\r\n		</pluginRepository>\r\n		<!-- To remove when a long-term version will be available -->\r\n		<pluginRepository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>jboss-ea-repository</id>\r\n			<name>Red Hat JBoss Early Access Repository</name>\r\n			<url>http://repository.jboss.org/nexus/content/groups/ea</url>\r\n		</pluginRepository>\r\n	</pluginRepositories>\r\n\r\n  <description>Empty Camel Blueprint Example</description>\r\n</project>\r\n"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didOpen: TextDocumentItem [
  uri = "git:/e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml.git?%7B%22path%22%3A%22e%3A%5C%5CUsers%5C%5Cbfitzpat%5C%5Cgithub%5C%5Cgenerator-fuse-project%5C%5Capp%5C%5Ctemplates%5C%5Cblueprint%5C%5Cpom.xml%22%2C%22ref%22%3A%22%22%7D"
  languageId = "xml"
  version = 1
  text = "<?xml version="1.0" encoding="UTF-8"?>\n<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"\n    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">\n  <modelVersion>4.0.0</modelVersion>\n\n	<groupId><%= userProps.package %></groupId>\n	<artifactId><%= userProps.name %></artifactId>\n	<version>1.0.0-SNAPSHOT</version>\n	<packaging>jar</packaging>\n\n  <name><%= userProps.name %></name>\n\n  <licenses>\n    <license>\n      <name>Apache License, Version 2.0</name>\n      <url>http://www.apache.org/licenses/LICENSE-2.0.html</url>\n      <distribution>repo</distribution>\n    </license>\n  </licenses>\n\n  <properties>\n		<camel.version><%= userProps.camelVersion %></camel.version>\n    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\n    <version.maven-bundle-plugin>3.2.0</version.maven-bundle-plugin>\n    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n  </properties>\n\n  <dependencies>\n    <dependency>\n      <groupId>org.apache.camel</groupId>\n      <artifactId>camel-core</artifactId>\n      <version>${camel.version}</version>\n    </dependency>\n    <dependency>\n      <groupId>org.apache.camel</groupId>\n      <artifactId>camel-blueprint</artifactId>\n      <version>${camel.version}</version>\n    </dependency>\n    <dependency>\n      <groupId>org.apache.camel</groupId>\n      <artifactId>camel-test-blueprint</artifactId>\n      <version>${camel.version}</version>\n      <scope>test</scope>\n    </dependency>\n  </dependencies>\n  \n	<repositories>\n		<repository>\n			<id>fuse-public-repository</id>\n			<name>FuseSource Community Release Repository</name>\n			<url>https://repo.fusesource.com/nexus/content/groups/public</url>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n		</repository>\n		<repository>\n			<id>red-hat-ga-repository</id>\n			<name>Red Hat GA Repository</name>\n			<url>https://maven.repository.redhat.com/ga</url>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n		</repository>\n		<repository>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n			<id>red-hat-ea-repository</id>\n			<name>Red Hat EA Repository</name>\n			<url>https://maven.repository.redhat.com/earlyaccess/all</url>\n		</repository>\n		<!-- To remove when a long-term version will be available -->\n		<repository>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n			<id>jboss-ea-repository</id>\n			<name>Red Hat JBoss Early Access Repository</name>\n			<url>http://repository.jboss.org/nexus/content/groups/ea</url>\n		</repository>\n	</repositories>\n\n	<pluginRepositories>\n		<pluginRepository>\n			<id>fuse-public-repository</id>\n			<name>FuseSource Community Release Repository</name>\n			<url>https://repo.fusesource.com/nexus/content/groups/public</url>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n		</pluginRepository>\n		<pluginRepository>\n			<id>red-hat-ga-repository</id>\n			<name>Red Hat GA Repository</name>\n			<url>https://maven.repository.redhat.com/ga</url>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n		</pluginRepository>\n				<pluginRepository>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n			<id>red-hat-ea-repository</id>\n			<name>Red Hat EA Repository</name>\n			<url>https://maven.repository.redhat.com/earlyaccess/all</url>\n		</pluginRepository>\n		<!-- To remove when a long-term version will be available -->\n		<pluginRepository>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n			<id>jboss-ea-repository</id>\n			<name>Red Hat JBoss Early Access Repository</name>\n			<url>http://repository.jboss.org/nexus/content/groups/ea</url>\n		</pluginRepository>\n	</pluginRepositories>\n\n  <description>Empty Camel Blueprint Example</description>\n</project>\n"
]
didChange: VersionedTextDocumentIdentifier [
  version = 2
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 3
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didOpen: TextDocumentItem [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
  languageId = "xml"
  version = 1
  text = "<?xml version="1.0" encoding="UTF-8"?>\r\n<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\r\n	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">\r\n\r\n	<modelVersion>4.0.0</modelVersion>\r\n\r\n	<groupId><%= userProps.package %></groupId>\r\n	<artifactId><%= userProps.name %></artifactId>\r\n	<version>1.0.0-SNAPSHOT</version>\r\n	<packaging>jar</packaging>\r\n\r\n	<name><%= userProps.name %></name>\r\n\r\n	<licenses>\r\n		<license>\r\n			<name>Apache License, Version 2.0</name>\r\n			<distribution>repo</distribution>\r\n			<url>http://www.apache.org/licenses/LICENSE-2.0.html</url>\r\n		</license>\r\n	</licenses>\r\n\r\n	<properties>\r\n		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\r\n		<version.maven-bundle-plugin>3.2.0</version.maven-bundle-plugin>\r\n		<camel.version><%= userProps.camelVersion %></camel.version>\r\n	</properties>\r\n\r\n	<dependencies>\r\n		<dependency>\r\n			<groupId>org.apache.camel</groupId>\r\n			<artifactId>camel-core</artifactId>\r\n      		<version>${camel.version}</version>\r\n		</dependency>\r\n		<dependency>\r\n			<groupId>org.apache.camel</groupId>\r\n			<artifactId>camel-spring</artifactId>\r\n      		<version>${camel.version}</version>\r\n		</dependency>\r\n\r\n		<!-- Testing & Camel Plugin -->\r\n		<dependency>\r\n			<groupId>org.apache.camel</groupId>\r\n			<artifactId>camel-test-spring</artifactId>\r\n      		<version>${camel.version}</version>\r\n		</dependency>\r\n	</dependencies>\r\n\r\n	<repositories>\r\n		<repository>\r\n			<id>fuse-public-repository</id>\r\n			<name>FuseSource Community Release Repository</name>\r\n			<url>https://repo.fusesource.com/nexus/content/groups/public</url>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n		</repository>\r\n		<repository>\r\n			<id>red-hat-ga-repository</id>\r\n			<name>Red Hat GA Repository</name>\r\n			<url>https://maven.repository.redhat.com/ga</url>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n		</repository>\r\n		<repository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>red-hat-ea-repository</id>\r\n			<name>Red Hat EA Repository</name>\r\n			<url>https://maven.repository.redhat.com/earlyaccess/all</url>\r\n		</repository>\r\n		<!-- To remove when a long-term version will be available -->\r\n		<repository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>jboss-ea-repository</id>\r\n			<name>Red Hat JBoss Early Access Repository</name>\r\n			<url>http://repository.jboss.org/nexus/content/groups/ea</url>\r\n		</repository>\r\n	</repositories>\r\n\r\n	<pluginRepositories>\r\n		<pluginRepository>\r\n			<id>fuse-public-repository</id>\r\n			<name>FuseSource Community Release Repository</name>\r\n			<url>https://repo.fusesource.com/nexus/content/groups/public</url>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n		</pluginRepository>\r\n		<pluginRepository>\r\n			<id>red-hat-ga-repository</id>\r\n			<name>Red Hat GA Repository</name>\r\n			<url>https://maven.repository.redhat.com/ga</url>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n		</pluginRepository>\r\n				<pluginRepository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>red-hat-ea-repository</id>\r\n			<name>Red Hat EA Repository</name>\r\n			<url>https://maven.repository.redhat.com/earlyaccess/all</url>\r\n		</pluginRepository>\r\n		<!-- To remove when a long-term version will be available -->\r\n		<pluginRepository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>jboss-ea-repository</id>\r\n			<name>Red Hat JBoss Early Access Repository</name>\r\n			<url>http://repository.jboss.org/nexus/content/groups/ea</url>\r\n		</pluginRepository>\r\n	</pluginRepositories>\r\n\r\n	<description>Empty Camel Spring Example</description>\r\n</project>\r\n"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
didClose: TextDocumentIdentifier [
  uri = "git:/e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml.git?%7B%22path%22%3A%22e%3A%5C%5CUsers%5C%5Cbfitzpat%5C%5Cgithub%5C%5Cgenerator-fuse-project%5C%5Capp%5C%5Ctemplates%5C%5Cblueprint%5C%5Cpom.xml%22%2C%22ref%22%3A%22%22%7D"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didOpen: TextDocumentItem [
  uri = "git:/e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml.git?%7B%22path%22%3A%22e%3A%5C%5CUsers%5C%5Cbfitzpat%5C%5Cgithub%5C%5Cgenerator-fuse-project%5C%5Capp%5C%5Ctemplates%5C%5Cspring%5C%5Cpom.xml%22%2C%22ref%22%3A%22%22%7D"
  languageId = "xml"
  version = 1
  text = "<?xml version="1.0" encoding="UTF-8"?>\n<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">\n\n	<modelVersion>4.0.0</modelVersion>\n\n	<groupId><%= userProps.package %></groupId>\n	<artifactId><%= userProps.name %></artifactId>\n	<version>1.0.0-SNAPSHOT</version>\n	<packaging>jar</packaging>\n\n	<name><%= userProps.name %></name>\n\n	<licenses>\n		<license>\n			<name>Apache License, Version 2.0</name>\n			<distribution>repo</distribution>\n			<url>http://www.apache.org/licenses/LICENSE-2.0.html</url>\n		</license>\n	</licenses>\n\n	<properties>\n		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\n		<version.maven-bundle-plugin>3.2.0</version.maven-bundle-plugin>\n		<camel.version><%= userProps.camelVersion %></camel.version>\n	</properties>\n\n	<dependencies>\n		<dependency>\n			<groupId>org.apache.camel</groupId>\n			<artifactId>camel-core</artifactId>\n      		<version>${camel.version}</version>\n		</dependency>\n		<dependency>\n			<groupId>org.apache.camel</groupId>\n			<artifactId>camel-spring</artifactId>\n      		<version>${camel.version}</version>\n		</dependency>\n\n		<!-- Testing & Camel Plugin -->\n		<dependency>\n			<groupId>org.apache.camel</groupId>\n			<artifactId>camel-test-spring</artifactId>\n      		<version>${camel.version}</version>\n		</dependency>\n	</dependencies>\n\n	<repositories>\n		<repository>\n			<id>fuse-public-repository</id>\n			<name>FuseSource Community Release Repository</name>\n			<url>https://repo.fusesource.com/nexus/content/groups/public</url>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n		</repository>\n		<repository>\n			<id>red-hat-ga-repository</id>\n			<name>Red Hat GA Repository</name>\n			<url>https://maven.repository.redhat.com/ga</url>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n		</repository>\n		<repository>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n			<id>red-hat-ea-repository</id>\n			<name>Red Hat EA Repository</name>\n			<url>https://maven.repository.redhat.com/earlyaccess/all</url>\n		</repository>\n		<!-- To remove when a long-term version will be available -->\n		<repository>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n			<id>jboss-ea-repository</id>\n			<name>Red Hat JBoss Early Access Repository</name>\n			<url>http://repository.jboss.org/nexus/content/groups/ea</url>\n		</repository>\n	</repositories>\n\n	<pluginRepositories>\n		<pluginRepository>\n			<id>fuse-public-repository</id>\n			<name>FuseSource Community Release Repository</name>\n			<url>https://repo.fusesource.com/nexus/content/groups/public</url>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n		</pluginRepository>\n		<pluginRepository>\n			<id>red-hat-ga-repository</id>\n			<name>Red Hat GA Repository</name>\n			<url>https://maven.repository.redhat.com/ga</url>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n		</pluginRepository>\n				<pluginRepository>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n			<id>red-hat-ea-repository</id>\n			<name>Red Hat EA Repository</name>\n			<url>https://maven.repository.redhat.com/earlyaccess/all</url>\n		</pluginRepository>\n		<!-- To remove when a long-term version will be available -->\n		<pluginRepository>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n			<id>jboss-ea-repository</id>\n			<name>Red Hat JBoss Early Access Repository</name>\n			<url>http://repository.jboss.org/nexus/content/groups/ea</url>\n		</pluginRepository>\n	</pluginRepositories>\n\n	<description>Empty Camel Spring Example</description>\n</project>\n"
]
didChange: VersionedTextDocumentIdentifier [
  version = 2
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 3
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 4
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 5
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 6
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 7
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 8
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.completion.CamelEndpointCompletionProcessor.getCompletions(CamelEndpointCompletionProcessor.java:49)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.completion(CamelTextDocumentService.java:84)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 11
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 12
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.completion.CamelEndpointCompletionProcessor.getCompletions(CamelEndpointCompletionProcessor.java:49)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.completion(CamelTextDocumentService.java:84)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 17
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 18
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.completion.CamelEndpointCompletionProcessor.getCompletions(CamelEndpointCompletionProcessor.java:49)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.completion(CamelTextDocumentService.java:84)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 22
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 24
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.completion.CamelEndpointCompletionProcessor.getCompletions(CamelEndpointCompletionProcessor.java:49)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.completion(CamelTextDocumentService.java:84)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 30
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 31
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didSave: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
SERVER: changeWatchedFiles: size -> 1
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 177
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
didClose: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/bp/pom.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
SERVER: changeWatchedFiles: size -> 2
SERVER: changeWatchedFiles: size -> 1
didClose: TextDocumentIdentifier [
  uri = "git:/e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml.git?%7B%22path%22%3A%22e%3A%5C%5CUsers%5C%5Cbfitzpat%5C%5Cgithub%5C%5Cgenerator-fuse-project%5C%5Capp%5C%5Ctemplates%5C%5Cspring%5C%5Cpom.xml%22%2C%22ref%22%3A%22%22%7D"
]
SERVER: changeWatchedFiles: size -> 1
didOpen: TextDocumentItem [
  uri = "git:/e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml.git?%7B%22path%22%3A%22e%3A%5C%5CUsers%5C%5Cbfitzpat%5C%5Cgithub%5C%5Cgenerator-fuse-project%5C%5Capp%5C%5Ctemplates%5C%5Cspring%5C%5Cpom.xml%22%2C%22ref%22%3A%22%22%7D"
  languageId = "xml"
  version = 1
  text = "<?xml version="1.0" encoding="UTF-8"?>\n<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">\n\n	<modelVersion>4.0.0</modelVersion>\n\n	<groupId><%= userProps.package %></groupId>\n	<artifactId><%= userProps.name %></artifactId>\n	<version>1.0.0-SNAPSHOT</version>\n	<packaging>jar</packaging>\n\n	<name><%= userProps.name %></name>\n\n	<licenses>\n		<license>\n			<name>Apache License, Version 2.0</name>\n			<distribution>repo</distribution>\n			<url>http://www.apache.org/licenses/LICENSE-2.0.html</url>\n		</license>\n	</licenses>\n\n	<properties>\n		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\n		<version.maven-bundle-plugin>3.2.0</version.maven-bundle-plugin>\n		<camel.version><%= userProps.camelVersion %></camel.version>\n	</properties>\n\n	<dependencies>\n		<dependency>\n			<groupId>org.apache.camel</groupId>\n			<artifactId>camel-core</artifactId>\n      		<version>${camel.version}</version>\n		</dependency>\n		<dependency>\n			<groupId>org.apache.camel</groupId>\n			<artifactId>camel-spring</artifactId>\n      		<version>${camel.version}</version>\n		</dependency>\n\n		<!-- Testing & Camel Plugin -->\n		<dependency>\n			<groupId>org.apache.camel</groupId>\n			<artifactId>camel-test-spring</artifactId>\n      		<version>${camel.version}</version>\n		</dependency>\n	</dependencies>\n\n	<repositories>\n		<repository>\n			<id>fuse-public-repository</id>\n			<name>FuseSource Community Release Repository</name>\n			<url>https://repo.fusesource.com/nexus/content/groups/public</url>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n		</repository>\n		<repository>\n			<id>red-hat-ga-repository</id>\n			<name>Red Hat GA Repository</name>\n			<url>https://maven.repository.redhat.com/ga</url>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n		</repository>\n		<repository>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n			<id>red-hat-ea-repository</id>\n			<name>Red Hat EA Repository</name>\n			<url>https://maven.repository.redhat.com/earlyaccess/all</url>\n		</repository>\n		<!-- To remove when a long-term version will be available -->\n		<repository>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n			<id>jboss-ea-repository</id>\n			<name>Red Hat JBoss Early Access Repository</name>\n			<url>http://repository.jboss.org/nexus/content/groups/ea</url>\n		</repository>\n	</repositories>\n\n	<pluginRepositories>\n		<pluginRepository>\n			<id>fuse-public-repository</id>\n			<name>FuseSource Community Release Repository</name>\n			<url>https://repo.fusesource.com/nexus/content/groups/public</url>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n		</pluginRepository>\n		<pluginRepository>\n			<id>red-hat-ga-repository</id>\n			<name>Red Hat GA Repository</name>\n			<url>https://maven.repository.redhat.com/ga</url>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n		</pluginRepository>\n				<pluginRepository>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n			<id>red-hat-ea-repository</id>\n			<name>Red Hat EA Repository</name>\n			<url>https://maven.repository.redhat.com/earlyaccess/all</url>\n		</pluginRepository>\n		<!-- To remove when a long-term version will be available -->\n		<pluginRepository>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n			<id>jboss-ea-repository</id>\n			<name>Red Hat JBoss Early Access Repository</name>\n			<url>http://repository.jboss.org/nexus/content/groups/ea</url>\n		</pluginRepository>\n	</pluginRepositories>\n\n	<description>Empty Camel Spring Example</description>\n</project>\n"
]
didClose: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
didClose: TextDocumentIdentifier [
  uri = "git:/e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml.git?%7B%22path%22%3A%22e%3A%5C%5CUsers%5C%5Cbfitzpat%5C%5Cgithub%5C%5Cgenerator-fuse-project%5C%5Capp%5C%5Ctemplates%5C%5Cspring%5C%5Cpom.xml%22%2C%22ref%22%3A%22%22%7D"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didOpen: TextDocumentItem [
  uri = "git:/e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml.git?%7B%22path%22%3A%22e%3A%5C%5CUsers%5C%5Cbfitzpat%5C%5Cgithub%5C%5Cgenerator-fuse-project%5C%5Capp%5C%5Ctemplates%5C%5Cblueprint%5C%5Cpom.xml%22%2C%22ref%22%3A%22%22%7D"
  languageId = "xml"
  version = 1
  text = "<?xml version="1.0" encoding="UTF-8"?>\n<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"\n    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">\n  <modelVersion>4.0.0</modelVersion>\n\n	<groupId><%= userProps.package %></groupId>\n	<artifactId><%= userProps.name %></artifactId>\n	<version>1.0.0-SNAPSHOT</version>\n	<packaging>jar</packaging>\n\n  <name><%= userProps.name %></name>\n\n  <licenses>\n    <license>\n      <name>Apache License, Version 2.0</name>\n      <url>http://www.apache.org/licenses/LICENSE-2.0.html</url>\n      <distribution>repo</distribution>\n    </license>\n  </licenses>\n\n  <properties>\n		<camel.version><%= userProps.camelVersion %></camel.version>\n    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\n    <version.maven-bundle-plugin>3.2.0</version.maven-bundle-plugin>\n    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n  </properties>\n\n  <dependencies>\n    <dependency>\n      <groupId>org.apache.camel</groupId>\n      <artifactId>camel-core</artifactId>\n      <version>${camel.version}</version>\n    </dependency>\n    <dependency>\n      <groupId>org.apache.camel</groupId>\n      <artifactId>camel-blueprint</artifactId>\n      <version>${camel.version}</version>\n    </dependency>\n    <dependency>\n      <groupId>org.apache.camel</groupId>\n      <artifactId>camel-test-blueprint</artifactId>\n      <version>${camel.version}</version>\n      <scope>test</scope>\n    </dependency>\n  </dependencies>\n  \n	<repositories>\n		<repository>\n			<id>fuse-public-repository</id>\n			<name>FuseSource Community Release Repository</name>\n			<url>https://repo.fusesource.com/nexus/content/groups/public</url>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n		</repository>\n		<repository>\n			<id>red-hat-ga-repository</id>\n			<name>Red Hat GA Repository</name>\n			<url>https://maven.repository.redhat.com/ga</url>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n		</repository>\n		<repository>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n			<id>red-hat-ea-repository</id>\n			<name>Red Hat EA Repository</name>\n			<url>https://maven.repository.redhat.com/earlyaccess/all</url>\n		</repository>\n		<!-- To remove when a long-term version will be available -->\n		<repository>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n			<id>jboss-ea-repository</id>\n			<name>Red Hat JBoss Early Access Repository</name>\n			<url>http://repository.jboss.org/nexus/content/groups/ea</url>\n		</repository>\n	</repositories>\n\n	<pluginRepositories>\n		<pluginRepository>\n			<id>fuse-public-repository</id>\n			<name>FuseSource Community Release Repository</name>\n			<url>https://repo.fusesource.com/nexus/content/groups/public</url>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n		</pluginRepository>\n		<pluginRepository>\n			<id>red-hat-ga-repository</id>\n			<name>Red Hat GA Repository</name>\n			<url>https://maven.repository.redhat.com/ga</url>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n		</pluginRepository>\n				<pluginRepository>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n			<id>red-hat-ea-repository</id>\n			<name>Red Hat EA Repository</name>\n			<url>https://maven.repository.redhat.com/earlyaccess/all</url>\n		</pluginRepository>\n		<!-- To remove when a long-term version will be available -->\n		<pluginRepository>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n			<id>jboss-ea-repository</id>\n			<name>Red Hat JBoss Early Access Repository</name>\n			<url>http://repository.jboss.org/nexus/content/groups/ea</url>\n		</pluginRepository>\n	</pluginRepositories>\n\n  <description>Empty Camel Blueprint Example</description>\n</project>\n"
]
didSave: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
didClose: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
didClose: TextDocumentIdentifier [
  uri = "git:/e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml.git?%7B%22path%22%3A%22e%3A%5C%5CUsers%5C%5Cbfitzpat%5C%5Cgithub%5C%5Cgenerator-fuse-project%5C%5Capp%5C%5Ctemplates%5C%5Cblueprint%5C%5Cpom.xml%22%2C%22ref%22%3A%22%22%7D"
]
SERVER: changeWatchedFiles: size -> 1
SERVER: changeWatchedFiles: size -> 1
SERVER: changeWatchedFiles: size -> 2
SERVER: changeWatchedFiles: size -> 1
SERVER: changeWatchedFiles: size -> 1
didOpen: TextDocumentItem [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
  languageId = "xml"
  version = 1
  text = "<?xml version="1.0" encoding="UTF-8"?>\r\n<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"\r\n    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">\r\n  <modelVersion>4.0.0</modelVersion>\r\n\r\n	<groupId><%= userProps.package %></groupId>\r\n	<artifactId><%= userProps.name %></artifactId>\r\n	<version>1.0.0-SNAPSHOT</version>\r\n	<packaging>jar</packaging>\r\n\r\n  <name><%= userProps.name %></name>\r\n\r\n  <licenses>\r\n    <license>\r\n      <name>Apache License, Version 2.0</name>\r\n      <url>http://www.apache.org/licenses/LICENSE-2.0.html</url>\r\n      <distribution>repo</distribution>\r\n    </license>\r\n  </licenses>\r\n\r\n  <properties>\r\n		<camel.version><%= userProps.camelVersion %></camel.version>\r\n    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\r\n    <version.maven-bundle-plugin>3.2.0</version.maven-bundle-plugin>\r\n    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n  </properties>\r\n\r\n  <dependencies>\r\n    <dependency>\r\n      <groupId>org.apache.camel</groupId>\r\n      <artifactId>camel-core</artifactId>\r\n      <version>${camel.version}</version>\r\n    </dependency>\r\n    <dependency>\r\n      <groupId>org.apache.camel</groupId>\r\n      <artifactId>camel-blueprint</artifactId>\r\n      <version>${camel.version}</version>\r\n    </dependency>\r\n    <dependency>\r\n      <groupId>org.apache.camel</groupId>\r\n      <artifactId>camel-test-blueprint</artifactId>\r\n      <version>${camel.version}</version>\r\n      <scope>test</scope>\r\n    </dependency>\r\n  </dependencies>\r\n  \r\n	<repositories>\r\n		<repository>\r\n			<id>fuse-public-repository</id>\r\n			<name>FuseSource Community Release Repository</name>\r\n			<url>https://repo.fusesource.com/nexus/content/groups/public</url>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n		</repository>\r\n		<repository>\r\n			<id>red-hat-ga-repository</id>\r\n			<name>Red Hat GA Repository</name>\r\n			<url>https://maven.repository.redhat.com/ga</url>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n		</repository>\r\n		<repository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>red-hat-ea-repository</id>\r\n			<name>Red Hat EA Repository</name>\r\n			<url>https://maven.repository.redhat.com/earlyaccess/all</url>\r\n		</repository>\r\n		<!-- To remove when a long-term version will be available -->\r\n		<repository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>jboss-ea-repository</id>\r\n			<name>Red Hat JBoss Early Access Repository</name>\r\n			<url>http://repository.jboss.org/nexus/content/groups/ea</url>\r\n		</repository>\r\n	</repositories>\r\n\r\n	<pluginRepositories>\r\n		<pluginRepository>\r\n			<id>fuse-public-repository</id>\r\n			<name>FuseSource Community Release Repository</name>\r\n			<url>https://repo.fusesource.com/nexus/content/groups/public</url>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n		</pluginRepository>\r\n		<pluginRepository>\r\n			<id>red-hat-ga-repository</id>\r\n			<name>Red Hat GA Repository</name>\r\n			<url>https://maven.repository.redhat.com/ga</url>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n		</pluginRepository>\r\n				<pluginRepository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>red-hat-ea-repository</id>\r\n			<name>Red Hat EA Repository</name>\r\n			<url>https://maven.repository.redhat.com/earlyaccess/all</url>\r\n		</pluginRepository>\r\n		<!-- To remove when a long-term version will be available -->\r\n		<pluginRepository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>jboss-ea-repository</id>\r\n			<name>Red Hat JBoss Early Access Repository</name>\r\n			<url>http://repository.jboss.org/nexus/content/groups/ea</url>\r\n		</pluginRepository>\r\n	</pluginRepositories>\r\n\r\n	<build>\r\n		<plugins>\r\n      <!-- Allows the routes to be run via 'mvn camel:run' -->\r\n      <plugin>\r\n        <groupId>org.apache.camel</groupId>\r\n        <artifactId>camel-maven-plugin</artifactId>\r\n  			<configuration>\r\n    			<applicationContextUri>OSGI-INF/blueprint/blueprint.xml</applicationContextUri>\r\n  			</configuration>\r\n	    </plugin>\r\n		</plugins>\r\n	</build>\r\n\r\n  <description>Empty Camel Blueprint Example</description>\r\n</project>\r\n"
]
didOpen: TextDocumentItem [
  uri = "git:/e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml?%7B%22path%22%3A%22e%3A%5C%5CUsers%5C%5Cbfitzpat%5C%5Cgithub%5C%5Cgenerator-fuse-project%5C%5Capp%5C%5Ctemplates%5C%5Cblueprint%5C%5Cpom.xml%22%2C%22ref%22%3A%22~%22%7D"
  languageId = "xml"
  version = 1
  text = "<?xml version="1.0" encoding="UTF-8"?>\n<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"\n    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">\n  <modelVersion>4.0.0</modelVersion>\n\n	<groupId><%= userProps.package %></groupId>\n	<artifactId><%= userProps.name %></artifactId>\n	<version>1.0.0-SNAPSHOT</version>\n	<packaging>jar</packaging>\n\n  <name><%= userProps.name %></name>\n\n  <licenses>\n    <license>\n      <name>Apache License, Version 2.0</name>\n      <url>http://www.apache.org/licenses/LICENSE-2.0.html</url>\n      <distribution>repo</distribution>\n    </license>\n  </licenses>\n\n  <properties>\n		<camel.version><%= userProps.camelVersion %></camel.version>\n    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\n    <version.maven-bundle-plugin>3.2.0</version.maven-bundle-plugin>\n    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n  </properties>\n\n  <dependencies>\n    <dependency>\n      <groupId>org.apache.camel</groupId>\n      <artifactId>camel-core</artifactId>\n      <version>${camel.version}</version>\n    </dependency>\n    <dependency>\n      <groupId>org.apache.camel</groupId>\n      <artifactId>camel-blueprint</artifactId>\n      <version>${camel.version}</version>\n    </dependency>\n    <dependency>\n      <groupId>org.apache.camel</groupId>\n      <artifactId>camel-test-blueprint</artifactId>\n      <version>${camel.version}</version>\n      <scope>test</scope>\n    </dependency>\n  </dependencies>\n  \n	<repositories>\n		<repository>\n			<id>fuse-public-repository</id>\n			<name>FuseSource Community Release Repository</name>\n			<url>https://repo.fusesource.com/nexus/content/groups/public</url>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n		</repository>\n		<repository>\n			<id>red-hat-ga-repository</id>\n			<name>Red Hat GA Repository</name>\n			<url>https://maven.repository.redhat.com/ga</url>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n		</repository>\n		<repository>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n			<id>red-hat-ea-repository</id>\n			<name>Red Hat EA Repository</name>\n			<url>https://maven.repository.redhat.com/earlyaccess/all</url>\n		</repository>\n		<!-- To remove when a long-term version will be available -->\n		<repository>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n			<id>jboss-ea-repository</id>\n			<name>Red Hat JBoss Early Access Repository</name>\n			<url>http://repository.jboss.org/nexus/content/groups/ea</url>\n		</repository>\n	</repositories>\n\n	<pluginRepositories>\n		<pluginRepository>\n			<id>fuse-public-repository</id>\n			<name>FuseSource Community Release Repository</name>\n			<url>https://repo.fusesource.com/nexus/content/groups/public</url>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n		</pluginRepository>\n		<pluginRepository>\n			<id>red-hat-ga-repository</id>\n			<name>Red Hat GA Repository</name>\n			<url>https://maven.repository.redhat.com/ga</url>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n		</pluginRepository>\n				<pluginRepository>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n			<id>red-hat-ea-repository</id>\n			<name>Red Hat EA Repository</name>\n			<url>https://maven.repository.redhat.com/earlyaccess/all</url>\n		</pluginRepository>\n		<!-- To remove when a long-term version will be available -->\n		<pluginRepository>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n			<id>jboss-ea-repository</id>\n			<name>Red Hat JBoss Early Access Repository</name>\n			<url>http://repository.jboss.org/nexus/content/groups/ea</url>\n		</pluginRepository>\n	</pluginRepositories>\n\n  <description>Empty Camel Blueprint Example</description>\n</project>\n"
]
didChange: VersionedTextDocumentIdentifier [
  version = 2
  uri = "git:/e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml?%7B%22path%22%3A%22e%3A%5C%5CUsers%5C%5Cbfitzpat%5C%5Cgithub%5C%5Cgenerator-fuse-project%5C%5Capp%5C%5Ctemplates%5C%5Cblueprint%5C%5Cpom.xml%22%2C%22ref%22%3A%22~%22%7D"
]
didClose: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
didClose: TextDocumentIdentifier [
  uri = "git:/e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml?%7B%22path%22%3A%22e%3A%5C%5CUsers%5C%5Cbfitzpat%5C%5Cgithub%5C%5Cgenerator-fuse-project%5C%5Capp%5C%5Ctemplates%5C%5Cblueprint%5C%5Cpom.xml%22%2C%22ref%22%3A%22~%22%7D"
]
SERVER: changeWatchedFiles: size -> 2
SERVER: changeWatchedFiles: size -> 2
Shutting down language server
Setting client pid to 11244
SERVER: changeConfig: settings -> {"xml":{},"java":{"home":null,"jdt":{"ls":{"vmargs":"-noverify -Xmx1G -XX:+UseG1GC -XX:+UseStringDeduplication"}},"errors":{"incompleteClasspath":{"severity":"warning"}},"configuration":{"updateBuildConfiguration":"interactive","maven":{"userSettings":null}},"trace":{"server":"off"},"import":{"gradle":{"enabled":true},"maven":{"enabled":true},"exclusions":["**/node_modules/**","**/.metadata/**","**/archetype-resources/**","**/META-INF/maven/**"]},"referencesCodeLens":{"enabled":false},"signatureHelp":{"enabled":false},"implementationsCodeLens":{"enabled":false},"format":{"enabled":true,"settings":{"url":null,"profile":null},"comments":{"enabled":true},"onType":{"enabled":true}},"saveActions":{"organizeImports":false},"contentProvider":{"preferred":null},"autobuild":{"enabled":true},"completion":{"overwrite":true,"guessMethodArguments":false,"favoriteStaticMembers":["org.junit.Assert.*","org.junit.Assume.*","org.junit.jupiter.api.Assertions.*","org.junit.jupiter.api.Assumptions.*","org.junit.jupiter.api.DynamicContainer.*","org.junit.jupiter.api.DynamicTest.*"],"importOrder":["java","javax","com","org"]},"progressReports":{"enabled":true},"debug":{"logLevel":"warn","settings":{"showHex":false,"showStaticVariables":true,"showQualifiedNames":false,"maxStringLength":0,"enableHotCodeReplace":true}},"test":{"report":{"position":"sideView"}}}}
didOpen: TextDocumentItem [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/larsdemo/pom.xml"
  languageId = "xml"
  version = 1
  text = "<?xml version="1.0" encoding="UTF-8"?>\r\n<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\r\n	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">\r\n\r\n	<modelVersion>4.0.0</modelVersion>\r\n\r\n	<groupId>com.larsdemo</groupId>\r\n	<artifactId>larsdemo</artifactId>\r\n	<version>1.0.0-SNAPSHOT</version>\r\n	<packaging>jar</packaging>\r\n\r\n	<name>larsdemo</name>\r\n\r\n	<licenses>\r\n		<license>\r\n			<name>Apache License, Version 2.0</name>\r\n			<distribution>repo</distribution>\r\n			<url>http://www.apache.org/licenses/LICENSE-2.0.html</url>\r\n		</license>\r\n	</licenses>\r\n\r\n	<properties>\r\n		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\r\n		<version.maven-bundle-plugin>3.2.0</version.maven-bundle-plugin>\r\n		<camel.version>2.18.1</camel.version>\r\n	</properties>\r\n\r\n	<dependencies>\r\n		<dependency>\r\n			<groupId>org.apache.camel</groupId>\r\n			<artifactId>camel-core</artifactId>\r\n      		<version>${camel.version}</version>\r\n		</dependency>\r\n		<dependency>\r\n			<groupId>org.apache.camel</groupId>\r\n			<artifactId>camel-spring</artifactId>\r\n      		<version>${camel.version}</version>\r\n		</dependency>\r\n\r\n		<!-- Testing & Camel Plugin -->\r\n		<dependency>\r\n			<groupId>org.apache.camel</groupId>\r\n			<artifactId>camel-test-spring</artifactId>\r\n      		<version>${camel.version}</version>\r\n		</dependency>\r\n	</dependencies>\r\n\r\n	<repositories>\r\n		<repository>\r\n			<id>fuse-public-repository</id>\r\n			<name>FuseSource Community Release Repository</name>\r\n			<url>https://repo.fusesource.com/nexus/content/groups/public</url>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n		</repository>\r\n		<repository>\r\n			<id>red-hat-ga-repository</id>\r\n			<name>Red Hat GA Repository</name>\r\n			<url>https://maven.repository.redhat.com/ga</url>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n		</repository>\r\n		<repository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>red-hat-ea-repository</id>\r\n			<name>Red Hat EA Repository</name>\r\n			<url>https://maven.repository.redhat.com/earlyaccess/all</url>\r\n		</repository>\r\n		<!-- To remove when a long-term version will be available -->\r\n		<repository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>jboss-ea-repository</id>\r\n			<name>Red Hat JBoss Early Access Repository</name>\r\n			<url>http://repository.jboss.org/nexus/content/groups/ea</url>\r\n		</repository>\r\n	</repositories>\r\n\r\n	<pluginRepositories>\r\n		<pluginRepository>\r\n			<id>fuse-public-repository</id>\r\n			<name>FuseSource Community Release Repository</name>\r\n			<url>https://repo.fusesource.com/nexus/content/groups/public</url>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n		</pluginRepository>\r\n		<pluginRepository>\r\n			<id>red-hat-ga-repository</id>\r\n			<name>Red Hat GA Repository</name>\r\n			<url>https://maven.repository.redhat.com/ga</url>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n		</pluginRepository>\r\n				<pluginRepository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>red-hat-ea-repository</id>\r\n			<name>Red Hat EA Repository</name>\r\n			<url>https://maven.repository.redhat.com/earlyaccess/all</url>\r\n		</pluginRepository>\r\n		<!-- To remove when a long-term version will be available -->\r\n		<pluginRepository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>jboss-ea-repository</id>\r\n			<name>Red Hat JBoss Early Access Repository</name>\r\n			<url>http://repository.jboss.org/nexus/content/groups/ea</url>\r\n		</pluginRepository>\r\n	</pluginRepositories>\r\n\r\n	<build>\r\n		<plugins>\r\n		<!-- Allows the routes to be run via 'mvn camel:run' -->\r\n		<plugin>\r\n			<groupId>org.apache.camel</groupId>\r\n			<artifactId>camel-maven-plugin</artifactId>\r\n				<configuration>\r\n					<applicationContextUri>META-INF/spring/camel-context.xml</applicationContextUri>\r\n				</configuration>\r\n			</plugin>\r\n		</plugins>\r\n	</build>\r\n\r\n	<description>Empty Camel Spring Example</description>\r\n</project>\r\n"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/larsdemo/pom.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/larsdemo/pom.xml"
]
SERVER: changeWatchedFiles: size -> 1
SERVER: changeWatchedFiles: size -> 1
didClose: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/larsdemo/pom.xml"
]
didOpen: TextDocumentItem [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/larsdemo/src/main/resources/META-INF/spring/camel-context.xml"
  languageId = "xml"
  version = 1
  text = "<?xml version="1.0" encoding="UTF-8"?>\r\n<!--\r\n    Copyright 2014-2017, Red Hat, Inc. and/or its affiliates, and individual\r\n    contributors by the @authors tag. \r\n    Licensed under the Apache License, Version 2.0 (the "License");\r\n    you may not use this file except in compliance with the License.\r\n    You may obtain a copy of the License at\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n    Unless required by applicable law or agreed to in writing, software\r\n    distributed under the License is distributed on an "AS IS" BASIS,\r\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n    See the License for the specific language governing permissions and\r\n    limitations under the License.\r\n-->\r\n<!-- Configures the Camel Context-->\r\n<beans xmlns="http://www.springframework.org/schema/beans"\r\n    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd        http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">\r\n    <camelContext id="_camelContext1" xmlns="http://camel.apache.org/schema/spring">\r\n        <route id="_route1">\r\n        </route>\r\n    </camelContext>\r\n</beans>"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/larsdemo/src/main/resources/META-INF/spring/camel-context.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/larsdemo/src/main/resources/META-INF/spring/camel-context.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/larsdemo/src/main/resources/META-INF/spring/camel-context.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/larsdemo/src/main/resources/META-INF/spring/camel-context.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/larsdemo/src/main/resources/META-INF/spring/camel-context.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/larsdemo/src/main/resources/META-INF/spring/camel-context.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/larsdemo/src/main/resources/META-INF/spring/camel-context.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/larsdemo/src/main/resources/META-INF/spring/camel-context.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/larsdemo/src/main/resources/META-INF/spring/camel-context.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/larsdemo/src/main/resources/META-INF/spring/camel-context.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/larsdemo/src/main/resources/META-INF/spring/camel-context.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/larsdemo/src/main/resources/META-INF/spring/camel-context.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/larsdemo/src/main/resources/META-INF/spring/camel-context.xml"
]
didClose: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/larsdemo/src/main/resources/META-INF/spring/camel-context.xml"
]
SERVER: changeWatchedFiles: size -> 1
didOpen: TextDocumentItem [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/pom.xml"
  languageId = "xml"
  version = 1
  text = "<?xml version="1.0" encoding="UTF-8"?>\r\n<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\r\n	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">\r\n\r\n	<modelVersion>4.0.0</modelVersion>\r\n\r\n	<groupId>com.generator fuse project</groupId>\r\n	<artifactId>mydemo</artifactId>\r\n	<version>1.0.0-SNAPSHOT</version>\r\n	<packaging>jar</packaging>\r\n\r\n	<name>mydemo</name>\r\n\r\n	<licenses>\r\n		<license>\r\n			<name>Apache License, Version 2.0</name>\r\n			<distribution>repo</distribution>\r\n			<url>http://www.apache.org/licenses/LICENSE-2.0.html</url>\r\n		</license>\r\n	</licenses>\r\n\r\n	<properties>\r\n		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\r\n		<version.maven-bundle-plugin>3.2.0</version.maven-bundle-plugin>\r\n		<camel.version>2.18.1</camel.version>\r\n	</properties>\r\n\r\n	<dependencies>\r\n		<dependency>\r\n			<groupId>org.apache.camel</groupId>\r\n			<artifactId>camel-core</artifactId>\r\n      		<version>${camel.version}</version>\r\n		</dependency>\r\n		<dependency>\r\n			<groupId>org.apache.camel</groupId>\r\n			<artifactId>camel-spring</artifactId>\r\n      		<version>${camel.version}</version>\r\n		</dependency>\r\n\r\n		<!-- Testing & Camel Plugin -->\r\n		<dependency>\r\n			<groupId>org.apache.camel</groupId>\r\n			<artifactId>camel-test-spring</artifactId>\r\n      		<version>${camel.version}</version>\r\n		</dependency>\r\n	</dependencies>\r\n\r\n	<repositories>\r\n		<repository>\r\n			<id>fuse-public-repository</id>\r\n			<name>FuseSource Community Release Repository</name>\r\n			<url>https://repo.fusesource.com/nexus/content/groups/public</url>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n		</repository>\r\n		<repository>\r\n			<id>red-hat-ga-repository</id>\r\n			<name>Red Hat GA Repository</name>\r\n			<url>https://maven.repository.redhat.com/ga</url>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n		</repository>\r\n		<repository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>red-hat-ea-repository</id>\r\n			<name>Red Hat EA Repository</name>\r\n			<url>https://maven.repository.redhat.com/earlyaccess/all</url>\r\n		</repository>\r\n		<!-- To remove when a long-term version will be available -->\r\n		<repository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>jboss-ea-repository</id>\r\n			<name>Red Hat JBoss Early Access Repository</name>\r\n			<url>http://repository.jboss.org/nexus/content/groups/ea</url>\r\n		</repository>\r\n	</repositories>\r\n\r\n	<pluginRepositories>\r\n		<pluginRepository>\r\n			<id>fuse-public-repository</id>\r\n			<name>FuseSource Community Release Repository</name>\r\n			<url>https://repo.fusesource.com/nexus/content/groups/public</url>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n		</pluginRepository>\r\n		<pluginRepository>\r\n			<id>red-hat-ga-repository</id>\r\n			<name>Red Hat GA Repository</name>\r\n			<url>https://maven.repository.redhat.com/ga</url>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n		</pluginRepository>\r\n				<pluginRepository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>red-hat-ea-repository</id>\r\n			<name>Red Hat EA Repository</name>\r\n			<url>https://maven.repository.redhat.com/earlyaccess/all</url>\r\n		</pluginRepository>\r\n		<!-- To remove when a long-term version will be available -->\r\n		<pluginRepository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>jboss-ea-repository</id>\r\n			<name>Red Hat JBoss Early Access Repository</name>\r\n			<url>http://repository.jboss.org/nexus/content/groups/ea</url>\r\n		</pluginRepository>\r\n	</pluginRepositories>\r\n\r\n	<build>\r\n		<plugins>\r\n		<!-- Allows the routes to be run via 'mvn camel:run' -->\r\n		<plugin>\r\n			<groupId>org.apache.camel</groupId>\r\n			<artifactId>camel-maven-plugin</artifactId>\r\n				<configuration>\r\n					<applicationContextUri>META-INF/spring/camel-context.xml</applicationContextUri>\r\n				</configuration>\r\n			</plugin>\r\n		</plugins>\r\n	</build>\r\n\r\n	<description>Empty Camel Spring Example</description>\r\n</project>\r\n"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/pom.xml"
]
didClose: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/pom.xml"
]
SERVER: changeWatchedFiles: size -> 1
SERVER: changeWatchedFiles: size -> 2
didOpen: TextDocumentItem [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
  languageId = "xml"
  version = 1
  text = "<?xml version="1.0" encoding="UTF-8"?>\r\n<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\r\n	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">\r\n\r\n	<modelVersion>4.0.0</modelVersion>\r\n\r\n	<groupId><%= userProps.package %></groupId>\r\n	<artifactId><%= userProps.name %></artifactId>\r\n	<version>1.0.0-SNAPSHOT</version>\r\n	<packaging>jar</packaging>\r\n\r\n	<name><%= userProps.name %></name>\r\n\r\n	<licenses>\r\n		<license>\r\n			<name>Apache License, Version 2.0</name>\r\n			<distribution>repo</distribution>\r\n			<url>http://www.apache.org/licenses/LICENSE-2.0.html</url>\r\n		</license>\r\n	</licenses>\r\n\r\n	<properties>\r\n		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\r\n		<version.maven-bundle-plugin>3.2.0</version.maven-bundle-plugin>\r\n		<camel.version><%= userProps.camelVersion %></camel.version>\r\n	</properties>\r\n\r\n	<dependencies>\r\n		<dependency>\r\n			<groupId>org.apache.camel</groupId>\r\n			<artifactId>camel-core</artifactId>\r\n      		<version>${camel.version}</version>\r\n		</dependency>\r\n		<dependency>\r\n			<groupId>org.apache.camel</groupId>\r\n			<artifactId>camel-spring</artifactId>\r\n      		<version>${camel.version}</version>\r\n		</dependency>\r\n\r\n		<!-- Testing & Camel Plugin -->\r\n		<dependency>\r\n			<groupId>org.apache.camel</groupId>\r\n			<artifactId>camel-test-spring</artifactId>\r\n      		<version>${camel.version}</version>\r\n		</dependency>\r\n	</dependencies>\r\n\r\n	<repositories>\r\n		<repository>\r\n			<id>fuse-public-repository</id>\r\n			<name>FuseSource Community Release Repository</name>\r\n			<url>https://repo.fusesource.com/nexus/content/groups/public</url>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n		</repository>\r\n		<repository>\r\n			<id>red-hat-ga-repository</id>\r\n			<name>Red Hat GA Repository</name>\r\n			<url>https://maven.repository.redhat.com/ga</url>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n		</repository>\r\n		<repository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>red-hat-ea-repository</id>\r\n			<name>Red Hat EA Repository</name>\r\n			<url>https://maven.repository.redhat.com/earlyaccess/all</url>\r\n		</repository>\r\n		<!-- To remove when a long-term version will be available -->\r\n		<repository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>jboss-ea-repository</id>\r\n			<name>Red Hat JBoss Early Access Repository</name>\r\n			<url>http://repository.jboss.org/nexus/content/groups/ea</url>\r\n		</repository>\r\n	</repositories>\r\n\r\n	<pluginRepositories>\r\n		<pluginRepository>\r\n			<id>fuse-public-repository</id>\r\n			<name>FuseSource Community Release Repository</name>\r\n			<url>https://repo.fusesource.com/nexus/content/groups/public</url>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n		</pluginRepository>\r\n		<pluginRepository>\r\n			<id>red-hat-ga-repository</id>\r\n			<name>Red Hat GA Repository</name>\r\n			<url>https://maven.repository.redhat.com/ga</url>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n		</pluginRepository>\r\n				<pluginRepository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>red-hat-ea-repository</id>\r\n			<name>Red Hat EA Repository</name>\r\n			<url>https://maven.repository.redhat.com/earlyaccess/all</url>\r\n		</pluginRepository>\r\n		<!-- To remove when a long-term version will be available -->\r\n		<pluginRepository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>jboss-ea-repository</id>\r\n			<name>Red Hat JBoss Early Access Repository</name>\r\n			<url>http://repository.jboss.org/nexus/content/groups/ea</url>\r\n		</pluginRepository>\r\n	</pluginRepositories>\r\n\r\n	<build>\r\n		<plugins>\r\n		<!-- Allows the routes to be run via 'mvn camel:run' -->\r\n		<plugin>\r\n			<groupId>org.apache.camel</groupId>\r\n			<artifactId>camel-maven-plugin</artifactId>\r\n				<configuration>\r\n					<applicationContextUri>META-INF/spring/camel-context.xml</applicationContextUri>\r\n				</configuration>\r\n			</plugin>\r\n		</plugins>\r\n	</build>\r\n\r\n	<description>Empty Camel Spring Example</description>\r\n</project>\r\n"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 2
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.completion.CamelEndpointCompletionProcessor.getCompletions(CamelEndpointCompletionProcessor.java:49)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.completion(CamelTextDocumentService.java:84)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 5
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 6
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 7
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 8
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 9
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 10
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 11
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 12
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 13
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 14
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 15
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 16
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 17
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.completion.CamelEndpointCompletionProcessor.getCompletions(CamelEndpointCompletionProcessor.java:49)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.completion(CamelTextDocumentService.java:84)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 18
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 19
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 20
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.completion.CamelEndpointCompletionProcessor.getCompletions(CamelEndpointCompletionProcessor.java:49)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.completion(CamelTextDocumentService.java:84)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didOpen: TextDocumentItem [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/placeholder/CamelRoute.java"
  languageId = "java"
  version = 1
  text = ""
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/placeholder/CamelRoute.java"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 1; Premature end of file.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
SERVER: changeWatchedFiles: size -> 1
didChange: VersionedTextDocumentIdentifier [
  version = 2
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/placeholder/CamelRoute.java"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/placeholder/CamelRoute.java"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 1; Content is not allowed in prolog.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/placeholder/CamelRoute.java"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/placeholder/CamelRoute.java"
]
didOpen: TextDocumentItem [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/resources/META-INF/spring/camel-context.xml"
  languageId = "xml"
  version = 1
  text = "<?xml version="1.0" encoding="UTF-8"?>\r\n<!--\r\n    Copyright 2014-2017, Red Hat, Inc. and/or its affiliates, and individual\r\n    contributors by the @authors tag. \r\n    Licensed under the Apache License, Version 2.0 (the "License");\r\n    you may not use this file except in compliance with the License.\r\n    You may obtain a copy of the License at\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n    Unless required by applicable law or agreed to in writing, software\r\n    distributed under the License is distributed on an "AS IS" BASIS,\r\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n    See the License for the specific language governing permissions and\r\n    limitations under the License.\r\n-->\r\n<!-- Configures the Camel Context-->\r\n<beans xmlns="http://www.springframework.org/schema/beans"\r\n    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd        http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">\r\n    <camelContext id="_camelContext1" xmlns="http://camel.apache.org/schema/spring">\r\n        <route id="_route1">\r\n        </route>\r\n    </camelContext>\r\n</beans>"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/resources/META-INF/spring/camel-context.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/placeholder/CamelRoute.java"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/placeholder/CamelRoute.java"
]
didChange: VersionedTextDocumentIdentifier [
  version = 3
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/placeholder/CamelRoute.java"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/placeholder/CamelRoute.java"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/placeholder/CamelRoute.java"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 1; Content is not allowed in prolog.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/placeholder/CamelRoute.java"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/placeholder/CamelRoute.java"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/placeholder/CamelRoute.java"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/placeholder/CamelRoute.java"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/placeholder/CamelRoute.java"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/placeholder/CamelRoute.java"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 1; Content is not allowed in prolog.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/placeholder/CamelRoute.java"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/placeholder/CamelRoute.java"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/placeholder/CamelRoute.java"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/placeholder/CamelRoute.java"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/placeholder/CamelRoute.java"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/placeholder/CamelRoute.java"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/placeholder/CamelRoute.java"
]
didSave: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/placeholder/CamelRoute.java"
]
SERVER: changeWatchedFiles: size -> 1
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/placeholder/CamelRoute.java"
]
SERVER: changeWatchedFiles: size -> 1
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/placeholder/CamelRoute.java"
]
didClose: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/placeholder/CamelRoute.java"
]
didOpen: TextDocumentItem [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/routes/CamelRoute.java"
  languageId = "java"
  version = 1
  text = "package <%= userProps.package %>;\r\n\r\nimport org.apache.camel.builder.RouteBuilder;\r\n\r\npublic class CamelRoute extends RouteBuilder {\r\n\r\n	@Override\r\n	public void configure() throws Exception {\r\n		/* \r\n		 * You can define here the Camel Route.\r\n		 * For instance, start by calling from() method, then use the Fluent API to build the Camel Route definition.\r\n		 */\r\n		\r\n	}\r\n}"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/routes/CamelRoute.java"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 1; Content is not allowed in prolog.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/routes/CamelRoute.java"
]
didChange: VersionedTextDocumentIdentifier [
  version = 2
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/routes/CamelRoute.java"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/routes/CamelRoute.java
didChange: VersionedTextDocumentIdentifier [
  version = 4
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/routes/CamelRoute.java"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/routes/CamelRoute.java
didChange: VersionedTextDocumentIdentifier [
  version = 8
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/routes/CamelRoute.java"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/routes/CamelRoute.java"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 1; Content is not allowed in prolog.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didSave: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/routes/CamelRoute.java"
]
SERVER: changeWatchedFiles: size -> 1
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/routes/CamelRoute.java"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/routes/CamelRoute.java"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/routes/CamelRoute.java"
]
didClose: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/resources/META-INF/spring/camel-context.xml"
]
SERVER: changeWatchedFiles: size -> 1
didOpen: TextDocumentItem [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/pom.xml"
  languageId = "xml"
  version = 1
  text = "<?xml version="1.0" encoding="UTF-8"?>\r\n<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\r\n	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">\r\n\r\n	<modelVersion>4.0.0</modelVersion>\r\n\r\n	<groupId>com.mydemo</groupId>\r\n	<artifactId>mydemo</artifactId>\r\n	<version>1.0.0-SNAPSHOT</version>\r\n	<packaging>jar</packaging>\r\n\r\n	<name>mydemo</name>\r\n\r\n	<licenses>\r\n		<license>\r\n			<name>Apache License, Version 2.0</name>\r\n			<distribution>repo</distribution>\r\n			<url>http://www.apache.org/licenses/LICENSE-2.0.html</url>\r\n		</license>\r\n	</licenses>\r\n\r\n	<properties>\r\n		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\r\n		<version.maven-bundle-plugin>3.2.0</version.maven-bundle-plugin>\r\n		<camel.version>2.18.1</camel.version>\r\n	</properties>\r\n\r\n	<dependencies>\r\n		<dependency>\r\n			<groupId>org.apache.camel</groupId>\r\n			<artifactId>camel-core</artifactId>\r\n      		<version>${camel.version}</version>\r\n		</dependency>\r\n		<dependency>\r\n			<groupId>org.apache.camel</groupId>\r\n			<artifactId>camel-spring</artifactId>\r\n      		<version>${camel.version}</version>\r\n		</dependency>\r\n\r\n		<!-- Testing & Camel Plugin -->\r\n		<dependency>\r\n			<groupId>org.apache.camel</groupId>\r\n			<artifactId>camel-test-spring</artifactId>\r\n      		<version>${camel.version}</version>\r\n		</dependency>\r\n	</dependencies>\r\n\r\n	<repositories>\r\n		<repository>\r\n			<id>fuse-public-repository</id>\r\n			<name>FuseSource Community Release Repository</name>\r\n			<url>https://repo.fusesource.com/nexus/content/groups/public</url>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n		</repository>\r\n		<repository>\r\n			<id>red-hat-ga-repository</id>\r\n			<name>Red Hat GA Repository</name>\r\n			<url>https://maven.repository.redhat.com/ga</url>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n		</repository>\r\n		<repository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>red-hat-ea-repository</id>\r\n			<name>Red Hat EA Repository</name>\r\n			<url>https://maven.repository.redhat.com/earlyaccess/all</url>\r\n		</repository>\r\n		<!-- To remove when a long-term version will be available -->\r\n		<repository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>jboss-ea-repository</id>\r\n			<name>Red Hat JBoss Early Access Repository</name>\r\n			<url>http://repository.jboss.org/nexus/content/groups/ea</url>\r\n		</repository>\r\n	</repositories>\r\n\r\n	<pluginRepositories>\r\n		<pluginRepository>\r\n			<id>fuse-public-repository</id>\r\n			<name>FuseSource Community Release Repository</name>\r\n			<url>https://repo.fusesource.com/nexus/content/groups/public</url>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n		</pluginRepository>\r\n		<pluginRepository>\r\n			<id>red-hat-ga-repository</id>\r\n			<name>Red Hat GA Repository</name>\r\n			<url>https://maven.repository.redhat.com/ga</url>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n		</pluginRepository>\r\n				<pluginRepository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>red-hat-ea-repository</id>\r\n			<name>Red Hat EA Repository</name>\r\n			<url>https://maven.repository.redhat.com/earlyaccess/all</url>\r\n		</pluginRepository>\r\n		<!-- To remove when a long-term version will be available -->\r\n		<pluginRepository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>jboss-ea-repository</id>\r\n			<name>Red Hat JBoss Early Access Repository</name>\r\n			<url>http://repository.jboss.org/nexus/content/groups/ea</url>\r\n		</pluginRepository>\r\n	</pluginRepositories>\r\n\r\n	<build>\r\n		<plugins>\r\n		<!-- Allows the routes to be run via 'mvn camel:run' -->\r\n		<plugin>\r\n			<groupId>org.apache.camel</groupId>\r\n			<artifactId>camel-maven-plugin</artifactId>\r\n				<configuration>\r\n					<applicationContextUri>META-INF/spring/camel-context.xml</applicationContextUri>\r\n				</configuration>\r\n			</plugin>\r\n		</plugins>\r\n	</build>\r\n\r\n	<description>Empty Camel Spring Example</description>\r\n</project>\r\n"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/pom.xml"
]
didClose: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/pom.xml"
]
SERVER: changeWatchedFiles: size -> 1
SERVER: changeWatchedFiles: size -> 2
didOpen: TextDocumentItem [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/java/com/mydemo/routes/CamelRoute.java"
  languageId = "java"
  version = 1
  text = "package com.mydemo.routes;\r\n\r\nimport org.apache.camel.builder.RouteBuilder;\r\n\r\npublic class CamelRoute extends RouteBuilder {\r\n\r\n	@Override\r\n	public void configure() throws Exception {\r\n		/* \r\n		 * You can define here the Camel Route.\r\n		 * For instance, start by calling from() method, then use the Fluent API to build the Camel Route definition.\r\n		 */\r\n		\r\n	}\r\n}"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/java/com/mydemo/routes/CamelRoute.java"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 1; Content is not allowed in prolog.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didClose: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/java/com/mydemo/routes/CamelRoute.java"
]
didOpen: TextDocumentItem [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/pom.xml"
  languageId = "xml"
  version = 1
  text = "<?xml version="1.0" encoding="UTF-8"?>\r\n<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\r\n	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">\r\n\r\n	<modelVersion>4.0.0</modelVersion>\r\n\r\n	<groupId>com.mydemo</groupId>\r\n	<artifactId>mydemo</artifactId>\r\n	<version>1.0.0-SNAPSHOT</version>\r\n	<packaging>jar</packaging>\r\n\r\n	<name>mydemo</name>\r\n\r\n	<licenses>\r\n		<license>\r\n			<name>Apache License, Version 2.0</name>\r\n			<distribution>repo</distribution>\r\n			<url>http://www.apache.org/licenses/LICENSE-2.0.html</url>\r\n		</license>\r\n	</licenses>\r\n\r\n	<properties>\r\n		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\r\n		<version.maven-bundle-plugin>3.2.0</version.maven-bundle-plugin>\r\n		<camel.version>2.18.1</camel.version>\r\n	</properties>\r\n\r\n	<dependencies>\r\n		<dependency>\r\n			<groupId>org.apache.camel</groupId>\r\n			<artifactId>camel-core</artifactId>\r\n      		<version>${camel.version}</version>\r\n		</dependency>\r\n		<dependency>\r\n			<groupId>org.apache.camel</groupId>\r\n			<artifactId>camel-spring</artifactId>\r\n      		<version>${camel.version}</version>\r\n		</dependency>\r\n\r\n		<!-- Testing & Camel Plugin -->\r\n		<dependency>\r\n			<groupId>org.apache.camel</groupId>\r\n			<artifactId>camel-test-spring</artifactId>\r\n      		<version>${camel.version}</version>\r\n		</dependency>\r\n	</dependencies>\r\n\r\n	<repositories>\r\n		<repository>\r\n			<id>fuse-public-repository</id>\r\n			<name>FuseSource Community Release Repository</name>\r\n			<url>https://repo.fusesource.com/nexus/content/groups/public</url>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n		</repository>\r\n		<repository>\r\n			<id>red-hat-ga-repository</id>\r\n			<name>Red Hat GA Repository</name>\r\n			<url>https://maven.repository.redhat.com/ga</url>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n		</repository>\r\n		<repository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>red-hat-ea-repository</id>\r\n			<name>Red Hat EA Repository</name>\r\n			<url>https://maven.repository.redhat.com/earlyaccess/all</url>\r\n		</repository>\r\n		<!-- To remove when a long-term version will be available -->\r\n		<repository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>jboss-ea-repository</id>\r\n			<name>Red Hat JBoss Early Access Repository</name>\r\n			<url>http://repository.jboss.org/nexus/content/groups/ea</url>\r\n		</repository>\r\n	</repositories>\r\n\r\n	<pluginRepositories>\r\n		<pluginRepository>\r\n			<id>fuse-public-repository</id>\r\n			<name>FuseSource Community Release Repository</name>\r\n			<url>https://repo.fusesource.com/nexus/content/groups/public</url>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n		</pluginRepository>\r\n		<pluginRepository>\r\n			<id>red-hat-ga-repository</id>\r\n			<name>Red Hat GA Repository</name>\r\n			<url>https://maven.repository.redhat.com/ga</url>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n		</pluginRepository>\r\n				<pluginRepository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>red-hat-ea-repository</id>\r\n			<name>Red Hat EA Repository</name>\r\n			<url>https://maven.repository.redhat.com/earlyaccess/all</url>\r\n		</pluginRepository>\r\n		<!-- To remove when a long-term version will be available -->\r\n		<pluginRepository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>jboss-ea-repository</id>\r\n			<name>Red Hat JBoss Early Access Repository</name>\r\n			<url>http://repository.jboss.org/nexus/content/groups/ea</url>\r\n		</pluginRepository>\r\n	</pluginRepositories>\r\n\r\n	<build>\r\n		<plugins>\r\n		<!-- Allows the routes to be run via 'mvn camel:run' -->\r\n		<plugin>\r\n			<groupId>org.apache.camel</groupId>\r\n			<artifactId>camel-maven-plugin</artifactId>\r\n				<configuration>\r\n					<applicationContextUri>META-INF/spring/camel-context.xml</applicationContextUri>\r\n				</configuration>\r\n			</plugin>\r\n		</plugins>\r\n	</build>\r\n\r\n	<description>Empty Camel Spring Example</description>\r\n</project>\r\n"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/pom.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/pom.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/pom.xml"
]
didClose: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/routes/CamelRoute.java"
]
didClose: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didSave: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
didClose: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
SERVER: changeWatchedFiles: size -> 1
SERVER: changeWatchedFiles: size -> 1
SERVER: changeWatchedFiles: size -> 2
didOpen: TextDocumentItem [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/pom.xml"
  languageId = "xml"
  version = 1
  text = "<?xml version="1.0" encoding="UTF-8"?>\r\n<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\r\n	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">\r\n\r\n	<modelVersion>4.0.0</modelVersion>\r\n\r\n	<groupId>com.mydemo</groupId>\r\n	<artifactId>mydemo</artifactId>\r\n	<version>1.0.0-SNAPSHOT</version>\r\n	<packaging>jar</packaging>\r\n\r\n	<name>mydemo</name>\r\n\r\n	<licenses>\r\n		<license>\r\n			<name>Apache License, Version 2.0</name>\r\n			<distribution>repo</distribution>\r\n			<url>http://www.apache.org/licenses/LICENSE-2.0.html</url>\r\n		</license>\r\n	</licenses>\r\n\r\n	<properties>\r\n		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\r\n		<version.maven-bundle-plugin>3.2.0</version.maven-bundle-plugin>\r\n		<camel.version>2.18.1</camel.version>\r\n	</properties>\r\n\r\n	<dependencies>\r\n		<dependency>\r\n			<groupId>org.apache.camel</groupId>\r\n			<artifactId>camel-core</artifactId>\r\n      		<version>${camel.version}</version>\r\n		</dependency>\r\n		<dependency>\r\n			<groupId>org.apache.camel</groupId>\r\n			<artifactId>camel-test</artifactId>\r\n      		<version>${camel.version}</version>\r\n		</dependency>\r\n	</dependencies>\r\n\r\n	<repositories>\r\n		<repository>\r\n			<id>fuse-public-repository</id>\r\n			<name>FuseSource Community Release Repository</name>\r\n			<url>https://repo.fusesource.com/nexus/content/groups/public</url>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n		</repository>\r\n		<repository>\r\n			<id>red-hat-ga-repository</id>\r\n			<name>Red Hat GA Repository</name>\r\n			<url>https://maven.repository.redhat.com/ga</url>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n		</repository>\r\n		<repository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>red-hat-ea-repository</id>\r\n			<name>Red Hat EA Repository</name>\r\n			<url>https://maven.repository.redhat.com/earlyaccess/all</url>\r\n		</repository>\r\n		<!-- To remove when a long-term version will be available -->\r\n		<repository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>jboss-ea-repository</id>\r\n			<name>Red Hat JBoss Early Access Repository</name>\r\n			<url>http://repository.jboss.org/nexus/content/groups/ea</url>\r\n		</repository>\r\n	</repositories>\r\n\r\n	<pluginRepositories>\r\n		<pluginRepository>\r\n			<id>fuse-public-repository</id>\r\n			<name>FuseSource Community Release Repository</name>\r\n			<url>https://repo.fusesource.com/nexus/content/groups/public</url>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n		</pluginRepository>\r\n		<pluginRepository>\r\n			<id>red-hat-ga-repository</id>\r\n			<name>Red Hat GA Repository</name>\r\n			<url>https://maven.repository.redhat.com/ga</url>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n		</pluginRepository>\r\n				<pluginRepository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>red-hat-ea-repository</id>\r\n			<name>Red Hat EA Repository</name>\r\n			<url>https://maven.repository.redhat.com/earlyaccess/all</url>\r\n		</pluginRepository>\r\n		<!-- To remove when a long-term version will be available -->\r\n		<pluginRepository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>jboss-ea-repository</id>\r\n			<name>Red Hat JBoss Early Access Repository</name>\r\n			<url>http://repository.jboss.org/nexus/content/groups/ea</url>\r\n		</pluginRepository>\r\n	</pluginRepositories>\r\n\r\n	<build>\r\n		<plugins>\r\n		<!-- Allows the routes to be run via 'mvn camel:run' -->\r\n			<plugin>\r\n				<groupId>org.codehaus.mojo</groupId>\r\n				<artifactId>exec-maven-plugin</artifactId>\r\n				<version>1.6.0</version>\r\n				<configuration>\r\n					<mainClass>com.mydemo</mainClass>\r\n					<includePluginDependencies>false</includePluginDependencies>\r\n				</configuration>\r\n			</plugin>\r\n		</plugins>\r\n	</build>\r\n\r\n	<description>Empty Camel Java Example</description>\r\n</project>\r\n"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/pom.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/pom.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/pom.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/pom.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/pom.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 2
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/pom.xml"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/pom.xml
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 3
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 4
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 9
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/pom.xml"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/pom.xml
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 10
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 12
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 14
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 19
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/pom.xml"
]
didSave: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/pom.xml"
]
SERVER: changeWatchedFiles: size -> 1
didOpen: TextDocumentItem [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/routes/Launcher.java"
  languageId = "java"
  version = 1
  text = ""
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/routes/Launcher.java"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 1; Premature end of file.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
SERVER: changeWatchedFiles: size -> 1
didChange: VersionedTextDocumentIdentifier [
  version = 2
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/routes/Launcher.java"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/routes/Launcher.java"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/routes/Launcher.java"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 1; Content is not allowed in prolog.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didOpen: TextDocumentItem [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/routes/CamelRoute.java"
  languageId = "java"
  version = 1
  text = "package <%= userProps.package %>.routes;\r\n\r\nimport org.apache.camel.builder.RouteBuilder;\r\n\r\npublic class CamelRoute extends RouteBuilder {\r\n\r\n	@Override\r\n	public void configure() throws Exception {\r\n		/* \r\n		 * You can define here the Camel Route.\r\n		 * For instance, start by calling from() method, then use the Fluent API to build the Camel Route definition.\r\n		 */\r\n		\r\n	}\r\n}"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/routes/CamelRoute.java"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 1; Content is not allowed in prolog.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/routes/CamelRoute.java"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/routes/CamelRoute.java"
]
didChange: VersionedTextDocumentIdentifier [
  version = 3
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/routes/Launcher.java"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/routes/Launcher.java"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/routes/Launcher.java"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 1; Content is not allowed in prolog.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didSave: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/routes/Launcher.java"
]
SERVER: changeWatchedFiles: size -> 1
didClose: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/routes/CamelRoute.java"
]
didClose: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/routes/Launcher.java"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/pom.xml"
]
didOpen: TextDocumentItem [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
  languageId = "xml"
  version = 1
  text = "<?xml version="1.0" encoding="UTF-8"?>\r\n<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\r\n	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">\r\n\r\n	<modelVersion>4.0.0</modelVersion>\r\n\r\n	<groupId><%= userProps.package %></groupId>\r\n	<artifactId><%= userProps.name %></artifactId>\r\n	<version>1.0.0-SNAPSHOT</version>\r\n	<packaging>jar</packaging>\r\n\r\n	<name><%= userProps.name %></name>\r\n\r\n	<licenses>\r\n		<license>\r\n			<name>Apache License, Version 2.0</name>\r\n			<distribution>repo</distribution>\r\n			<url>http://www.apache.org/licenses/LICENSE-2.0.html</url>\r\n		</license>\r\n	</licenses>\r\n\r\n	<properties>\r\n		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\r\n		<version.maven-bundle-plugin>3.2.0</version.maven-bundle-plugin>\r\n		<camel.version><%= userProps.camelVersion %></camel.version>\r\n	</properties>\r\n\r\n	<dependencies>\r\n		<dependency>\r\n			<groupId>org.apache.camel</groupId>\r\n			<artifactId>camel-core</artifactId>\r\n      		<version>${camel.version}</version>\r\n		</dependency>\r\n		<dependency>\r\n			<groupId>org.apache.camel</groupId>\r\n			<artifactId>camel-test</artifactId>\r\n      		<version>${camel.version}</version>\r\n		</dependency>\r\n	</dependencies>\r\n\r\n	<repositories>\r\n		<repository>\r\n			<id>fuse-public-repository</id>\r\n			<name>FuseSource Community Release Repository</name>\r\n			<url>https://repo.fusesource.com/nexus/content/groups/public</url>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n		</repository>\r\n		<repository>\r\n			<id>red-hat-ga-repository</id>\r\n			<name>Red Hat GA Repository</name>\r\n			<url>https://maven.repository.redhat.com/ga</url>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n		</repository>\r\n		<repository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>red-hat-ea-repository</id>\r\n			<name>Red Hat EA Repository</name>\r\n			<url>https://maven.repository.redhat.com/earlyaccess/all</url>\r\n		</repository>\r\n		<!-- To remove when a long-term version will be available -->\r\n		<repository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>jboss-ea-repository</id>\r\n			<name>Red Hat JBoss Early Access Repository</name>\r\n			<url>http://repository.jboss.org/nexus/content/groups/ea</url>\r\n		</repository>\r\n	</repositories>\r\n\r\n	<pluginRepositories>\r\n		<pluginRepository>\r\n			<id>fuse-public-repository</id>\r\n			<name>FuseSource Community Release Repository</name>\r\n			<url>https://repo.fusesource.com/nexus/content/groups/public</url>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n		</pluginRepository>\r\n		<pluginRepository>\r\n			<id>red-hat-ga-repository</id>\r\n			<name>Red Hat GA Repository</name>\r\n			<url>https://maven.repository.redhat.com/ga</url>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n		</pluginRepository>\r\n				<pluginRepository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>red-hat-ea-repository</id>\r\n			<name>Red Hat EA Repository</name>\r\n			<url>https://maven.repository.redhat.com/earlyaccess/all</url>\r\n		</pluginRepository>\r\n		<!-- To remove when a long-term version will be available -->\r\n		<pluginRepository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>jboss-ea-repository</id>\r\n			<name>Red Hat JBoss Early Access Repository</name>\r\n			<url>http://repository.jboss.org/nexus/content/groups/ea</url>\r\n		</pluginRepository>\r\n	</pluginRepositories>\r\n\r\n	<build>\r\n		<plugins>\r\n		<!-- Allows the routes to be run via 'mvn camel:run' -->\r\n			<plugin>\r\n				<groupId>org.codehaus.mojo</groupId>\r\n				<artifactId>exec-maven-plugin</artifactId>\r\n				<version>1.6.0</version>\r\n				<configuration>\r\n					<mainClass><%= userProps.package %></mainClass>\r\n					<includePluginDependencies>false</includePluginDependencies>\r\n				</configuration>\r\n			</plugin>\r\n		</plugins>\r\n	</build>\r\n\r\n	<description>Empty Camel Java Example</description>\r\n</project>\r\n"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 2
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.completion.CamelEndpointCompletionProcessor.getCompletions(CamelEndpointCompletionProcessor.java:49)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.completion(CamelTextDocumentService.java:84)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 3
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.completion.CamelEndpointCompletionProcessor.getCompletions(CamelEndpointCompletionProcessor.java:49)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.completion(CamelTextDocumentService.java:84)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 9
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.completion.CamelEndpointCompletionProcessor.getCompletions(CamelEndpointCompletionProcessor.java:49)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.completion(CamelTextDocumentService.java:84)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 10
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.completion.CamelEndpointCompletionProcessor.getCompletions(CamelEndpointCompletionProcessor.java:49)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.completion(CamelTextDocumentService.java:84)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 13
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.completion.CamelEndpointCompletionProcessor.getCompletions(CamelEndpointCompletionProcessor.java:49)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.completion(CamelTextDocumentService.java:84)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 14
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.completion.CamelEndpointCompletionProcessor.getCompletions(CamelEndpointCompletionProcessor.java:49)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.completion(CamelTextDocumentService.java:84)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 15
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.completion.CamelEndpointCompletionProcessor.getCompletions(CamelEndpointCompletionProcessor.java:49)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.completion(CamelTextDocumentService.java:84)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 16
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.completion.CamelEndpointCompletionProcessor.getCompletions(CamelEndpointCompletionProcessor.java:49)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.completion(CamelTextDocumentService.java:84)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 17
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.completion.CamelEndpointCompletionProcessor.getCompletions(CamelEndpointCompletionProcessor.java:49)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.completion(CamelTextDocumentService.java:84)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didSave: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
SERVER: changeWatchedFiles: size -> 1
didClose: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/pom.xml"
]
SERVER: changeWatchedFiles: size -> 1
SERVER: changeWatchedFiles: size -> 3
didOpen: TextDocumentItem [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/pom.xml"
  languageId = "xml"
  version = 1
  text = "<?xml version="1.0" encoding="UTF-8"?>\r\n<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\r\n	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">\r\n\r\n	<modelVersion>4.0.0</modelVersion>\r\n\r\n	<groupId>com.mydemo</groupId>\r\n	<artifactId>mydemo</artifactId>\r\n	<version>1.0.0-SNAPSHOT</version>\r\n	<packaging>jar</packaging>\r\n\r\n	<name>mydemo</name>\r\n\r\n	<licenses>\r\n		<license>\r\n			<name>Apache License, Version 2.0</name>\r\n			<distribution>repo</distribution>\r\n			<url>http://www.apache.org/licenses/LICENSE-2.0.html</url>\r\n		</license>\r\n	</licenses>\r\n\r\n	<properties>\r\n		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\r\n		<version.maven-bundle-plugin>3.2.0</version.maven-bundle-plugin>\r\n		<camel.version>2.18.1</camel.version>\r\n	</properties>\r\n\r\n	<dependencies>\r\n		<dependency>\r\n			<groupId>org.apache.camel</groupId>\r\n			<artifactId>camel-core</artifactId>\r\n      		<version>${camel.version}</version>\r\n		</dependency>\r\n		<dependency>\r\n			<groupId>org.apache.camel</groupId>\r\n			<artifactId>camel-test</artifactId>\r\n      		<version>${camel.version}</version>\r\n		</dependency>\r\n	</dependencies>\r\n\r\n	<repositories>\r\n		<repository>\r\n			<id>fuse-public-repository</id>\r\n			<name>FuseSource Community Release Repository</name>\r\n			<url>https://repo.fusesource.com/nexus/content/groups/public</url>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n		</repository>\r\n		<repository>\r\n			<id>red-hat-ga-repository</id>\r\n			<name>Red Hat GA Repository</name>\r\n			<url>https://maven.repository.redhat.com/ga</url>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n		</repository>\r\n		<repository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>red-hat-ea-repository</id>\r\n			<name>Red Hat EA Repository</name>\r\n			<url>https://maven.repository.redhat.com/earlyaccess/all</url>\r\n		</repository>\r\n		<!-- To remove when a long-term version will be available -->\r\n		<repository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>jboss-ea-repository</id>\r\n			<name>Red Hat JBoss Early Access Repository</name>\r\n			<url>http://repository.jboss.org/nexus/content/groups/ea</url>\r\n		</repository>\r\n	</repositories>\r\n\r\n	<pluginRepositories>\r\n		<pluginRepository>\r\n			<id>fuse-public-repository</id>\r\n			<name>FuseSource Community Release Repository</name>\r\n			<url>https://repo.fusesource.com/nexus/content/groups/public</url>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n		</pluginRepository>\r\n		<pluginRepository>\r\n			<id>red-hat-ga-repository</id>\r\n			<name>Red Hat GA Repository</name>\r\n			<url>https://maven.repository.redhat.com/ga</url>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n		</pluginRepository>\r\n				<pluginRepository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>red-hat-ea-repository</id>\r\n			<name>Red Hat EA Repository</name>\r\n			<url>https://maven.repository.redhat.com/earlyaccess/all</url>\r\n		</pluginRepository>\r\n		<!-- To remove when a long-term version will be available -->\r\n		<pluginRepository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>jboss-ea-repository</id>\r\n			<name>Red Hat JBoss Early Access Repository</name>\r\n			<url>http://repository.jboss.org/nexus/content/groups/ea</url>\r\n		</pluginRepository>\r\n	</pluginRepositories>\r\n\r\n	<build>\r\n		<plugins>\r\n		<!-- Allows the routes to be run via 'mvn camel:run' -->\r\n			<plugin>\r\n				<groupId>org.codehaus.mojo</groupId>\r\n				<artifactId>exec-maven-plugin</artifactId>\r\n				<version>1.6.0</version>\r\n				<configuration>\r\n					<mainClass>com.mydemo.routes.Launcher</mainClass>\r\n					<includePluginDependencies>false</includePluginDependencies>\r\n				</configuration>\r\n			</plugin>\r\n		</plugins>\r\n	</build>\r\n\r\n	<description>Empty Camel Java Example</description>\r\n</project>\r\n"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/pom.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/pom.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/pom.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/pom.xml"
]
didClose: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/pom.xml"
]
didClose: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
didOpen: TextDocumentItem [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/java/com/mydemo/routes/Launcher.java"
  languageId = "java"
  version = 1
  text = "package com.mydemo.routes;\r\n\r\nimport org.apache.camel.main.Main;\r\n\r\npublic class Launcher {\r\n    /**\r\n     * A main() so we can easily run these routing rules in our IDE\r\n     */\r\n    public static void main(String... args) throws Exception {\r\n        Main main = new Main();\r\n        main.addRouteBuilder(new CamelRoute());\r\n        main.run(args);\r\n    }\r\n}"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/java/com/mydemo/routes/Launcher.java"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 1; Content is not allowed in prolog.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didClose: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/java/com/mydemo/routes/Launcher.java"
]
didOpen: TextDocumentItem [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/java/com/mydemo/routes/CamelRoute.java"
  languageId = "java"
  version = 1
  text = "package com.mydemo.routes;\r\n\r\nimport org.apache.camel.builder.RouteBuilder;\r\n\r\npublic class CamelRoute extends RouteBuilder {\r\n\r\n	@Override\r\n	public void configure() throws Exception {\r\n		/* \r\n		 * You can define here the Camel Route.\r\n		 * For instance, start by calling from() method, then use the Fluent API to build the Camel Route definition.\r\n		 */\r\n		\r\n	}\r\n}"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/java/com/mydemo/routes/CamelRoute.java"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 1; Content is not allowed in prolog.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didClose: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/java/com/mydemo/routes/CamelRoute.java"
]
didOpen: TextDocumentItem [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/routes/Launcher.java"
  languageId = "java"
  version = 1
  text = "package <%= userProps.package %>.routes;\r\n\r\nimport org.apache.camel.main.Main;\r\n\r\npublic class Launcher {\r\n    /**\r\n     * A main() so we can easily run these routing rules in our IDE\r\n     */\r\n    public static void main(String... args) throws Exception {\r\n        Main main = new Main();\r\n        main.addRouteBuilder(new CamelRoute());\r\n        main.run(args);\r\n    }\r\n}"
]
didClose: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/routes/Launcher.java"
]
didOpen: TextDocumentItem [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/routes/CamelRoute.java"
  languageId = "java"
  version = 1
  text = "package <%= userProps.package %>.routes;\r\n\r\nimport org.apache.camel.builder.RouteBuilder;\r\n\r\npublic class CamelRoute extends RouteBuilder {\r\n\r\n	@Override\r\n	public void configure() throws Exception {\r\n		/* \r\n		 * You can define here the Camel Route.\r\n		 * For instance, start by calling from() method, then use the Fluent API to build the Camel Route definition.\r\n		 */\r\n		\r\n	}\r\n}"
]
didClose: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/routes/CamelRoute.java"
]
didOpen: TextDocumentItem [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
  languageId = "xml"
  version = 1
  text = "<?xml version="1.0" encoding="UTF-8"?>\r\n<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\r\n	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">\r\n\r\n	<modelVersion>4.0.0</modelVersion>\r\n\r\n	<groupId><%= userProps.package %></groupId>\r\n	<artifactId><%= userProps.name %></artifactId>\r\n	<version>1.0.0-SNAPSHOT</version>\r\n	<packaging>jar</packaging>\r\n\r\n	<name><%= userProps.name %></name>\r\n\r\n	<licenses>\r\n		<license>\r\n			<name>Apache License, Version 2.0</name>\r\n			<distribution>repo</distribution>\r\n			<url>http://www.apache.org/licenses/LICENSE-2.0.html</url>\r\n		</license>\r\n	</licenses>\r\n\r\n	<properties>\r\n		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\r\n		<version.maven-bundle-plugin>3.2.0</version.maven-bundle-plugin>\r\n		<camel.version><%= userProps.camelVersion %></camel.version>\r\n	</properties>\r\n\r\n	<dependencies>\r\n		<dependency>\r\n			<groupId>org.apache.camel</groupId>\r\n			<artifactId>camel-core</artifactId>\r\n      		<version>${camel.version}</version>\r\n		</dependency>\r\n		<dependency>\r\n			<groupId>org.apache.camel</groupId>\r\n			<artifactId>camel-test</artifactId>\r\n      		<version>${camel.version}</version>\r\n		</dependency>\r\n	</dependencies>\r\n\r\n	<repositories>\r\n		<repository>\r\n			<id>fuse-public-repository</id>\r\n			<name>FuseSource Community Release Repository</name>\r\n			<url>https://repo.fusesource.com/nexus/content/groups/public</url>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n		</repository>\r\n		<repository>\r\n			<id>red-hat-ga-repository</id>\r\n			<name>Red Hat GA Repository</name>\r\n			<url>https://maven.repository.redhat.com/ga</url>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n		</repository>\r\n		<repository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>red-hat-ea-repository</id>\r\n			<name>Red Hat EA Repository</name>\r\n			<url>https://maven.repository.redhat.com/earlyaccess/all</url>\r\n		</repository>\r\n		<!-- To remove when a long-term version will be available -->\r\n		<repository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>jboss-ea-repository</id>\r\n			<name>Red Hat JBoss Early Access Repository</name>\r\n			<url>http://repository.jboss.org/nexus/content/groups/ea</url>\r\n		</repository>\r\n	</repositories>\r\n\r\n	<pluginRepositories>\r\n		<pluginRepository>\r\n			<id>fuse-public-repository</id>\r\n			<name>FuseSource Community Release Repository</name>\r\n			<url>https://repo.fusesource.com/nexus/content/groups/public</url>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n		</pluginRepository>\r\n		<pluginRepository>\r\n			<id>red-hat-ga-repository</id>\r\n			<name>Red Hat GA Repository</name>\r\n			<url>https://maven.repository.redhat.com/ga</url>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n		</pluginRepository>\r\n				<pluginRepository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>red-hat-ea-repository</id>\r\n			<name>Red Hat EA Repository</name>\r\n			<url>https://maven.repository.redhat.com/earlyaccess/all</url>\r\n		</pluginRepository>\r\n		<!-- To remove when a long-term version will be available -->\r\n		<pluginRepository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>jboss-ea-repository</id>\r\n			<name>Red Hat JBoss Early Access Repository</name>\r\n			<url>http://repository.jboss.org/nexus/content/groups/ea</url>\r\n		</pluginRepository>\r\n	</pluginRepositories>\r\n\r\n	<build>\r\n		<plugins>\r\n		<!-- Allows the routes to be run via 'mvn camel:run' -->\r\n			<plugin>\r\n				<groupId>org.codehaus.mojo</groupId>\r\n				<artifactId>exec-maven-plugin</artifactId>\r\n				<version>1.6.0</version>\r\n				<configuration>\r\n					<mainClass><%= userProps.package %>.routes.Launcher</mainClass>\r\n					<includePluginDependencies>false</includePluginDependencies>\r\n				</configuration>\r\n			</plugin>\r\n		</plugins>\r\n	</build>\r\n\r\n	<description>Empty Camel Java Example</description>\r\n</project>\r\n"
]
didClose: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
didOpen: TextDocumentItem [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/routes/CamelRoute.java"
  languageId = "java"
  version = 1
  text = "package <%= userProps.package %>.routes;\r\n\r\nimport org.apache.camel.builder.RouteBuilder;\r\n\r\npublic class CamelRoute extends RouteBuilder {\r\n\r\n	@Override\r\n	public void configure() throws Exception {\r\n		/* \r\n		 * You can define here the Camel Route.\r\n		 * For instance, start by calling from() method, then use the Fluent API to build the Camel Route definition.\r\n		 */\r\n		\r\n	}\r\n}"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/routes/CamelRoute.java"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 1; Content is not allowed in prolog.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/routes/CamelRoute.java"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/routes/CamelRoute.java"
]
didChange: VersionedTextDocumentIdentifier [
  version = 3
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/routes/CamelRoute.java"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/routes/CamelRoute.java"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 1; Content is not allowed in prolog.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 5
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/routes/CamelRoute.java"
]
didChange: VersionedTextDocumentIdentifier [
  version = 6
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/routes/CamelRoute.java"
]
didChange: VersionedTextDocumentIdentifier [
  version = 7
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/routes/CamelRoute.java"
]
didChange: VersionedTextDocumentIdentifier [
  version = 8
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/routes/CamelRoute.java"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/routes/CamelRoute.java"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 1; Content is not allowed in prolog.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 12
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/routes/CamelRoute.java"
]
didChange: VersionedTextDocumentIdentifier [
  version = 16
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/routes/CamelRoute.java"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/routes/CamelRoute.java"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 1; Content is not allowed in prolog.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 17
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/routes/CamelRoute.java"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/routes/CamelRoute.java"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 1; Content is not allowed in prolog.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 19
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/routes/CamelRoute.java"
]
didChange: VersionedTextDocumentIdentifier [
  version = 20
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/routes/CamelRoute.java"
]
didChange: VersionedTextDocumentIdentifier [
  version = 21
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/routes/CamelRoute.java"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/routes/CamelRoute.java"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 1; Content is not allowed in prolog.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 22
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/routes/CamelRoute.java"
]
didChange: VersionedTextDocumentIdentifier [
  version = 23
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/routes/CamelRoute.java"
]
didChange: VersionedTextDocumentIdentifier [
  version = 24
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/routes/CamelRoute.java"
]
didChange: VersionedTextDocumentIdentifier [
  version = 25
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/routes/CamelRoute.java"
]
didChange: VersionedTextDocumentIdentifier [
  version = 26
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/routes/CamelRoute.java"
]
didChange: VersionedTextDocumentIdentifier [
  version = 27
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/routes/CamelRoute.java"
]
didChange: VersionedTextDocumentIdentifier [
  version = 28
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/routes/CamelRoute.java"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/routes/CamelRoute.java"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 1; Content is not allowed in prolog.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 29
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/routes/CamelRoute.java"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/routes/CamelRoute.java"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 1; Content is not allowed in prolog.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 30
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/routes/CamelRoute.java"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/routes/CamelRoute.java"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 1; Content is not allowed in prolog.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didSave: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/routes/CamelRoute.java"
]
SERVER: changeWatchedFiles: size -> 1
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/routes/CamelRoute.java"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/routes/CamelRoute.java"
]
SERVER: changeWatchedFiles: size -> 3
didOpen: TextDocumentItem [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/java/com/mydemo/routes/CamelRoute.java"
  languageId = "java"
  version = 1
  text = "package com.mydemo.routes;\r\n\r\nimport org.apache.camel.builder.RouteBuilder;\r\n\r\npublic class CamelRoute extends RouteBuilder {\r\n\r\n	@Override\r\n	public void configure() throws Exception {\r\n		/* \r\n		 * You can define here the Camel Route.\r\n		 * For instance, start by calling from() method, then use the Fluent API to build the Camel Route definition.\r\n		 */\r\n		from("timer://simpleTimer?period=1000")\r\n			.setBody(simple("Hello from timer at ${header.firedTime}"))\r\n			.to("stream:out");		\r\n	}\r\n}\r\n"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/java/com/mydemo/routes/CamelRoute.java"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 1; Content is not allowed in prolog.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didClose: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/java/com/mydemo/routes/CamelRoute.java"
]
didOpen: TextDocumentItem [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/pom.xml"
  languageId = "xml"
  version = 1
  text = "<?xml version="1.0" encoding="UTF-8"?>\r\n<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\r\n	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">\r\n\r\n	<modelVersion>4.0.0</modelVersion>\r\n\r\n	<groupId>com.mydemo</groupId>\r\n	<artifactId>mydemo</artifactId>\r\n	<version>1.0.0-SNAPSHOT</version>\r\n	<packaging>jar</packaging>\r\n\r\n	<name>mydemo</name>\r\n\r\n	<licenses>\r\n		<license>\r\n			<name>Apache License, Version 2.0</name>\r\n			<distribution>repo</distribution>\r\n			<url>http://www.apache.org/licenses/LICENSE-2.0.html</url>\r\n		</license>\r\n	</licenses>\r\n\r\n	<properties>\r\n		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\r\n		<version.maven-bundle-plugin>3.2.0</version.maven-bundle-plugin>\r\n		<camel.version>2.18.1</camel.version>\r\n	</properties>\r\n\r\n	<dependencies>\r\n		<dependency>\r\n			<groupId>org.apache.camel</groupId>\r\n			<artifactId>camel-core</artifactId>\r\n      		<version>${camel.version}</version>\r\n		</dependency>\r\n		<dependency>\r\n			<groupId>org.apache.camel</groupId>\r\n			<artifactId>camel-test</artifactId>\r\n      		<version>${camel.version}</version>\r\n		</dependency>\r\n	</dependencies>\r\n\r\n	<repositories>\r\n		<repository>\r\n			<id>fuse-public-repository</id>\r\n			<name>FuseSource Community Release Repository</name>\r\n			<url>https://repo.fusesource.com/nexus/content/groups/public</url>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n		</repository>\r\n		<repository>\r\n			<id>red-hat-ga-repository</id>\r\n			<name>Red Hat GA Repository</name>\r\n			<url>https://maven.repository.redhat.com/ga</url>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n		</repository>\r\n		<repository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>red-hat-ea-repository</id>\r\n			<name>Red Hat EA Repository</name>\r\n			<url>https://maven.repository.redhat.com/earlyaccess/all</url>\r\n		</repository>\r\n		<!-- To remove when a long-term version will be available -->\r\n		<repository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>jboss-ea-repository</id>\r\n			<name>Red Hat JBoss Early Access Repository</name>\r\n			<url>http://repository.jboss.org/nexus/content/groups/ea</url>\r\n		</repository>\r\n	</repositories>\r\n\r\n	<pluginRepositories>\r\n		<pluginRepository>\r\n			<id>fuse-public-repository</id>\r\n			<name>FuseSource Community Release Repository</name>\r\n			<url>https://repo.fusesource.com/nexus/content/groups/public</url>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n		</pluginRepository>\r\n		<pluginRepository>\r\n			<id>red-hat-ga-repository</id>\r\n			<name>Red Hat GA Repository</name>\r\n			<url>https://maven.repository.redhat.com/ga</url>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n		</pluginRepository>\r\n				<pluginRepository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>red-hat-ea-repository</id>\r\n			<name>Red Hat EA Repository</name>\r\n			<url>https://maven.repository.redhat.com/earlyaccess/all</url>\r\n		</pluginRepository>\r\n		<!-- To remove when a long-term version will be available -->\r\n		<pluginRepository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>jboss-ea-repository</id>\r\n			<name>Red Hat JBoss Early Access Repository</name>\r\n			<url>http://repository.jboss.org/nexus/content/groups/ea</url>\r\n		</pluginRepository>\r\n	</pluginRepositories>\r\n\r\n	<build>\r\n		<plugins>\r\n		<!-- Allows the routes to be run via 'mvn camel:run' -->\r\n			<plugin>\r\n				<groupId>org.codehaus.mojo</groupId>\r\n				<artifactId>exec-maven-plugin</artifactId>\r\n				<version>1.6.0</version>\r\n				<configuration>\r\n					<mainClass>com.mydemo.routes.Launcher</mainClass>\r\n					<includePluginDependencies>false</includePluginDependencies>\r\n				</configuration>\r\n			</plugin>\r\n		</plugins>\r\n	</build>\r\n\r\n	<description>Empty Camel Java Example</description>\r\n</project>\r\n"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/pom.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/pom.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 2
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/pom.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 4
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/pom.xml"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/pom.xml
didChange: VersionedTextDocumentIdentifier [
  version = 9
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/pom.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/pom.xml"
]
didSave: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/pom.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/pom.xml"
]
SERVER: changeWatchedFiles: size -> 1
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/pom.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/pom.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/pom.xml"
]
didOpen: TextDocumentItem [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
  languageId = "xml"
  version = 1
  text = "<?xml version="1.0" encoding="UTF-8"?>\r\n<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\r\n	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">\r\n\r\n	<modelVersion>4.0.0</modelVersion>\r\n\r\n	<groupId><%= userProps.package %></groupId>\r\n	<artifactId><%= userProps.name %></artifactId>\r\n	<version>1.0.0-SNAPSHOT</version>\r\n	<packaging>jar</packaging>\r\n\r\n	<name><%= userProps.name %></name>\r\n\r\n	<licenses>\r\n		<license>\r\n			<name>Apache License, Version 2.0</name>\r\n			<distribution>repo</distribution>\r\n			<url>http://www.apache.org/licenses/LICENSE-2.0.html</url>\r\n		</license>\r\n	</licenses>\r\n\r\n	<properties>\r\n		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\r\n		<version.maven-bundle-plugin>3.2.0</version.maven-bundle-plugin>\r\n		<camel.version><%= userProps.camelVersion %></camel.version>\r\n	</properties>\r\n\r\n	<dependencies>\r\n		<dependency>\r\n			<groupId>org.apache.camel</groupId>\r\n			<artifactId>camel-core</artifactId>\r\n      		<version>${camel.version}</version>\r\n		</dependency>\r\n		<dependency>\r\n			<groupId>org.apache.camel</groupId>\r\n			<artifactId>camel-test</artifactId>\r\n      		<version>${camel.version}</version>\r\n		</dependency>\r\n	</dependencies>\r\n\r\n	<repositories>\r\n		<repository>\r\n			<id>fuse-public-repository</id>\r\n			<name>FuseSource Community Release Repository</name>\r\n			<url>https://repo.fusesource.com/nexus/content/groups/public</url>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n		</repository>\r\n		<repository>\r\n			<id>red-hat-ga-repository</id>\r\n			<name>Red Hat GA Repository</name>\r\n			<url>https://maven.repository.redhat.com/ga</url>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n		</repository>\r\n		<repository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>red-hat-ea-repository</id>\r\n			<name>Red Hat EA Repository</name>\r\n			<url>https://maven.repository.redhat.com/earlyaccess/all</url>\r\n		</repository>\r\n		<!-- To remove when a long-term version will be available -->\r\n		<repository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>jboss-ea-repository</id>\r\n			<name>Red Hat JBoss Early Access Repository</name>\r\n			<url>http://repository.jboss.org/nexus/content/groups/ea</url>\r\n		</repository>\r\n	</repositories>\r\n\r\n	<pluginRepositories>\r\n		<pluginRepository>\r\n			<id>fuse-public-repository</id>\r\n			<name>FuseSource Community Release Repository</name>\r\n			<url>https://repo.fusesource.com/nexus/content/groups/public</url>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n		</pluginRepository>\r\n		<pluginRepository>\r\n			<id>red-hat-ga-repository</id>\r\n			<name>Red Hat GA Repository</name>\r\n			<url>https://maven.repository.redhat.com/ga</url>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n		</pluginRepository>\r\n				<pluginRepository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>red-hat-ea-repository</id>\r\n			<name>Red Hat EA Repository</name>\r\n			<url>https://maven.repository.redhat.com/earlyaccess/all</url>\r\n		</pluginRepository>\r\n		<!-- To remove when a long-term version will be available -->\r\n		<pluginRepository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>jboss-ea-repository</id>\r\n			<name>Red Hat JBoss Early Access Repository</name>\r\n			<url>http://repository.jboss.org/nexus/content/groups/ea</url>\r\n		</pluginRepository>\r\n	</pluginRepositories>\r\n\r\n	<build>\r\n		<plugins>\r\n		<!-- Allows the routes to be run via 'mvn camel:run' -->\r\n			<plugin>\r\n				<groupId>org.codehaus.mojo</groupId>\r\n				<artifactId>exec-maven-plugin</artifactId>\r\n				<version>1.6.0</version>\r\n				<configuration>\r\n					<mainClass><%= userProps.package %>.routes.Launcher</mainClass>\r\n					<includePluginDependencies>false</includePluginDependencies>\r\n				</configuration>\r\n			</plugin>\r\n		</plugins>\r\n	</build>\r\n\r\n	<description>Empty Camel Java Example</description>\r\n</project>\r\n"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didOpen: TextDocumentItem [
  uri = "git:/e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml.git?%7B%22path%22%3A%22e%3A%5C%5CUsers%5C%5Cbfitzpat%5C%5Cgithub%5C%5Cgenerator-fuse-project%5C%5Capp%5C%5Ctemplates%5C%5Cjava%5C%5Cpom.xml%22%2C%22ref%22%3A%22%22%7D"
  languageId = "xml"
  version = 1
  text = "<?xml version="1.0" encoding="UTF-8"?>\n<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">\n\n	<modelVersion>4.0.0</modelVersion>\n\n	<groupId><%= userProps.package %></groupId>\n	<artifactId><%= userProps.name %></artifactId>\n	<version>1.0.0-SNAPSHOT</version>\n	<packaging>jar</packaging>\n\n	<name><%= userProps.name %></name>\n\n	<licenses>\n		<license>\n			<name>Apache License, Version 2.0</name>\n			<distribution>repo</distribution>\n			<url>http://www.apache.org/licenses/LICENSE-2.0.html</url>\n		</license>\n	</licenses>\n\n	<properties>\n		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\n		<version.maven-bundle-plugin>3.2.0</version.maven-bundle-plugin>\n		<camel.version><%= userProps.camelVersion %></camel.version>\n	</properties>\n\n	<dependencies>\n		<dependency>\n			<groupId>org.apache.camel</groupId>\n			<artifactId>camel-core</artifactId>\n      		<version>${camel.version}</version>\n		</dependency>\n		<dependency>\n			<groupId>org.apache.camel</groupId>\n			<artifactId>camel-test</artifactId>\n      		<version>${camel.version}</version>\n		</dependency>\n	</dependencies>\n\n	<repositories>\n		<repository>\n			<id>fuse-public-repository</id>\n			<name>FuseSource Community Release Repository</name>\n			<url>https://repo.fusesource.com/nexus/content/groups/public</url>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n		</repository>\n		<repository>\n			<id>red-hat-ga-repository</id>\n			<name>Red Hat GA Repository</name>\n			<url>https://maven.repository.redhat.com/ga</url>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n		</repository>\n		<repository>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n			<id>red-hat-ea-repository</id>\n			<name>Red Hat EA Repository</name>\n			<url>https://maven.repository.redhat.com/earlyaccess/all</url>\n		</repository>\n		<!-- To remove when a long-term version will be available -->\n		<repository>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n			<id>jboss-ea-repository</id>\n			<name>Red Hat JBoss Early Access Repository</name>\n			<url>http://repository.jboss.org/nexus/content/groups/ea</url>\n		</repository>\n	</repositories>\n\n	<pluginRepositories>\n		<pluginRepository>\n			<id>fuse-public-repository</id>\n			<name>FuseSource Community Release Repository</name>\n			<url>https://repo.fusesource.com/nexus/content/groups/public</url>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n		</pluginRepository>\n		<pluginRepository>\n			<id>red-hat-ga-repository</id>\n			<name>Red Hat GA Repository</name>\n			<url>https://maven.repository.redhat.com/ga</url>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n		</pluginRepository>\n				<pluginRepository>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n			<id>red-hat-ea-repository</id>\n			<name>Red Hat EA Repository</name>\n			<url>https://maven.repository.redhat.com/earlyaccess/all</url>\n		</pluginRepository>\n		<!-- To remove when a long-term version will be available -->\n		<pluginRepository>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n			<id>jboss-ea-repository</id>\n			<name>Red Hat JBoss Early Access Repository</name>\n			<url>http://repository.jboss.org/nexus/content/groups/ea</url>\n		</pluginRepository>\n	</pluginRepositories>\n\n	<build>\n		<plugins>\n		<!-- Allows the routes to be run via 'mvn camel:run' -->\n			<plugin>\n				<groupId>org.codehaus.mojo</groupId>\n				<artifactId>exec-maven-plugin</artifactId>\n				<version>1.6.0</version>\n				<configuration>\n					<mainClass><%= userProps.package %>.routes.Launcher</mainClass>\n					<includePluginDependencies>false</includePluginDependencies>\n				</configuration>\n			</plugin>\n		</plugins>\n	</build>\n\n	<description>Empty Camel Java Example</description>\n</project>\n"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 2
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didSave: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
SERVER: changeWatchedFiles: size -> 1
didClose: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml"
]
didClose: TextDocumentIdentifier [
  uri = "git:/e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/pom.xml.git?%7B%22path%22%3A%22e%3A%5C%5CUsers%5C%5Cbfitzpat%5C%5Cgithub%5C%5Cgenerator-fuse-project%5C%5Capp%5C%5Ctemplates%5C%5Cjava%5C%5Cpom.xml%22%2C%22ref%22%3A%22%22%7D"
]
didClose: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/pom.xml"
]
didClose: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/routes/CamelRoute.java"
]
didOpen: TextDocumentItem [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
  languageId = "xml"
  version = 1
  text = "<?xml version="1.0" encoding="UTF-8"?>\r\n<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"\r\n    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">\r\n  <modelVersion>4.0.0</modelVersion>\r\n\r\n	<groupId><%= userProps.package %></groupId>\r\n	<artifactId><%= userProps.name %></artifactId>\r\n	<version>1.0.0-SNAPSHOT</version>\r\n	<packaging>jar</packaging>\r\n\r\n  <name><%= userProps.name %></name>\r\n\r\n  <licenses>\r\n    <license>\r\n      <name>Apache License, Version 2.0</name>\r\n      <url>http://www.apache.org/licenses/LICENSE-2.0.html</url>\r\n      <distribution>repo</distribution>\r\n    </license>\r\n  </licenses>\r\n\r\n  <properties>\r\n		<camel.version><%= userProps.camelVersion %></camel.version>\r\n    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\r\n    <version.maven-bundle-plugin>3.2.0</version.maven-bundle-plugin>\r\n    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n  </properties>\r\n\r\n  <dependencies>\r\n    <dependency>\r\n      <groupId>org.apache.camel</groupId>\r\n      <artifactId>camel-core</artifactId>\r\n      <version>${camel.version}</version>\r\n    </dependency>\r\n    <dependency>\r\n      <groupId>org.apache.camel</groupId>\r\n      <artifactId>camel-blueprint</artifactId>\r\n      <version>${camel.version}</version>\r\n    </dependency>\r\n    <dependency>\r\n      <groupId>org.apache.camel</groupId>\r\n      <artifactId>camel-test-blueprint</artifactId>\r\n      <version>${camel.version}</version>\r\n      <scope>test</scope>\r\n    </dependency>\r\n  </dependencies>\r\n  \r\n	<repositories>\r\n		<repository>\r\n			<id>fuse-public-repository</id>\r\n			<name>FuseSource Community Release Repository</name>\r\n			<url>https://repo.fusesource.com/nexus/content/groups/public</url>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n		</repository>\r\n		<repository>\r\n			<id>red-hat-ga-repository</id>\r\n			<name>Red Hat GA Repository</name>\r\n			<url>https://maven.repository.redhat.com/ga</url>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n		</repository>\r\n		<repository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>red-hat-ea-repository</id>\r\n			<name>Red Hat EA Repository</name>\r\n			<url>https://maven.repository.redhat.com/earlyaccess/all</url>\r\n		</repository>\r\n		<!-- To remove when a long-term version will be available -->\r\n		<repository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>jboss-ea-repository</id>\r\n			<name>Red Hat JBoss Early Access Repository</name>\r\n			<url>http://repository.jboss.org/nexus/content/groups/ea</url>\r\n		</repository>\r\n	</repositories>\r\n\r\n	<pluginRepositories>\r\n		<pluginRepository>\r\n			<id>fuse-public-repository</id>\r\n			<name>FuseSource Community Release Repository</name>\r\n			<url>https://repo.fusesource.com/nexus/content/groups/public</url>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n		</pluginRepository>\r\n		<pluginRepository>\r\n			<id>red-hat-ga-repository</id>\r\n			<name>Red Hat GA Repository</name>\r\n			<url>https://maven.repository.redhat.com/ga</url>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n		</pluginRepository>\r\n				<pluginRepository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>red-hat-ea-repository</id>\r\n			<name>Red Hat EA Repository</name>\r\n			<url>https://maven.repository.redhat.com/earlyaccess/all</url>\r\n		</pluginRepository>\r\n		<!-- To remove when a long-term version will be available -->\r\n		<pluginRepository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>jboss-ea-repository</id>\r\n			<name>Red Hat JBoss Early Access Repository</name>\r\n			<url>http://repository.jboss.org/nexus/content/groups/ea</url>\r\n		</pluginRepository>\r\n	</pluginRepositories>\r\n\r\n	<build>\r\n		<plugins>\r\n      <!-- Allows the routes to be run via 'mvn camel:run' -->\r\n      <plugin>\r\n        <groupId>org.apache.camel</groupId>\r\n        <artifactId>camel-maven-plugin</artifactId>\r\n  			<configuration>\r\n    			<applicationContextUri>OSGI-INF/blueprint/blueprint.xml</applicationContextUri>\r\n  			</configuration>\r\n	    </plugin>\r\n		</plugins>\r\n	</build>\r\n\r\n  <description>Empty Camel Blueprint Example</description>\r\n</project>\r\n"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didOpen: TextDocumentItem [
  uri = "git:/e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml.git?%7B%22path%22%3A%22e%3A%5C%5CUsers%5C%5Cbfitzpat%5C%5Cgithub%5C%5Cgenerator-fuse-project%5C%5Capp%5C%5Ctemplates%5C%5Cblueprint%5C%5Cpom.xml%22%2C%22ref%22%3A%22%22%7D"
  languageId = "xml"
  version = 1
  text = "<?xml version="1.0" encoding="UTF-8"?>\n<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"\n    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">\n  <modelVersion>4.0.0</modelVersion>\n\n	<groupId><%= userProps.package %></groupId>\n	<artifactId><%= userProps.name %></artifactId>\n	<version>1.0.0-SNAPSHOT</version>\n	<packaging>jar</packaging>\n\n  <name><%= userProps.name %></name>\n\n  <licenses>\n    <license>\n      <name>Apache License, Version 2.0</name>\n      <url>http://www.apache.org/licenses/LICENSE-2.0.html</url>\n      <distribution>repo</distribution>\n    </license>\n  </licenses>\n\n  <properties>\n		<camel.version><%= userProps.camelVersion %></camel.version>\n    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\n    <version.maven-bundle-plugin>3.2.0</version.maven-bundle-plugin>\n    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n  </properties>\n\n  <dependencies>\n    <dependency>\n      <groupId>org.apache.camel</groupId>\n      <artifactId>camel-core</artifactId>\n      <version>${camel.version}</version>\n    </dependency>\n    <dependency>\n      <groupId>org.apache.camel</groupId>\n      <artifactId>camel-blueprint</artifactId>\n      <version>${camel.version}</version>\n    </dependency>\n    <dependency>\n      <groupId>org.apache.camel</groupId>\n      <artifactId>camel-test-blueprint</artifactId>\n      <version>${camel.version}</version>\n      <scope>test</scope>\n    </dependency>\n  </dependencies>\n  \n	<repositories>\n		<repository>\n			<id>fuse-public-repository</id>\n			<name>FuseSource Community Release Repository</name>\n			<url>https://repo.fusesource.com/nexus/content/groups/public</url>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n		</repository>\n		<repository>\n			<id>red-hat-ga-repository</id>\n			<name>Red Hat GA Repository</name>\n			<url>https://maven.repository.redhat.com/ga</url>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n		</repository>\n		<repository>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n			<id>red-hat-ea-repository</id>\n			<name>Red Hat EA Repository</name>\n			<url>https://maven.repository.redhat.com/earlyaccess/all</url>\n		</repository>\n		<!-- To remove when a long-term version will be available -->\n		<repository>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n			<id>jboss-ea-repository</id>\n			<name>Red Hat JBoss Early Access Repository</name>\n			<url>http://repository.jboss.org/nexus/content/groups/ea</url>\n		</repository>\n	</repositories>\n\n	<pluginRepositories>\n		<pluginRepository>\n			<id>fuse-public-repository</id>\n			<name>FuseSource Community Release Repository</name>\n			<url>https://repo.fusesource.com/nexus/content/groups/public</url>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n		</pluginRepository>\n		<pluginRepository>\n			<id>red-hat-ga-repository</id>\n			<name>Red Hat GA Repository</name>\n			<url>https://maven.repository.redhat.com/ga</url>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n		</pluginRepository>\n				<pluginRepository>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n			<id>red-hat-ea-repository</id>\n			<name>Red Hat EA Repository</name>\n			<url>https://maven.repository.redhat.com/earlyaccess/all</url>\n		</pluginRepository>\n		<!-- To remove when a long-term version will be available -->\n		<pluginRepository>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n			<id>jboss-ea-repository</id>\n			<name>Red Hat JBoss Early Access Repository</name>\n			<url>http://repository.jboss.org/nexus/content/groups/ea</url>\n		</pluginRepository>\n	</pluginRepositories>\n\n	<build>\n		<plugins>\n      <!-- Allows the routes to be run via 'mvn camel:run' -->\n      <plugin>\n        <groupId>org.apache.camel</groupId>\n        <artifactId>camel-maven-plugin</artifactId>\n  			<configuration>\n    			<applicationContextUri>OSGI-INF/blueprint/blueprint.xml</applicationContextUri>\n  			</configuration>\n	    </plugin>\n		</plugins>\n	</build>\n\n  <description>Empty Camel Blueprint Example</description>\n</project>\n"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 2
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didSave: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
SERVER: changeWatchedFiles: size -> 1
didOpen: TextDocumentItem [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
  languageId = "xml"
  version = 1
  text = "<?xml version="1.0" encoding="UTF-8"?>\r\n<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\r\n	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">\r\n\r\n	<modelVersion>4.0.0</modelVersion>\r\n\r\n	<groupId><%= userProps.package %></groupId>\r\n	<artifactId><%= userProps.name %></artifactId>\r\n	<version>1.0.0-SNAPSHOT</version>\r\n	<packaging>jar</packaging>\r\n\r\n	<name><%= userProps.name %></name>\r\n\r\n	<licenses>\r\n		<license>\r\n			<name>Apache License, Version 2.0</name>\r\n			<distribution>repo</distribution>\r\n			<url>http://www.apache.org/licenses/LICENSE-2.0.html</url>\r\n		</license>\r\n	</licenses>\r\n\r\n	<properties>\r\n		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\r\n		<version.maven-bundle-plugin>3.2.0</version.maven-bundle-plugin>\r\n		<camel.version><%= userProps.camelVersion %></camel.version>\r\n	</properties>\r\n\r\n	<dependencies>\r\n		<dependency>\r\n			<groupId>org.apache.camel</groupId>\r\n			<artifactId>camel-core</artifactId>\r\n      		<version>${camel.version}</version>\r\n		</dependency>\r\n		<dependency>\r\n			<groupId>org.apache.camel</groupId>\r\n			<artifactId>camel-spring</artifactId>\r\n      		<version>${camel.version}</version>\r\n		</dependency>\r\n\r\n		<!-- Testing & Camel Plugin -->\r\n		<dependency>\r\n			<groupId>org.apache.camel</groupId>\r\n			<artifactId>camel-test-spring</artifactId>\r\n      		<version>${camel.version}</version>\r\n		</dependency>\r\n	</dependencies>\r\n\r\n	<repositories>\r\n		<repository>\r\n			<id>fuse-public-repository</id>\r\n			<name>FuseSource Community Release Repository</name>\r\n			<url>https://repo.fusesource.com/nexus/content/groups/public</url>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n		</repository>\r\n		<repository>\r\n			<id>red-hat-ga-repository</id>\r\n			<name>Red Hat GA Repository</name>\r\n			<url>https://maven.repository.redhat.com/ga</url>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n		</repository>\r\n		<repository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>red-hat-ea-repository</id>\r\n			<name>Red Hat EA Repository</name>\r\n			<url>https://maven.repository.redhat.com/earlyaccess/all</url>\r\n		</repository>\r\n		<!-- To remove when a long-term version will be available -->\r\n		<repository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>jboss-ea-repository</id>\r\n			<name>Red Hat JBoss Early Access Repository</name>\r\n			<url>http://repository.jboss.org/nexus/content/groups/ea</url>\r\n		</repository>\r\n	</repositories>\r\n\r\n	<pluginRepositories>\r\n		<pluginRepository>\r\n			<id>fuse-public-repository</id>\r\n			<name>FuseSource Community Release Repository</name>\r\n			<url>https://repo.fusesource.com/nexus/content/groups/public</url>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n		</pluginRepository>\r\n		<pluginRepository>\r\n			<id>red-hat-ga-repository</id>\r\n			<name>Red Hat GA Repository</name>\r\n			<url>https://maven.repository.redhat.com/ga</url>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n		</pluginRepository>\r\n				<pluginRepository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>red-hat-ea-repository</id>\r\n			<name>Red Hat EA Repository</name>\r\n			<url>https://maven.repository.redhat.com/earlyaccess/all</url>\r\n		</pluginRepository>\r\n		<!-- To remove when a long-term version will be available -->\r\n		<pluginRepository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>jboss-ea-repository</id>\r\n			<name>Red Hat JBoss Early Access Repository</name>\r\n			<url>http://repository.jboss.org/nexus/content/groups/ea</url>\r\n		</pluginRepository>\r\n	</pluginRepositories>\r\n\r\n	<build>\r\n		<plugins>\r\n		<!-- Allows the routes to be run via 'mvn camel:run' -->\r\n		<plugin>\r\n			<groupId>org.apache.camel</groupId>\r\n			<artifactId>camel-maven-plugin</artifactId>\r\n				<configuration>\r\n					<applicationContextUri>META-INF/spring/camel-context.xml</applicationContextUri>\r\n				</configuration>\r\n			</plugin>\r\n		</plugins>\r\n	</build>\r\n\r\n	<description>Empty Camel Spring Example</description>\r\n</project>\r\n"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
didClose: TextDocumentIdentifier [
  uri = "git:/e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml.git?%7B%22path%22%3A%22e%3A%5C%5CUsers%5C%5Cbfitzpat%5C%5Cgithub%5C%5Cgenerator-fuse-project%5C%5Capp%5C%5Ctemplates%5C%5Cblueprint%5C%5Cpom.xml%22%2C%22ref%22%3A%22%22%7D"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didOpen: TextDocumentItem [
  uri = "git:/e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml.git?%7B%22path%22%3A%22e%3A%5C%5CUsers%5C%5Cbfitzpat%5C%5Cgithub%5C%5Cgenerator-fuse-project%5C%5Capp%5C%5Ctemplates%5C%5Cspring%5C%5Cpom.xml%22%2C%22ref%22%3A%22%22%7D"
  languageId = "xml"
  version = 1
  text = "<?xml version="1.0" encoding="UTF-8"?>\n<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">\n\n	<modelVersion>4.0.0</modelVersion>\n\n	<groupId><%= userProps.package %></groupId>\n	<artifactId><%= userProps.name %></artifactId>\n	<version>1.0.0-SNAPSHOT</version>\n	<packaging>jar</packaging>\n\n	<name><%= userProps.name %></name>\n\n	<licenses>\n		<license>\n			<name>Apache License, Version 2.0</name>\n			<distribution>repo</distribution>\n			<url>http://www.apache.org/licenses/LICENSE-2.0.html</url>\n		</license>\n	</licenses>\n\n	<properties>\n		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\n		<version.maven-bundle-plugin>3.2.0</version.maven-bundle-plugin>\n		<camel.version><%= userProps.camelVersion %></camel.version>\n	</properties>\n\n	<dependencies>\n		<dependency>\n			<groupId>org.apache.camel</groupId>\n			<artifactId>camel-core</artifactId>\n      		<version>${camel.version}</version>\n		</dependency>\n		<dependency>\n			<groupId>org.apache.camel</groupId>\n			<artifactId>camel-spring</artifactId>\n      		<version>${camel.version}</version>\n		</dependency>\n\n		<!-- Testing & Camel Plugin -->\n		<dependency>\n			<groupId>org.apache.camel</groupId>\n			<artifactId>camel-test-spring</artifactId>\n      		<version>${camel.version}</version>\n		</dependency>\n	</dependencies>\n\n	<repositories>\n		<repository>\n			<id>fuse-public-repository</id>\n			<name>FuseSource Community Release Repository</name>\n			<url>https://repo.fusesource.com/nexus/content/groups/public</url>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n		</repository>\n		<repository>\n			<id>red-hat-ga-repository</id>\n			<name>Red Hat GA Repository</name>\n			<url>https://maven.repository.redhat.com/ga</url>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n		</repository>\n		<repository>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n			<id>red-hat-ea-repository</id>\n			<name>Red Hat EA Repository</name>\n			<url>https://maven.repository.redhat.com/earlyaccess/all</url>\n		</repository>\n		<!-- To remove when a long-term version will be available -->\n		<repository>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n			<id>jboss-ea-repository</id>\n			<name>Red Hat JBoss Early Access Repository</name>\n			<url>http://repository.jboss.org/nexus/content/groups/ea</url>\n		</repository>\n	</repositories>\n\n	<pluginRepositories>\n		<pluginRepository>\n			<id>fuse-public-repository</id>\n			<name>FuseSource Community Release Repository</name>\n			<url>https://repo.fusesource.com/nexus/content/groups/public</url>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n		</pluginRepository>\n		<pluginRepository>\n			<id>red-hat-ga-repository</id>\n			<name>Red Hat GA Repository</name>\n			<url>https://maven.repository.redhat.com/ga</url>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n		</pluginRepository>\n				<pluginRepository>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n			<id>red-hat-ea-repository</id>\n			<name>Red Hat EA Repository</name>\n			<url>https://maven.repository.redhat.com/earlyaccess/all</url>\n		</pluginRepository>\n		<!-- To remove when a long-term version will be available -->\n		<pluginRepository>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n			<id>jboss-ea-repository</id>\n			<name>Red Hat JBoss Early Access Repository</name>\n			<url>http://repository.jboss.org/nexus/content/groups/ea</url>\n		</pluginRepository>\n	</pluginRepositories>\n\n	<build>\n		<plugins>\n		<!-- Allows the routes to be run via 'mvn camel:run' -->\n		<plugin>\n			<groupId>org.apache.camel</groupId>\n			<artifactId>camel-maven-plugin</artifactId>\n				<configuration>\n					<applicationContextUri>META-INF/spring/camel-context.xml</applicationContextUri>\n				</configuration>\n			</plugin>\n		</plugins>\n	</build>\n\n	<description>Empty Camel Spring Example</description>\n</project>\n"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 2
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 7; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didSave: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
SERVER: changeWatchedFiles: size -> 1
didClose: TextDocumentIdentifier [
  uri = "git:/e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml.git?%7B%22path%22%3A%22e%3A%5C%5CUsers%5C%5Cbfitzpat%5C%5Cgithub%5C%5Cgenerator-fuse-project%5C%5Capp%5C%5Ctemplates%5C%5Cspring%5C%5Cpom.xml%22%2C%22ref%22%3A%22%22%7D"
]
didOpen: TextDocumentItem [
  uri = "git:/e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml.git?%7B%22path%22%3A%22e%3A%5C%5CUsers%5C%5Cbfitzpat%5C%5Cgithub%5C%5Cgenerator-fuse-project%5C%5Capp%5C%5Ctemplates%5C%5Cblueprint%5C%5Cpom.xml%22%2C%22ref%22%3A%22%22%7D"
  languageId = "xml"
  version = 1
  text = "<?xml version="1.0" encoding="UTF-8"?>\n<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"\n    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">\n  <modelVersion>4.0.0</modelVersion>\n\n	<groupId><%= userProps.package %></groupId>\n	<artifactId><%= userProps.name %></artifactId>\n	<version>1.0.0-SNAPSHOT</version>\n	<packaging>jar</packaging>\n\n  <name><%= userProps.name %></name>\n\n  <licenses>\n    <license>\n      <name>Apache License, Version 2.0</name>\n      <url>http://www.apache.org/licenses/LICENSE-2.0.html</url>\n      <distribution>repo</distribution>\n    </license>\n  </licenses>\n\n  <properties>\n		<camel.version><%= userProps.camelVersion %></camel.version>\n    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\n    <version.maven-bundle-plugin>3.2.0</version.maven-bundle-plugin>\n    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n  </properties>\n\n  <dependencies>\n    <dependency>\n      <groupId>org.apache.camel</groupId>\n      <artifactId>camel-core</artifactId>\n      <version>${camel.version}</version>\n    </dependency>\n    <dependency>\n      <groupId>org.apache.camel</groupId>\n      <artifactId>camel-blueprint</artifactId>\n      <version>${camel.version}</version>\n    </dependency>\n    <dependency>\n      <groupId>org.apache.camel</groupId>\n      <artifactId>camel-test-blueprint</artifactId>\n      <version>${camel.version}</version>\n      <scope>test</scope>\n    </dependency>\n  </dependencies>\n  \n	<repositories>\n		<repository>\n			<id>fuse-public-repository</id>\n			<name>FuseSource Community Release Repository</name>\n			<url>https://repo.fusesource.com/nexus/content/groups/public</url>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n		</repository>\n		<repository>\n			<id>red-hat-ga-repository</id>\n			<name>Red Hat GA Repository</name>\n			<url>https://maven.repository.redhat.com/ga</url>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n		</repository>\n		<repository>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n			<id>red-hat-ea-repository</id>\n			<name>Red Hat EA Repository</name>\n			<url>https://maven.repository.redhat.com/earlyaccess/all</url>\n		</repository>\n		<!-- To remove when a long-term version will be available -->\n		<repository>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n			<id>jboss-ea-repository</id>\n			<name>Red Hat JBoss Early Access Repository</name>\n			<url>http://repository.jboss.org/nexus/content/groups/ea</url>\n		</repository>\n	</repositories>\n\n	<pluginRepositories>\n		<pluginRepository>\n			<id>fuse-public-repository</id>\n			<name>FuseSource Community Release Repository</name>\n			<url>https://repo.fusesource.com/nexus/content/groups/public</url>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n		</pluginRepository>\n		<pluginRepository>\n			<id>red-hat-ga-repository</id>\n			<name>Red Hat GA Repository</name>\n			<url>https://maven.repository.redhat.com/ga</url>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n		</pluginRepository>\n				<pluginRepository>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n			<id>red-hat-ea-repository</id>\n			<name>Red Hat EA Repository</name>\n			<url>https://maven.repository.redhat.com/earlyaccess/all</url>\n		</pluginRepository>\n		<!-- To remove when a long-term version will be available -->\n		<pluginRepository>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n			<id>jboss-ea-repository</id>\n			<name>Red Hat JBoss Early Access Repository</name>\n			<url>http://repository.jboss.org/nexus/content/groups/ea</url>\n		</pluginRepository>\n	</pluginRepositories>\n\n	<build>\n		<plugins>\n      <!-- Allows the routes to be run via 'mvn camel:run' -->\n      <plugin>\n        <groupId>org.apache.camel</groupId>\n        <artifactId>camel-maven-plugin</artifactId>\n  			<configuration>\n    			<applicationContextUri>OSGI-INF/blueprint/blueprint.xml</applicationContextUri>\n  			</configuration>\n	    </plugin>\n		</plugins>\n	</build>\n\n  <description>Empty Camel Blueprint Example</description>\n</project>\n"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 3
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 4
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didSave: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
SERVER: changeWatchedFiles: size -> 1
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didClose: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
didClose: TextDocumentIdentifier [
  uri = "git:/e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml.git?%7B%22path%22%3A%22e%3A%5C%5CUsers%5C%5Cbfitzpat%5C%5Cgithub%5C%5Cgenerator-fuse-project%5C%5Capp%5C%5Ctemplates%5C%5Cblueprint%5C%5Cpom.xml%22%2C%22ref%22%3A%22%22%7D"
]
didOpen: TextDocumentItem [
  uri = "git:/e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml.git?%7B%22path%22%3A%22e%3A%5C%5CUsers%5C%5Cbfitzpat%5C%5Cgithub%5C%5Cgenerator-fuse-project%5C%5Capp%5C%5Ctemplates%5C%5Cspring%5C%5Cpom.xml%22%2C%22ref%22%3A%22%22%7D"
  languageId = "xml"
  version = 1
  text = "<?xml version="1.0" encoding="UTF-8"?>\n<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">\n\n	<modelVersion>4.0.0</modelVersion>\n\n	<groupId><%= userProps.package %></groupId>\n	<artifactId><%= userProps.name %></artifactId>\n	<version>1.0.0-SNAPSHOT</version>\n	<packaging>jar</packaging>\n\n	<name><%= userProps.name %></name>\n\n	<licenses>\n		<license>\n			<name>Apache License, Version 2.0</name>\n			<distribution>repo</distribution>\n			<url>http://www.apache.org/licenses/LICENSE-2.0.html</url>\n		</license>\n	</licenses>\n\n	<properties>\n		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\n		<version.maven-bundle-plugin>3.2.0</version.maven-bundle-plugin>\n		<camel.version><%= userProps.camelVersion %></camel.version>\n	</properties>\n\n	<dependencies>\n		<dependency>\n			<groupId>org.apache.camel</groupId>\n			<artifactId>camel-core</artifactId>\n      		<version>${camel.version}</version>\n		</dependency>\n		<dependency>\n			<groupId>org.apache.camel</groupId>\n			<artifactId>camel-spring</artifactId>\n      		<version>${camel.version}</version>\n		</dependency>\n\n		<!-- Testing & Camel Plugin -->\n		<dependency>\n			<groupId>org.apache.camel</groupId>\n			<artifactId>camel-test-spring</artifactId>\n      		<version>${camel.version}</version>\n		</dependency>\n	</dependencies>\n\n	<repositories>\n		<repository>\n			<id>fuse-public-repository</id>\n			<name>FuseSource Community Release Repository</name>\n			<url>https://repo.fusesource.com/nexus/content/groups/public</url>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n		</repository>\n		<repository>\n			<id>red-hat-ga-repository</id>\n			<name>Red Hat GA Repository</name>\n			<url>https://maven.repository.redhat.com/ga</url>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n		</repository>\n		<repository>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n			<id>red-hat-ea-repository</id>\n			<name>Red Hat EA Repository</name>\n			<url>https://maven.repository.redhat.com/earlyaccess/all</url>\n		</repository>\n		<!-- To remove when a long-term version will be available -->\n		<repository>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n			<id>jboss-ea-repository</id>\n			<name>Red Hat JBoss Early Access Repository</name>\n			<url>http://repository.jboss.org/nexus/content/groups/ea</url>\n		</repository>\n	</repositories>\n\n	<pluginRepositories>\n		<pluginRepository>\n			<id>fuse-public-repository</id>\n			<name>FuseSource Community Release Repository</name>\n			<url>https://repo.fusesource.com/nexus/content/groups/public</url>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n		</pluginRepository>\n		<pluginRepository>\n			<id>red-hat-ga-repository</id>\n			<name>Red Hat GA Repository</name>\n			<url>https://maven.repository.redhat.com/ga</url>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n		</pluginRepository>\n				<pluginRepository>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n			<id>red-hat-ea-repository</id>\n			<name>Red Hat EA Repository</name>\n			<url>https://maven.repository.redhat.com/earlyaccess/all</url>\n		</pluginRepository>\n		<!-- To remove when a long-term version will be available -->\n		<pluginRepository>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n			<id>jboss-ea-repository</id>\n			<name>Red Hat JBoss Early Access Repository</name>\n			<url>http://repository.jboss.org/nexus/content/groups/ea</url>\n		</pluginRepository>\n	</pluginRepositories>\n\n	<build>\n		<plugins>\n		<!-- Allows the routes to be run via 'mvn camel:run' -->\n		<plugin>\n			<groupId>org.apache.camel</groupId>\n			<artifactId>camel-maven-plugin</artifactId>\n				<configuration>\n					<applicationContextUri>META-INF/spring/camel-context.xml</applicationContextUri>\n				</configuration>\n			</plugin>\n		</plugins>\n	</build>\n\n	<description>Empty Camel Spring Example</description>\n</project>\n"
]
didClose: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml"
]
didClose: TextDocumentIdentifier [
  uri = "git:/e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/pom.xml.git?%7B%22path%22%3A%22e%3A%5C%5CUsers%5C%5Cbfitzpat%5C%5Cgithub%5C%5Cgenerator-fuse-project%5C%5Capp%5C%5Ctemplates%5C%5Cspring%5C%5Cpom.xml%22%2C%22ref%22%3A%22%22%7D"
]
didOpen: TextDocumentItem [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
  languageId = "xml"
  version = 1
  text = "<?xml version="1.0" encoding="UTF-8"?>\r\n<!--\r\n    Copyright 2014-2017, Red Hat, Inc. and/or its affiliates, and individual\r\n    contributors by the @authors tag. \r\n    Licensed under the Apache License, Version 2.0 (the "License");\r\n    you may not use this file except in compliance with the License.\r\n    You may obtain a copy of the License at\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n    Unless required by applicable law or agreed to in writing, software\r\n    distributed under the License is distributed on an "AS IS" BASIS,\r\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n    See the License for the specific language governing permissions and\r\n    limitations under the License.\r\n-->\r\n<!-- Configures the Camel Context-->\r\n<beans xmlns="http://www.springframework.org/schema/beans"\r\n    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd        http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">\r\n    <camelContext id="_camelContext1" xmlns="http://camel.apache.org/schema/spring">\r\n        <route id="_route1">\r\n        </route>\r\n    </camelContext>\r\n</beans>"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
didOpen: TextDocumentItem [
  uri = "git:/e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml.git?%7B%22path%22%3A%22e%3A%5C%5CUsers%5C%5Cbfitzpat%5C%5Cgithub%5C%5Cgenerator-fuse-project%5C%5Capp%5C%5Ctemplates%5C%5Cspring%5C%5Csrc%5C%5Cmain%5C%5Cresources%5C%5CMETA-INF%5C%5Cspring%5C%5Ccamel-context.xml%22%2C%22ref%22%3A%22%22%7D"
  languageId = "xml"
  version = 1
  text = "<?xml version="1.0" encoding="UTF-8"?>\n<!--\n    Copyright 2014-2017, Red Hat, Inc. and/or its affiliates, and individual\n    contributors by the @authors tag. \n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n    http://www.apache.org/licenses/LICENSE-2.0\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n-->\n<!-- Configures the Camel Context-->\n<beans xmlns="http://www.springframework.org/schema/beans"\n    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd        http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">\n    <camelContext id="_camelContext1" xmlns="http://camel.apache.org/schema/spring">\n        <route id="_route1">\n        </route>\n    </camelContext>\n</beans>"
]
didChange: VersionedTextDocumentIdentifier [
  version = 2
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 3
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 4
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 20; columnNumber: 14; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 5
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 21; columnNumber: 11; The element type "f" must be terminated by the matching end-tag "</f>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.completion.CamelEndpointCompletionProcessor.getCompletions(CamelEndpointCompletionProcessor.java:49)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.completion(CamelTextDocumentService.java:84)
	at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 8
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 21; columnNumber: 11; The element type "from" must be terminated by the matching end-tag "</from>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 9
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 21; columnNumber: 11; The element type "from" must be terminated by the matching end-tag "</from>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 10
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 20; columnNumber: 20; Attribute name "u" associated with an element type "from" must be followed by the ' = ' character.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.completion.CamelEndpointCompletionProcessor.getCompletions(CamelEndpointCompletionProcessor.java:49)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.completion(CamelTextDocumentService.java:84)
	at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 12
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 20; columnNumber: 22; Attribute name "uri" associated with an element type "from" must be followed by the ' = ' character.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 13
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 20; columnNumber: 23; Open quote is expected for attribute "uri" associated with an  element type  "from".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.completion.CamelEndpointCompletionProcessor.getCompletions(CamelEndpointCompletionProcessor.java:49)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.completion(CamelTextDocumentService.java:84)
	at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 20; columnNumber: 23; Open quote is expected for attribute "uri" associated with an  element type  "from".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 14
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 21; columnNumber: 11; The element type "from" must be terminated by the matching end-tag "</from>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.completion.CamelEndpointCompletionProcessor.getCompletions(CamelEndpointCompletionProcessor.java:49)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.completion(CamelTextDocumentService.java:84)
	at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 21; columnNumber: 11; The element type "from" must be terminated by the matching end-tag "</from>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 16
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 19
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 20
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 21; columnNumber: 11; The element type "from" must be terminated by the matching end-tag "</from>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 22
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 28
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 33
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 34
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 21; columnNumber: 11; The element type "from" must be terminated by the matching end-tag "</from>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.completion.CamelEndpointCompletionProcessor.getCompletions(CamelEndpointCompletionProcessor.java:49)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.completion(CamelTextDocumentService.java:84)
	at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 40
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 41
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 21; columnNumber: 11; The element type "from" must be terminated by the matching end-tag "</from>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.completion.CamelEndpointCompletionProcessor.getCompletions(CamelEndpointCompletionProcessor.java:49)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.completion(CamelTextDocumentService.java:84)
	at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 45
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 46
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 21; columnNumber: 11; The element type "from" must be terminated by the matching end-tag "</from>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.completion.CamelEndpointCompletionProcessor.getCompletions(CamelEndpointCompletionProcessor.java:49)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.completion(CamelTextDocumentService.java:84)
	at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 21; columnNumber: 11; The element type "from" must be terminated by the matching end-tag "</from>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 47
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 48
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 49
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 50
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 22; columnNumber: 11; The element type "t" must be terminated by the matching end-tag "</t>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.completion.CamelEndpointCompletionProcessor.getCompletions(CamelEndpointCompletionProcessor.java:49)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.completion(CamelTextDocumentService.java:84)
	at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 51
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 22; columnNumber: 11; The element type "to" must be terminated by the matching end-tag "</to>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 52
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 22; columnNumber: 11; The element type "to" must be terminated by the matching end-tag "</to>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 53
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 21; columnNumber: 18; Attribute name "u" associated with an element type "to" must be followed by the ' = ' character.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.completion.CamelEndpointCompletionProcessor.getCompletions(CamelEndpointCompletionProcessor.java:49)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.completion(CamelTextDocumentService.java:84)
	at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 55
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 21; columnNumber: 20; Attribute name "uri" associated with an element type "to" must be followed by the ' = ' character.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 56
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 21; columnNumber: 21; Open quote is expected for attribute "uri" associated with an  element type  "to".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.completion.CamelEndpointCompletionProcessor.getCompletions(CamelEndpointCompletionProcessor.java:49)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.completion(CamelTextDocumentService.java:84)
	at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 57
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 22; columnNumber: 11; The element type "to" must be terminated by the matching end-tag "</to>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.completion.CamelEndpointCompletionProcessor.getCompletions(CamelEndpointCompletionProcessor.java:49)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.completion(CamelTextDocumentService.java:84)
	at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 63
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 22; columnNumber: 11; The element type "to" must be terminated by the matching end-tag "</to>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 67
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 68
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 22; columnNumber: 11; The element type "to" must be terminated by the matching end-tag "</to>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.completion.CamelEndpointCompletionProcessor.getCompletions(CamelEndpointCompletionProcessor.java:49)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.completion(CamelTextDocumentService.java:84)
	at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 22; columnNumber: 11; The element type "to" must be terminated by the matching end-tag "</to>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 69
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 70
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 71
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 72
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 23; columnNumber: 11; The element type "s" must be terminated by the matching end-tag "</s>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.completion.CamelEndpointCompletionProcessor.getCompletions(CamelEndpointCompletionProcessor.java:49)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.completion(CamelTextDocumentService.java:84)
	at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 74
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 76
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 23; columnNumber: 11; The element type "setBo" must be terminated by the matching end-tag "</setBo>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.completion.CamelEndpointCompletionProcessor.getCompletions(CamelEndpointCompletionProcessor.java:49)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.completion(CamelTextDocumentService.java:84)
	at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 77
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 23; columnNumber: 11; The element type "setBod" must be terminated by the matching end-tag "</setBod>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.completion.CamelEndpointCompletionProcessor.getCompletions(CamelEndpointCompletionProcessor.java:49)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.completion(CamelTextDocumentService.java:84)
	at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 78
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 23; columnNumber: 11; The element type "setBody" must be terminated by the matching end-tag "</setBody>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.completion.CamelEndpointCompletionProcessor.getCompletions(CamelEndpointCompletionProcessor.java:49)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.completion(CamelTextDocumentService.java:84)
	at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 79
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 23; columnNumber: 11; The element type "setBody" must be terminated by the matching end-tag "</setBody>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 80
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 24; columnNumber: 11; The element type "setBody" must be terminated by the matching end-tag "</setBody>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 83
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 22; columnNumber: 15; The element type "setBody" must be terminated by the matching end-tag "</setBody>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.completion.CamelEndpointCompletionProcessor.getCompletions(CamelEndpointCompletionProcessor.java:49)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.completion(CamelTextDocumentService.java:84)
	at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 85
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 86
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 22; columnNumber: 15; The element type "setBody" must be terminated by the matching end-tag "</setBody>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 87
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 88
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 89
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 90
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 22; columnNumber: 18; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 91
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 23; columnNumber: 16; The end-tag for element type "s" must end with a '>' delimiter.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.completion.CamelEndpointCompletionProcessor.getCompletions(CamelEndpointCompletionProcessor.java:49)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.completion(CamelTextDocumentService.java:84)
	at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 96
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 23; columnNumber: 15; The element type "simple" must be terminated by the matching end-tag "</simple>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 97
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 22; columnNumber: 24; Element type "simple" must be followed by either attribute specifications, ">" or "/>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 98
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 23; columnNumber: 15; The element type "simple" must be terminated by the matching end-tag "</simple>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 99
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 23; columnNumber: 15; The element type "simple" must be terminated by the matching end-tag "</simple>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 100
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 23; columnNumber: 15; The element type "simple" must be terminated by the matching end-tag "</simple>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.completion.CamelEndpointCompletionProcessor.getCompletions(CamelEndpointCompletionProcessor.java:49)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.completion(CamelTextDocumentService.java:84)
	at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 23; columnNumber: 15; The element type "simple" must be terminated by the matching end-tag "</simple>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 101
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 23; columnNumber: 15; The element type "simple" must be terminated by the matching end-tag "</simple>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.completion.CamelEndpointCompletionProcessor.getCompletions(CamelEndpointCompletionProcessor.java:49)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.completion(CamelTextDocumentService.java:84)
	at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 103
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 23; columnNumber: 15; The element type "simple" must be terminated by the matching end-tag "</simple>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.completion.CamelEndpointCompletionProcessor.getCompletions(CamelEndpointCompletionProcessor.java:49)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.completion(CamelTextDocumentService.java:84)
	at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 104
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 23; columnNumber: 15; The element type "simple" must be terminated by the matching end-tag "</simple>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.completion.CamelEndpointCompletionProcessor.getCompletions(CamelEndpointCompletionProcessor.java:49)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.completion(CamelTextDocumentService.java:84)
	at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 105
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 23; columnNumber: 15; The element type "simple" must be terminated by the matching end-tag "</simple>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.completion.CamelEndpointCompletionProcessor.getCompletions(CamelEndpointCompletionProcessor.java:49)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.completion(CamelTextDocumentService.java:84)
	at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 107
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 23; columnNumber: 15; The element type "simple" must be terminated by the matching end-tag "</simple>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.completion.CamelEndpointCompletionProcessor.getCompletions(CamelEndpointCompletionProcessor.java:49)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.completion(CamelTextDocumentService.java:84)
	at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 112
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 23; columnNumber: 15; The element type "simple" must be terminated by the matching end-tag "</simple>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.completion.CamelEndpointCompletionProcessor.getCompletions(CamelEndpointCompletionProcessor.java:49)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.completion(CamelTextDocumentService.java:84)
	at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 117
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 23; columnNumber: 15; The element type "simple" must be terminated by the matching end-tag "</simple>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 118
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 23; columnNumber: 15; The element type "simple" must be terminated by the matching end-tag "</simple>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.completion.CamelEndpointCompletionProcessor.getCompletions(CamelEndpointCompletionProcessor.java:49)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.completion(CamelTextDocumentService.java:84)
	at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 120
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 121
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 23; columnNumber: 15; The element type "simple" must be terminated by the matching end-tag "</simple>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 122
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 23; columnNumber: 15; The element type "simple" must be terminated by the matching end-tag "</simple>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 124
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 125
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 23; columnNumber: 15; The element type "simple" must be terminated by the matching end-tag "</simple>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.completion.CamelEndpointCompletionProcessor.getCompletions(CamelEndpointCompletionProcessor.java:49)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.completion(CamelTextDocumentService.java:84)
	at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 128
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 23; columnNumber: 15; The element type "simple" must be terminated by the matching end-tag "</simple>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.completion.CamelEndpointCompletionProcessor.getCompletions(CamelEndpointCompletionProcessor.java:49)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.completion(CamelTextDocumentService.java:84)
	at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 129
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 23; columnNumber: 15; The element type "simple" must be terminated by the matching end-tag "</simple>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.completion.CamelEndpointCompletionProcessor.getCompletions(CamelEndpointCompletionProcessor.java:49)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.completion(CamelTextDocumentService.java:84)
	at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 131
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 23; columnNumber: 15; The element type "simple" must be terminated by the matching end-tag "</simple>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.completion.CamelEndpointCompletionProcessor.getCompletions(CamelEndpointCompletionProcessor.java:49)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.completion(CamelTextDocumentService.java:84)
	at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 132
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 23; columnNumber: 15; The element type "simple" must be terminated by the matching end-tag "</simple>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.completion.CamelEndpointCompletionProcessor.getCompletions(CamelEndpointCompletionProcessor.java:49)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.completion(CamelTextDocumentService.java:84)
	at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 135
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 23; columnNumber: 15; The element type "simple" must be terminated by the matching end-tag "</simple>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.completion.CamelEndpointCompletionProcessor.getCompletions(CamelEndpointCompletionProcessor.java:49)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.completion(CamelTextDocumentService.java:84)
	at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 136
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 23; columnNumber: 15; The element type "simple" must be terminated by the matching end-tag "</simple>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.completion.CamelEndpointCompletionProcessor.getCompletions(CamelEndpointCompletionProcessor.java:49)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.completion(CamelTextDocumentService.java:84)
	at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 137
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 23; columnNumber: 15; The element type "simple" must be terminated by the matching end-tag "</simple>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.completion.CamelEndpointCompletionProcessor.getCompletions(CamelEndpointCompletionProcessor.java:49)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.completion(CamelTextDocumentService.java:84)
	at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 138
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 23; columnNumber: 15; The element type "simple" must be terminated by the matching end-tag "</simple>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.completion.CamelEndpointCompletionProcessor.getCompletions(CamelEndpointCompletionProcessor.java:49)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.completion(CamelTextDocumentService.java:84)
	at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 139
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 23; columnNumber: 15; The element type "simple" must be terminated by the matching end-tag "</simple>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.completion.CamelEndpointCompletionProcessor.getCompletions(CamelEndpointCompletionProcessor.java:49)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.completion(CamelTextDocumentService.java:84)
	at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 140
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 23; columnNumber: 15; The element type "simple" must be terminated by the matching end-tag "</simple>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.completion.CamelEndpointCompletionProcessor.getCompletions(CamelEndpointCompletionProcessor.java:49)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.completion(CamelTextDocumentService.java:84)
	at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 23; columnNumber: 15; The element type "simple" must be terminated by the matching end-tag "</simple>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 141
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 23; columnNumber: 15; The element type "simple" must be terminated by the matching end-tag "</simple>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 142
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 23; columnNumber: 15; The element type "simple" must be terminated by the matching end-tag "</simple>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 143
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 23; columnNumber: 15; The element type "simple" must be terminated by the matching end-tag "</simple>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 144
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 23; columnNumber: 15; The element type "simple" must be terminated by the matching end-tag "</simple>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 145
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 146
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 147
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 22; columnNumber: 68; The element type "simple" must be terminated by the matching end-tag "</simple>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.completion.CamelEndpointCompletionProcessor.getCompletions(CamelEndpointCompletionProcessor.java:49)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.completion(CamelTextDocumentService.java:84)
	at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 152
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 153
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 22; columnNumber: 74; The end-tag for element type "simple" must end with a '>' delimiter.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.completion.CamelEndpointCompletionProcessor.getCompletions(CamelEndpointCompletionProcessor.java:49)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.completion(CamelTextDocumentService.java:84)
	at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 22; columnNumber: 74; The end-tag for element type "simple" must end with a '>' delimiter.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 154
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 155
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 156
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 157
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
didSave: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
SERVER: changeWatchedFiles: size -> 1
didOpen: TextDocumentItem [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
  languageId = "xml"
  version = 1
  text = "<?xml version="1.0" encoding="UTF-8"?>\r\n<!--\r\n    Copyright 2014-2017, Red Hat, Inc. and/or its affiliates, and individual\r\n    contributors by the @authors tag. \r\n    Licensed under the Apache License, Version 2.0 (the "License");\r\n    you may not use this file except in compliance with the License.\r\n    You may obtain a copy of the License at\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n    Unless required by applicable law or agreed to in writing, software\r\n    distributed under the License is distributed on an "AS IS" BASIS,\r\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n    See the License for the specific language governing permissions and\r\n    limitations under the License.\r\n-->\r\n<!-- Configures the Camel Context-->\r\n<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"\r\n    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 https://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd                            http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">\r\n    <camelContext id="_context1" xmlns="http://camel.apache.org/schema/blueprint">\r\n        <route id="_route1">\r\n        </route>\r\n    </camelContext>\r\n</beans>"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
didClose: TextDocumentIdentifier [
  uri = "git:/e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml.git?%7B%22path%22%3A%22e%3A%5C%5CUsers%5C%5Cbfitzpat%5C%5Cgithub%5C%5Cgenerator-fuse-project%5C%5Capp%5C%5Ctemplates%5C%5Cspring%5C%5Csrc%5C%5Cmain%5C%5Cresources%5C%5CMETA-INF%5C%5Cspring%5C%5Ccamel-context.xml%22%2C%22ref%22%3A%22%22%7D"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 22; columnNumber: 3; The element type "blueprint" must be terminated by the matching end-tag "</blueprint>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didOpen: TextDocumentItem [
  uri = "git:/e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/src/main/resources/OSGI-INF/blueprint/blueprint.xml.git?%7B%22path%22%3A%22e%3A%5C%5CUsers%5C%5Cbfitzpat%5C%5Cgithub%5C%5Cgenerator-fuse-project%5C%5Capp%5C%5Ctemplates%5C%5Cblueprint%5C%5Csrc%5C%5Cmain%5C%5Cresources%5C%5COSGI-INF%5C%5Cblueprint%5C%5Cblueprint.xml%22%2C%22ref%22%3A%22%22%7D"
  languageId = "xml"
  version = 1
  text = "<?xml version="1.0" encoding="UTF-8"?>\n<!--\n    Copyright 2014-2017, Red Hat, Inc. and/or its affiliates, and individual\n    contributors by the @authors tag. \n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n    http://www.apache.org/licenses/LICENSE-2.0\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n-->\n<!-- Configures the Camel Context-->\n<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"\n    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 https://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd                            http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">\n    <camelContext id="_context1" xmlns="http://camel.apache.org/schema/blueprint">\n        <route id="_route1">\n        </route>\n    </camelContext>\n</beans>"
]
didChange: VersionedTextDocumentIdentifier [
  version = 2
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 27; columnNumber: 3; The element type "blueprint" must be terminated by the matching end-tag "</blueprint>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didSave: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
SERVER: changeWatchedFiles: size -> 1
SERVER: changeWatchedFiles: size -> 1
SERVER: changeWatchedFiles: size -> 2
SERVER: changeWatchedFiles: size -> 1
didOpen: TextDocumentItem [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
  languageId = "xml"
  version = 1
  text = "<?xml version="1.0" encoding="UTF-8"?>\r\n<!--\r\n    Copyright 2014-2017, Red Hat, Inc. and/or its affiliates, and individual\r\n    contributors by the @authors tag. \r\n    Licensed under the Apache License, Version 2.0 (the "License");\r\n    you may not use this file except in compliance with the License.\r\n    You may obtain a copy of the License at\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n    Unless required by applicable law or agreed to in writing, software\r\n    distributed under the License is distributed on an "AS IS" BASIS,\r\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n    See the License for the specific language governing permissions and\r\n    limitations under the License.\r\n-->\r\n<!-- Configures the Camel Context-->\r\n<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"\r\n    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 https://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd                            http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">\r\n    <camelContext id="_context1" xmlns="http://camel.apache.org/schema/blueprint">\r\n        <route id="_route1">\r\n            <from uri="timer://simpleTimer?period=1000"/>\r\n            <setBody>\r\n                <simple>Hello from tmier at ${header.firedTime}></simple>\r\n            </setBody>\r\n            <to uri="stream:out"/>\r\n        </route>\r\n    </camelContext>\r\n</beans>"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
didClose: TextDocumentIdentifier [
  uri = "git:/e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/src/main/resources/OSGI-INF/blueprint/blueprint.xml.git?%7B%22path%22%3A%22e%3A%5C%5CUsers%5C%5Cbfitzpat%5C%5Cgithub%5C%5Cgenerator-fuse-project%5C%5Capp%5C%5Ctemplates%5C%5Cblueprint%5C%5Csrc%5C%5Cmain%5C%5Cresources%5C%5COSGI-INF%5C%5Cblueprint%5C%5Cblueprint.xml%22%2C%22ref%22%3A%22%22%7D"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 27; columnNumber: 3; The element type "blueprint" must be terminated by the matching end-tag "</blueprint>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 27; columnNumber: 3; The element type "blueprint" must be terminated by the matching end-tag "</blueprint>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 27; columnNumber: 3; The element type "blueprint" must be terminated by the matching end-tag "</blueprint>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 27; columnNumber: 3; The element type "blueprint" must be terminated by the matching end-tag "</blueprint>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 27; columnNumber: 3; The element type "blueprint" must be terminated by the matching end-tag "</blueprint>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 27; columnNumber: 3; The element type "blueprint" must be terminated by the matching end-tag "</blueprint>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 27; columnNumber: 3; The element type "blueprint" must be terminated by the matching end-tag "</blueprint>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 2
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 28; columnNumber: 3; The element type "blueprint" must be terminated by the matching end-tag "</blueprint>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 3
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 28; columnNumber: 3; The element type "blueprint" must be terminated by the matching end-tag "</blueprint>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 4
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 24; columnNumber: 3; The element type "blueprint" must be terminated by the matching end-tag "</blueprint>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didSave: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
SERVER: changeWatchedFiles: size -> 1
SERVER: changeWatchedFiles: size -> 1
SERVER: changeWatchedFiles: size -> 1
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 24; columnNumber: 3; The element type "blueprint" must be terminated by the matching end-tag "</blueprint>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 5
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 28; columnNumber: 3; The element type "blueprint" must be terminated by the matching end-tag "</blueprint>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 6
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 27; columnNumber: 3; The element type "blueprint" must be terminated by the matching end-tag "</blueprint>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 7
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 27; columnNumber: 3; The element type "blueprint" must be terminated by the matching end-tag "</blueprint>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 8
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 27; columnNumber: 3; The element type "blueprint" must be terminated by the matching end-tag "</blueprint>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didSave: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
SERVER: changeWatchedFiles: size -> 1
SERVER: changeWatchedFiles: size -> 1
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 27; columnNumber: 3; The element type "blueprint" must be terminated by the matching end-tag "</blueprint>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didOpen: TextDocumentItem [
  uri = "git:/e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/src/main/resources/OSGI-INF/blueprint/blueprint.xml.git?%7B%22path%22%3A%22e%3A%5C%5CUsers%5C%5Cbfitzpat%5C%5Cgithub%5C%5Cgenerator-fuse-project%5C%5Capp%5C%5Ctemplates%5C%5Cblueprint%5C%5Csrc%5C%5Cmain%5C%5Cresources%5C%5COSGI-INF%5C%5Cblueprint%5C%5Cblueprint.xml%22%2C%22ref%22%3A%22%22%7D"
  languageId = "xml"
  version = 1
  text = "<?xml version="1.0" encoding="UTF-8"?>\n<!--\n    Copyright 2014-2017, Red Hat, Inc. and/or its affiliates, and individual\n    contributors by the @authors tag. \n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n    http://www.apache.org/licenses/LICENSE-2.0\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n-->\n<!-- Configures the Camel Context-->\n<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"\n    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 https://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd                            http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">\n    <camelContext id="_context1" xmlns="http://camel.apache.org/schema/blueprint">\n        <route id="_route1">\n        </route>\n    </camelContext>\n</beans>"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 27; columnNumber: 3; The element type "blueprint" must be terminated by the matching end-tag "</blueprint>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 3
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 27; columnNumber: 3; The element type "blueprint" must be terminated by the matching end-tag "</blueprint>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 27; columnNumber: 3; The element type "blueprint" must be terminated by the matching end-tag "</blueprint>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didSave: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
SERVER: changeWatchedFiles: size -> 1
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
didClose: TextDocumentIdentifier [
  uri = "git:/e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/src/main/resources/OSGI-INF/blueprint/blueprint.xml.git?%7B%22path%22%3A%22e%3A%5C%5CUsers%5C%5Cbfitzpat%5C%5Cgithub%5C%5Cgenerator-fuse-project%5C%5Capp%5C%5Ctemplates%5C%5Cblueprint%5C%5Csrc%5C%5Cmain%5C%5Cresources%5C%5COSGI-INF%5C%5Cblueprint%5C%5Cblueprint.xml%22%2C%22ref%22%3A%22%22%7D"
]
didOpen: TextDocumentItem [
  uri = "git:/e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml.git?%7B%22path%22%3A%22e%3A%5C%5CUsers%5C%5Cbfitzpat%5C%5Cgithub%5C%5Cgenerator-fuse-project%5C%5Capp%5C%5Ctemplates%5C%5Cspring%5C%5Csrc%5C%5Cmain%5C%5Cresources%5C%5CMETA-INF%5C%5Cspring%5C%5Ccamel-context.xml%22%2C%22ref%22%3A%22%22%7D"
  languageId = "xml"
  version = 1
  text = "<?xml version="1.0" encoding="UTF-8"?>\n<!--\n    Copyright 2014-2017, Red Hat, Inc. and/or its affiliates, and individual\n    contributors by the @authors tag. \n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n    http://www.apache.org/licenses/LICENSE-2.0\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n-->\n<!-- Configures the Camel Context-->\n<beans xmlns="http://www.springframework.org/schema/beans"\n    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd        http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">\n    <camelContext id="_camelContext1" xmlns="http://camel.apache.org/schema/spring">\n        <route id="_route1">\n        </route>\n    </camelContext>\n</beans>"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 158
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
didSave: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
SERVER: changeWatchedFiles: size -> 1
didOpen: TextDocumentItem [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/routes/CamelRoute.java"
  languageId = "java"
  version = 1
  text = "package <%= userProps.package %>.routes;\r\n\r\nimport org.apache.camel.builder.RouteBuilder;\r\n\r\npublic class CamelRoute extends RouteBuilder {\r\n\r\n	@Override\r\n	public void configure() throws Exception {\r\n		/* \r\n		 * You can define here the Camel Route.\r\n		 * For instance, start by calling from() method, then use the Fluent API to build the Camel Route definition.\r\n		 */\r\n		from("timer://simpleTimer?period=1000")\r\n			.setBody(simple("Hello from timer at ${header.firedTime}"))\r\n			.to("stream:out");		\r\n	}\r\n}\r\n"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/routes/CamelRoute.java"
]
didClose: TextDocumentIdentifier [
  uri = "git:/e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml.git?%7B%22path%22%3A%22e%3A%5C%5CUsers%5C%5Cbfitzpat%5C%5Cgithub%5C%5Cgenerator-fuse-project%5C%5Capp%5C%5Ctemplates%5C%5Cspring%5C%5Csrc%5C%5Cmain%5C%5Cresources%5C%5CMETA-INF%5C%5Cspring%5C%5Ccamel-context.xml%22%2C%22ref%22%3A%22%22%7D"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 1; Content is not allowed in prolog.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/routes/CamelRoute.java"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/routes/CamelRoute.java"
]
didClose: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/spring/src/main/resources/META-INF/spring/camel-context.xml"
]
didClose: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
didClose: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
didClose: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/java/src/main/java/routes/CamelRoute.java"
]
SERVER: changeWatchedFiles: size -> 1
SERVER: changeWatchedFiles: size -> 2
SERVER: changeWatchedFiles: size -> 1
SERVER: changeWatchedFiles: size -> 1
didOpen: TextDocumentItem [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
  languageId = "xml"
  version = 1
  text = "<?xml version="1.0" encoding="UTF-8"?>\r\n<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"\r\n    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">\r\n  <modelVersion>4.0.0</modelVersion>\r\n\r\n	<groupId><%= userProps.package %></groupId>\r\n	<artifactId><%= userProps.name %></artifactId>\r\n	<version>1.0.0-SNAPSHOT</version>\r\n	<packaging>jar</packaging>\r\n\r\n  <name><%= userProps.name %></name>\r\n\r\n  <licenses>\r\n    <license>\r\n      <name>Apache License, Version 2.0</name>\r\n      <url>http://www.apache.org/licenses/LICENSE-2.0.html</url>\r\n      <distribution>repo</distribution>\r\n    </license>\r\n  </licenses>\r\n\r\n  <properties>\r\n		<camel.version><%= userProps.camelVersion %></camel.version>\r\n    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\r\n    <version.maven-bundle-plugin>3.2.0</version.maven-bundle-plugin>\r\n    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n  </properties>\r\n\r\n  <dependencies>\r\n    <dependency>\r\n      <groupId>org.apache.camel</groupId>\r\n      <artifactId>camel-core</artifactId>\r\n      <version>${camel.version}</version>\r\n    </dependency>\r\n    <dependency>\r\n      <groupId>org.apache.camel</groupId>\r\n      <artifactId>camel-blueprint</artifactId>\r\n      <version>${camel.version}</version>\r\n    </dependency>\r\n		<dependency>\r\n			<groupId>org.apache.camel</groupId>\r\n			<artifactId>camel-stream</artifactId>\r\n      		<version>${camel.version}</version>\r\n		</dependency>\r\n\r\n		<!-- Testing & Camel Plugin -->\r\n    <dependency>\r\n      <groupId>org.apache.camel</groupId>\r\n      <artifactId>camel-test-blueprint</artifactId>\r\n      <version>${camel.version}</version>\r\n      <scope>test</scope>\r\n    </dependency>\r\n  </dependencies>\r\n  \r\n	<repositories>\r\n		<repository>\r\n			<id>fuse-public-repository</id>\r\n			<name>FuseSource Community Release Repository</name>\r\n			<url>https://repo.fusesource.com/nexus/content/groups/public</url>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n		</repository>\r\n		<repository>\r\n			<id>red-hat-ga-repository</id>\r\n			<name>Red Hat GA Repository</name>\r\n			<url>https://maven.repository.redhat.com/ga</url>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n		</repository>\r\n		<repository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>red-hat-ea-repository</id>\r\n			<name>Red Hat EA Repository</name>\r\n			<url>https://maven.repository.redhat.com/earlyaccess/all</url>\r\n		</repository>\r\n		<!-- To remove when a long-term version will be available -->\r\n		<repository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>jboss-ea-repository</id>\r\n			<name>Red Hat JBoss Early Access Repository</name>\r\n			<url>http://repository.jboss.org/nexus/content/groups/ea</url>\r\n		</repository>\r\n	</repositories>\r\n\r\n	<pluginRepositories>\r\n		<pluginRepository>\r\n			<id>fuse-public-repository</id>\r\n			<name>FuseSource Community Release Repository</name>\r\n			<url>https://repo.fusesource.com/nexus/content/groups/public</url>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n		</pluginRepository>\r\n		<pluginRepository>\r\n			<id>red-hat-ga-repository</id>\r\n			<name>Red Hat GA Repository</name>\r\n			<url>https://maven.repository.redhat.com/ga</url>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n		</pluginRepository>\r\n				<pluginRepository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>red-hat-ea-repository</id>\r\n			<name>Red Hat EA Repository</name>\r\n			<url>https://maven.repository.redhat.com/earlyaccess/all</url>\r\n		</pluginRepository>\r\n		<!-- To remove when a long-term version will be available -->\r\n		<pluginRepository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>jboss-ea-repository</id>\r\n			<name>Red Hat JBoss Early Access Repository</name>\r\n			<url>http://repository.jboss.org/nexus/content/groups/ea</url>\r\n		</pluginRepository>\r\n	</pluginRepositories>\r\n\r\n	<build>\r\n		<plugins>\r\n      <!-- Allows the routes to be run via 'mvn camel:run' -->\r\n      <plugin>\r\n        <groupId>org.apache.camel</groupId>\r\n        <artifactId>camel-maven-plugin</artifactId>\r\n  			<configuration>\r\n    			<applicationContextUri>OSGI-INF/blueprint/blueprint.xml</applicationContextUri>\r\n  			</configuration>\r\n	    </plugin>\r\n		</plugins>\r\n	</build>\r\n\r\n  <description>Empty Camel Blueprint Example</description>\r\n</project>\r\n"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didOpen: TextDocumentItem [
  uri = "git:/e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml.git?%7B%22path%22%3A%22e%3A%5C%5CUsers%5C%5Cbfitzpat%5C%5Cgithub%5C%5Cgenerator-fuse-project%5C%5Capp%5C%5Ctemplates%5C%5Cblueprint%5C%5Cpom.xml%22%2C%22ref%22%3A%22%22%7D"
  languageId = "xml"
  version = 1
  text = "<?xml version="1.0" encoding="UTF-8"?>\n<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"\n    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">\n  <modelVersion>4.0.0</modelVersion>\n\n	<groupId><%= userProps.package %></groupId>\n	<artifactId><%= userProps.name %></artifactId>\n	<version>1.0.0-SNAPSHOT</version>\n	<packaging>jar</packaging>\n\n  <name><%= userProps.name %></name>\n\n  <licenses>\n    <license>\n      <name>Apache License, Version 2.0</name>\n      <url>http://www.apache.org/licenses/LICENSE-2.0.html</url>\n      <distribution>repo</distribution>\n    </license>\n  </licenses>\n\n  <properties>\n		<camel.version><%= userProps.camelVersion %></camel.version>\n    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\n    <version.maven-bundle-plugin>3.2.0</version.maven-bundle-plugin>\n    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n  </properties>\n\n  <dependencies>\n    <dependency>\n      <groupId>org.apache.camel</groupId>\n      <artifactId>camel-core</artifactId>\n      <version>${camel.version}</version>\n    </dependency>\n    <dependency>\n      <groupId>org.apache.camel</groupId>\n      <artifactId>camel-blueprint</artifactId>\n      <version>${camel.version}</version>\n    </dependency>\n    <dependency>\n      <groupId>org.apache.camel</groupId>\n      <artifactId>camel-test-blueprint</artifactId>\n      <version>${camel.version}</version>\n      <scope>test</scope>\n    </dependency>\n  </dependencies>\n  \n	<repositories>\n		<repository>\n			<id>fuse-public-repository</id>\n			<name>FuseSource Community Release Repository</name>\n			<url>https://repo.fusesource.com/nexus/content/groups/public</url>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n		</repository>\n		<repository>\n			<id>red-hat-ga-repository</id>\n			<name>Red Hat GA Repository</name>\n			<url>https://maven.repository.redhat.com/ga</url>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n		</repository>\n		<repository>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n			<id>red-hat-ea-repository</id>\n			<name>Red Hat EA Repository</name>\n			<url>https://maven.repository.redhat.com/earlyaccess/all</url>\n		</repository>\n		<!-- To remove when a long-term version will be available -->\n		<repository>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n			<id>jboss-ea-repository</id>\n			<name>Red Hat JBoss Early Access Repository</name>\n			<url>http://repository.jboss.org/nexus/content/groups/ea</url>\n		</repository>\n	</repositories>\n\n	<pluginRepositories>\n		<pluginRepository>\n			<id>fuse-public-repository</id>\n			<name>FuseSource Community Release Repository</name>\n			<url>https://repo.fusesource.com/nexus/content/groups/public</url>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n		</pluginRepository>\n		<pluginRepository>\n			<id>red-hat-ga-repository</id>\n			<name>Red Hat GA Repository</name>\n			<url>https://maven.repository.redhat.com/ga</url>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n		</pluginRepository>\n				<pluginRepository>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n			<id>red-hat-ea-repository</id>\n			<name>Red Hat EA Repository</name>\n			<url>https://maven.repository.redhat.com/earlyaccess/all</url>\n		</pluginRepository>\n		<!-- To remove when a long-term version will be available -->\n		<pluginRepository>\n			<releases>\n				<enabled>true</enabled>\n				<updatePolicy>never</updatePolicy>\n			</releases>\n			<snapshots>\n				<enabled>false</enabled>\n			</snapshots>\n			<id>jboss-ea-repository</id>\n			<name>Red Hat JBoss Early Access Repository</name>\n			<url>http://repository.jboss.org/nexus/content/groups/ea</url>\n		</pluginRepository>\n	</pluginRepositories>\n\n	<build>\n		<plugins>\n      <!-- Allows the routes to be run via 'mvn camel:run' -->\n      <plugin>\n        <groupId>org.apache.camel</groupId>\n        <artifactId>camel-maven-plugin</artifactId>\n  			<configuration>\n    			<applicationContextUri>OSGI-INF/blueprint/blueprint.xml</applicationContextUri>\n  			</configuration>\n	    </plugin>\n		</plugins>\n	</build>\n\n  <description>Empty Camel Blueprint Example</description>\n</project>\n"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 2
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 3
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 4
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 5
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 6
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 7
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 9
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 10
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 11
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 12
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 13
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 14
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 15
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 16
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 17
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 18
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 19
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 20
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 21
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 22
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 23
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 24
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 25
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 26
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 27
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 28
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 29
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 30
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 31
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 32
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 33
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 34
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 35
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 36
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 37
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 38
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 39
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 40
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 41
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 42
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 43
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 44
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 45
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 46
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 47
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 48
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 49
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 50
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 51
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 52
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 53
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 54
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 55
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 56
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 57
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 58
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 59
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 60
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 61
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 62
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 63
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 64
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 65
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 66
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 67
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 68
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 69
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 70
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 71
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 72
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 73
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 74
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 75
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 76
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 77
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 78
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 79
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 80
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 81
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 82
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 83
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 84
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 85
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 86
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 87
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 88
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 89
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 90
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 91
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 92
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 93
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 94
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 95
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 96
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 97
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 98
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 99
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 100
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 101
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 102
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 103
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 104
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 105
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 106
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 107
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 108
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 109
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didSave: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
SERVER: changeWatchedFiles: size -> 1
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
SERVER: changeWatchedFiles: size -> 1
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
SERVER: changeWatchedFiles: size -> 2
SERVER: changeWatchedFiles: size -> 1
SERVER: changeWatchedFiles: size -> 1
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 6; columnNumber: 12; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didOpen: TextDocumentItem [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
  languageId = "xml"
  version = 1
  text = "<?xml version="1.0" encoding="UTF-8"?>\r\n<!--\r\n    Copyright 2014-2017, Red Hat, Inc. and/or its affiliates, and individual\r\n    contributors by the @authors tag. \r\n    Licensed under the Apache License, Version 2.0 (the "License");\r\n    you may not use this file except in compliance with the License.\r\n    You may obtain a copy of the License at\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n    Unless required by applicable law or agreed to in writing, software\r\n    distributed under the License is distributed on an "AS IS" BASIS,\r\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n    See the License for the specific language governing permissions and\r\n    limitations under the License.\r\n-->\r\n<!-- Configures the Camel Context-->\r\n<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"\r\n    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 https://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd                            http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">\r\n    <camelContext id="_context1" xmlns="http://camel.apache.org/schema/blueprint">\r\n        <route id="_route1">\r\n            <from uri="timer://simpleTimer?period=1000"/>\r\n            <setBody>\r\n                <simple>Hello from timer at ${header.firedTime}></simple>\r\n            </setBody>\r\n            <to uri="stream:out"/>\r\n        </route>\r\n    </camelContext>\r\n</beans>"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
didClose: TextDocumentIdentifier [
  uri = "git:/e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml.git?%7B%22path%22%3A%22e%3A%5C%5CUsers%5C%5Cbfitzpat%5C%5Cgithub%5C%5Cgenerator-fuse-project%5C%5Capp%5C%5Ctemplates%5C%5Cblueprint%5C%5Cpom.xml%22%2C%22ref%22%3A%22%22%7D"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 27; columnNumber: 3; The element type "blueprint" must be terminated by the matching end-tag "</blueprint>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didOpen: TextDocumentItem [
  uri = "git:/e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/src/main/resources/OSGI-INF/blueprint/blueprint.xml.git?%7B%22path%22%3A%22e%3A%5C%5CUsers%5C%5Cbfitzpat%5C%5Cgithub%5C%5Cgenerator-fuse-project%5C%5Capp%5C%5Ctemplates%5C%5Cblueprint%5C%5Csrc%5C%5Cmain%5C%5Cresources%5C%5COSGI-INF%5C%5Cblueprint%5C%5Cblueprint.xml%22%2C%22ref%22%3A%22%22%7D"
  languageId = "xml"
  version = 1
  text = "<?xml version="1.0" encoding="UTF-8"?>\n<!--\n    Copyright 2014-2017, Red Hat, Inc. and/or its affiliates, and individual\n    contributors by the @authors tag. \n    Licensed under the Apache License, Version 2.0 (the "License");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n    http://www.apache.org/licenses/LICENSE-2.0\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an "AS IS" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n-->\n<!-- Configures the Camel Context-->\n<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"\n    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 https://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd                            http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">\n    <camelContext id="_context1" xmlns="http://camel.apache.org/schema/blueprint">\n        <route id="_route1">\n        </route>\n    </camelContext>\n</beans>"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 27; columnNumber: 3; The element type "blueprint" must be terminated by the matching end-tag "</blueprint>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didClose: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
didOpen: TextDocumentItem [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
  languageId = "xml"
  version = 1
  text = "<?xml version="1.0" encoding="UTF-8"?>\r\n<!--\r\n    Copyright 2014-2017, Red Hat, Inc. and/or its affiliates, and individual\r\n    contributors by the @authors tag. \r\n    Licensed under the Apache License, Version 2.0 (the "License");\r\n    you may not use this file except in compliance with the License.\r\n    You may obtain a copy of the License at\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n    Unless required by applicable law or agreed to in writing, software\r\n    distributed under the License is distributed on an "AS IS" BASIS,\r\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n    See the License for the specific language governing permissions and\r\n    limitations under the License.\r\n-->\r\n<!-- Configures the Camel Context-->\r\n<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"\r\n    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 https://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd                            http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">\r\n    <camelContext id="_context1" xmlns="http://camel.apache.org/schema/blueprint">\r\n        <route id="_route1">\r\n            <from uri="timer://simpleTimer?period=1000"/>\r\n            <setBody>\r\n                <simple>Hello from timer at ${header.firedTime}></simple>\r\n            </setBody>\r\n            <to uri="stream:out"/>\r\n        </route>\r\n    </camelContext>\r\n</beans>"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
didClose: TextDocumentIdentifier [
  uri = "git:/e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/src/main/resources/OSGI-INF/blueprint/blueprint.xml.git?%7B%22path%22%3A%22e%3A%5C%5CUsers%5C%5Cbfitzpat%5C%5Cgithub%5C%5Cgenerator-fuse-project%5C%5Capp%5C%5Ctemplates%5C%5Cblueprint%5C%5Csrc%5C%5Cmain%5C%5Cresources%5C%5COSGI-INF%5C%5Cblueprint%5C%5Cblueprint.xml%22%2C%22ref%22%3A%22%22%7D"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 27; columnNumber: 3; The element type "blueprint" must be terminated by the matching end-tag "</blueprint>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didClose: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/app/templates/blueprint/pom.xml"
]
didClose: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
didOpen: TextDocumentItem [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/pom.xml"
  languageId = "xml"
  version = 1
  text = "<?xml version="1.0" encoding="UTF-8"?>\r\n<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"\r\n    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">\r\n  <modelVersion>4.0.0</modelVersion>\r\n\r\n	<groupId>com.mydemo</groupId>\r\n	<artifactId>mydemo</artifactId>\r\n	<version>1.0.0-SNAPSHOT</version>\r\n	<packaging>jar</packaging>\r\n\r\n  <name>mydemo</name>\r\n\r\n  <licenses>\r\n    <license>\r\n      <name>Apache License, Version 2.0</name>\r\n      <url>http://www.apache.org/licenses/LICENSE-2.0.html</url>\r\n      <distribution>repo</distribution>\r\n    </license>\r\n  </licenses>\r\n\r\n  <properties>\r\n		<camel.version>2.18.1</camel.version>\r\n    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\r\n    <version.maven-bundle-plugin>3.2.0</version.maven-bundle-plugin>\r\n    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n  </properties>\r\n\r\n  <dependencies>\r\n    <dependency>\r\n      <groupId>org.apache.camel</groupId>\r\n      <artifactId>camel-core</artifactId>\r\n      <version>${camel.version}</version>\r\n    </dependency>\r\n    <dependency>\r\n      <groupId>org.apache.camel</groupId>\r\n      <artifactId>camel-blueprint</artifactId>\r\n      <version>${camel.version}</version>\r\n    </dependency>\r\n		<dependency>\r\n			<groupId>org.apache.camel</groupId>\r\n			<artifactId>camel-stream</artifactId>\r\n      		<version>${camel.version}</version>\r\n		</dependency>\r\n\r\n		<!-- Testing & Camel Plugin -->\r\n    <dependency>\r\n      <groupId>org.apache.camel</groupId>\r\n      <artifactId>camel-test-blueprint</artifactId>\r\n      <version>${camel.version}</version>\r\n      <scope>test</scope>\r\n			<exclusions>\r\n				<exclusion>\r\n					<groupId>org.apache.felix</groupId>\r\n					<artifactId>org.apache.felix.fileinstall</artifactId>\r\n				</exclusion>\r\n			</exclusions>\r\n    </dependency>\r\n  </dependencies>\r\n  \r\n	<repositories>\r\n		<repository>\r\n			<id>fuse-public-repository</id>\r\n			<name>FuseSource Community Release Repository</name>\r\n			<url>https://repo.fusesource.com/nexus/content/groups/public</url>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n		</repository>\r\n		<repository>\r\n			<id>red-hat-ga-repository</id>\r\n			<name>Red Hat GA Repository</name>\r\n			<url>https://maven.repository.redhat.com/ga</url>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n		</repository>\r\n		<repository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>red-hat-ea-repository</id>\r\n			<name>Red Hat EA Repository</name>\r\n			<url>https://maven.repository.redhat.com/earlyaccess/all</url>\r\n		</repository>\r\n		<!-- To remove when a long-term version will be available -->\r\n		<repository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>jboss-ea-repository</id>\r\n			<name>Red Hat JBoss Early Access Repository</name>\r\n			<url>http://repository.jboss.org/nexus/content/groups/ea</url>\r\n		</repository>\r\n	</repositories>\r\n\r\n	<pluginRepositories>\r\n		<pluginRepository>\r\n			<id>fuse-public-repository</id>\r\n			<name>FuseSource Community Release Repository</name>\r\n			<url>https://repo.fusesource.com/nexus/content/groups/public</url>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n		</pluginRepository>\r\n		<pluginRepository>\r\n			<id>red-hat-ga-repository</id>\r\n			<name>Red Hat GA Repository</name>\r\n			<url>https://maven.repository.redhat.com/ga</url>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n		</pluginRepository>\r\n				<pluginRepository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>red-hat-ea-repository</id>\r\n			<name>Red Hat EA Repository</name>\r\n			<url>https://maven.repository.redhat.com/earlyaccess/all</url>\r\n		</pluginRepository>\r\n		<!-- To remove when a long-term version will be available -->\r\n		<pluginRepository>\r\n			<releases>\r\n				<enabled>true</enabled>\r\n				<updatePolicy>never</updatePolicy>\r\n			</releases>\r\n			<snapshots>\r\n				<enabled>false</enabled>\r\n			</snapshots>\r\n			<id>jboss-ea-repository</id>\r\n			<name>Red Hat JBoss Early Access Repository</name>\r\n			<url>http://repository.jboss.org/nexus/content/groups/ea</url>\r\n		</pluginRepository>\r\n	</pluginRepositories>\r\n\r\n<build>\r\n	<defaultGoal>install</defaultGoal>\r\n		<plugins>\r\n			<plugin>\r\n				<groupId>org.apache.felix</groupId>\r\n				<artifactId>maven-bundle-plugin</artifactId>\r\n				<version>${version.maven-bundle-plugin}</version>\r\n				<extensions>true</extensions>\r\n			</plugin>\r\n			<plugin>\r\n				<groupId>org.apache.maven.plugins</groupId>\r\n				<artifactId>maven-compiler-plugin</artifactId>\r\n				<version>3.7.0</version>\r\n				<configuration>\r\n					<source>1.8</source>\r\n					<target>1.8</target>\r\n				</configuration>\r\n			</plugin>\r\n			<plugin>\r\n				<groupId>org.apache.maven.plugins</groupId>\r\n				<artifactId>maven-resources-plugin</artifactId>\r\n				<version>3.0.2</version>\r\n				<configuration>\r\n					<encoding>UTF-8</encoding>\r\n				</configuration>\r\n			</plugin>\r\n\r\n			<!-- to run the example using mvn camel:run -->\r\n			<plugin>\r\n				<groupId>org.apache.camel</groupId>\r\n				<artifactId>camel-maven-plugin</artifactId>\r\n				<version>${camel.version}</version>\r\n				<configuration>\r\n					<useBlueprint>true</useBlueprint>\r\n				</configuration>\r\n			</plugin>\r\n		</plugins>\r\n	</build>\r\n\r\n  <description>Empty Camel Blueprint Example</description>\r\n</project>\r\n"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/pom.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/pom.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/pom.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/pom.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/pom.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/pom.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/pom.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/pom.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/pom.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/pom.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/pom.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/pom.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 2
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/pom.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 3
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/pom.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/pom.xml"
]
didSave: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/pom.xml"
]
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/pom.xml"
]
SERVER: changeWatchedFiles: size -> 1
SERVER: changeWatchedFiles: size -> 1
SERVER: changeWatchedFiles: size -> 1
SERVER: changeWatchedFiles: size -> 1
didOpen: TextDocumentItem [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
  languageId = "xml"
  version = 1
  text = "<?xml version="1.0" encoding="UTF-8"?>\r\n<!--\r\n    Copyright 2014-2017, Red Hat, Inc. and/or its affiliates, and individual\r\n    contributors by the @authors tag. \r\n    Licensed under the Apache License, Version 2.0 (the "License");\r\n    you may not use this file except in compliance with the License.\r\n    You may obtain a copy of the License at\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n    Unless required by applicable law or agreed to in writing, software\r\n    distributed under the License is distributed on an "AS IS" BASIS,\r\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n    See the License for the specific language governing permissions and\r\n    limitations under the License.\r\n-->\r\n<!-- Configures the Camel Context-->\r\n<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"\r\n    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 https://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd                            http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">\r\n    <camelContext id="_context1" xmlns="http://camel.apache.org/schema/blueprint">\r\n        <route id="_route1">\r\n            <from uri="timer://simpleTimer?period=1000"/>\r\n            <setBody>\r\n                <simple>Hello from timer at ${header.firedTime}></simple>\r\n            </setBody>\r\n            <to uri="stream:out"/>\r\n        </route>\r\n    </camelContext>\r\n</beans>"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 27; columnNumber: 3; The element type "blueprint" must be terminated by the matching end-tag "</blueprint>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 27; columnNumber: 3; The element type "blueprint" must be terminated by the matching end-tag "</blueprint>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 27; columnNumber: 3; The element type "blueprint" must be terminated by the matching end-tag "</blueprint>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 27; columnNumber: 3; The element type "blueprint" must be terminated by the matching end-tag "</blueprint>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 2
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 3
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/resources/OSGI-INF/blueprint/blueprint.xml
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 19; columnNumber: 30; Attribute name "a" associated with an element type "route" must be followed by the ' = ' character.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.completion.CamelEndpointCompletionProcessor.getCompletions(CamelEndpointCompletionProcessor.java:49)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.completion(CamelTextDocumentService.java:84)
	at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 6
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 9
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/resources/OSGI-INF/blueprint/blueprint.xml
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 19; columnNumber: 36; Attribute name "autoSta" associated with an element type "route" must be followed by the ' = ' character.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.completion.CamelEndpointCompletionProcessor.getCompletions(CamelEndpointCompletionProcessor.java:49)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.completion(CamelTextDocumentService.java:84)
	at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 10
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/resources/OSGI-INF/blueprint/blueprint.xml
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 19; columnNumber: 37; Attribute name "autoStar" associated with an element type "route" must be followed by the ' = ' character.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.completion.CamelEndpointCompletionProcessor.getCompletions(CamelEndpointCompletionProcessor.java:49)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.completion(CamelTextDocumentService.java:84)
	at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 11
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/resources/OSGI-INF/blueprint/blueprint.xml
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 19; columnNumber: 38; Attribute name "autoStart" associated with an element type "route" must be followed by the ' = ' character.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.completion.CamelEndpointCompletionProcessor.getCompletions(CamelEndpointCompletionProcessor.java:49)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.completion(CamelTextDocumentService.java:84)
	at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 12
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/resources/OSGI-INF/blueprint/blueprint.xml
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 19; columnNumber: 39; Attribute name "autoStartu" associated with an element type "route" must be followed by the ' = ' character.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.completion.CamelEndpointCompletionProcessor.getCompletions(CamelEndpointCompletionProcessor.java:49)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.completion(CamelTextDocumentService.java:84)
	at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 13
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/resources/OSGI-INF/blueprint/blueprint.xml
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 19; columnNumber: 40; Attribute name "autoStartup" associated with an element type "route" must be followed by the ' = ' character.
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.completion.CamelEndpointCompletionProcessor.getCompletions(CamelEndpointCompletionProcessor.java:49)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.completion(CamelTextDocumentService.java:84)
	at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 14
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/resources/OSGI-INF/blueprint/blueprint.xml
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 19; columnNumber: 41; Open quote is expected for attribute "autoStartup" associated with an  element type  "route".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.completion.CamelEndpointCompletionProcessor.getCompletions(CamelEndpointCompletionProcessor.java:49)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.completion(CamelTextDocumentService.java:84)
	at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 15
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/resources/OSGI-INF/blueprint/blueprint.xml
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 27; columnNumber: 3; The element type "blueprint" must be terminated by the matching end-tag "</blueprint>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.completion.CamelEndpointCompletionProcessor.getCompletions(CamelEndpointCompletionProcessor.java:49)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.completion(CamelTextDocumentService.java:84)
	at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 19
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
didChange: VersionedTextDocumentIdentifier [
  version = 20
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
completion: file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/resources/OSGI-INF/blueprint/blueprint.xml
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 27; columnNumber: 3; The element type "blueprint" must be terminated by the matching end-tag "</blueprint>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.completion.CamelEndpointCompletionProcessor.getCompletions(CamelEndpointCompletionProcessor.java:49)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.completion(CamelTextDocumentService.java:84)
	at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 27; columnNumber: 3; The element type "blueprint" must be terminated by the matching end-tag "</blueprint>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didSave: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
SERVER: changeWatchedFiles: size -> 1
SERVER: changeWatchedFiles: size -> 1
SERVER: changeWatchedFiles: size -> 1
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 27; columnNumber: 3; The element type "blueprint" must be terminated by the matching end-tag "</blueprint>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 21
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 27; columnNumber: 3; The element type "blueprint" must be terminated by the matching end-tag "</blueprint>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didSave: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
SERVER: changeWatchedFiles: size -> 1
SERVER: changeWatchedFiles: size -> 1
SERVER: changeWatchedFiles: size -> 1
SERVER: changeWatchedFiles: size -> 1
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 27; columnNumber: 3; The element type "blueprint" must be terminated by the matching end-tag "</blueprint>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 27; columnNumber: 3; The element type "blueprint" must be terminated by the matching end-tag "</blueprint>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 27; columnNumber: 3; The element type "blueprint" must be terminated by the matching end-tag "</blueprint>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
hover: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
Exception while trying to parse the file
org.xml.sax.SAXParseException; lineNumber: 27; columnNumber: 3; The element type "blueprint" must be terminated by the matching end-tag "</blueprint>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getCorrespondingCamelNodeForCompletion(ParserXMLFileHelper.java:81)
	at com.github.cameltooling.lsp.internal.parser.ParserFileHelperFactory.getCorrespondingParserFileHelper(ParserFileHelperFactory.java:26)
	at com.github.cameltooling.lsp.internal.hover.HoverProcessor.getHover(HoverProcessor.java:45)
	at com.github.cameltooling.lsp.internal.CamelTextDocumentService.hover(CamelTextDocumentService.java:97)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:61)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:116)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:257)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:186)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:188)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:90)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:95)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 22
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 31; columnNumber: 3; The element type "blueprint" must be terminated by the matching end-tag "</blueprint>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 23
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 32; columnNumber: 3; The element type "blueprint" must be terminated by the matching end-tag "</blueprint>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 24
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 32; columnNumber: 3; The element type "blueprint" must be terminated by the matching end-tag "</blueprint>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 25
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 32; columnNumber: 3; The element type "blueprint" must be terminated by the matching end-tag "</blueprint>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 26
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 32; columnNumber: 3; The element type "blueprint" must be terminated by the matching end-tag "</blueprint>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 27
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 32; columnNumber: 3; The element type "blueprint" must be terminated by the matching end-tag "</blueprint>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didChange: VersionedTextDocumentIdentifier [
  version = 28
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
documentSymbol: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
Cannot determine document symbols
org.xml.sax.SAXParseException; lineNumber: 27; columnNumber: 3; The element type "blueprint" must be terminated by the matching end-tag "</blueprint>".
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.hasElementFromCamelNamespace(ParserXMLFileHelper.java:97)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getNodesOfType(ParserXMLFileHelper.java:144)
	at com.github.cameltooling.lsp.internal.parser.ParserXMLFileHelper.getRouteNodes(ParserXMLFileHelper.java:136)
	at com.github.cameltooling.lsp.internal.documentsymbol.DocumentSymbolProcessor.lambda$getDocumentSymbols$0(DocumentSymbolProcessor.java:54)
	at java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)
	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(Unknown Source)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
didSave: TextDocumentIdentifier [
  uri = "file:///e%3A/Users/bfitzpat/github/generator-fuse-project/mydemo/src/main/resources/OSGI-INF/blueprint/blueprint.xml"
]
SERVER: changeWatchedFiles: size -> 1
